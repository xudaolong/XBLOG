{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"themes/maupassant/source/css/jquery.fancybox.css","path":"css/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/maupassant/source/css/style.scss","path":"css/style.scss","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","path":"js/codeblock-resizer.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/fancybox.js","path":"js/fancybox.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/share.js","path":"js/share.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/smartresize.js","path":"js/smartresize.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/totop.js","path":"js/totop.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/favicon.ico","hash":"8520a68e3d942c9b0df568960ff98ccaf9784b1f","modified":1482973787000},{"_id":"themes/maupassant/.travis.yml","hash":"0339959f29deddc365e8fe8bd85da524410b9a23","modified":1485415864000},{"_id":"themes/maupassant/LICENSE","hash":"019dc6a9aba02ae3aaabca45f39aecd6e8e7f1d8","modified":1485415864000},{"_id":"themes/maupassant/README.md","hash":"75d8c42569809961953d1934de445418c00ab94c","modified":1485415864000},{"_id":"themes/maupassant/_config.yml","hash":"17eef993e7d81691e2a023b5abc1c78c5847ee8d","modified":1485416867000},{"_id":"themes/maupassant/package.json","hash":"81fb4e2ac051ecfb9a93f37b28910291b939771a","modified":1485415864000},{"_id":"themes/maupassant/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1485415864000},{"_id":"themes/maupassant/.git/config","hash":"037345b11c41abb3dbbbd6e0242ced24979a7097","modified":1485415864000},{"_id":"themes/maupassant/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1485415859000},{"_id":"themes/maupassant/.git/index","hash":"114e958526573a1cd31c527d8e5079e2e5efb8e3","modified":1485417183000},{"_id":"themes/maupassant/.git/packed-refs","hash":"965458983a3bb3e282036aa5812345d6370fe31d","modified":1485415864000},{"_id":"themes/maupassant/languages/de-DE.yml","hash":"5d3556a885e355a8c2da65ef3e7b3ee36a628bfa","modified":1485415864000},{"_id":"themes/maupassant/languages/en.yml","hash":"e13ab1a2d2f1edbe67b4c035fd4667cb6a31db8e","modified":1485415864000},{"_id":"themes/maupassant/languages/es-ES.yml","hash":"58e1d04bcd1834fa9d2960e18e027abbbccbedc9","modified":1485415864000},{"_id":"themes/maupassant/languages/fr-FR.yml","hash":"b47906ec0abf867fb3e3360bc046b7afb68aee25","modified":1485415864000},{"_id":"themes/maupassant/languages/ko.yml","hash":"909a33e0befa6978e8e72157c6b415b48551ee31","modified":1485415864000},{"_id":"themes/maupassant/languages/zh-CN.yml","hash":"ebacfa5d0c14d603e0d505757adb24c0bbe5dd13","modified":1485415864000},{"_id":"themes/maupassant/languages/zh-TW.yml","hash":"56b65995c60e99dcebbf00168447fd225d28e5b2","modified":1485415864000},{"_id":"themes/maupassant/layout/base-without-sidebar.jade","hash":"690fee04231b2e6721580516849f7b80cf42be94","modified":1485415864000},{"_id":"themes/maupassant/layout/archive.jade","hash":"0050c883b4f202add71c8664d65e6072179e7190","modified":1485415864000},{"_id":"themes/maupassant/layout/base.jade","hash":"99259568f4cc21bd825772b4cb84be2b29b78fa5","modified":1485415864000},{"_id":"themes/maupassant/layout/page.jade","hash":"8d70fd3b93f2c9087a9ea7ec538dcc1d413bea01","modified":1485415864000},{"_id":"themes/maupassant/layout/index.jade","hash":"f842164f6cba007c1dfcd7fe7bba24736bc886a9","modified":1485415864000},{"_id":"themes/maupassant/layout/post.jade","hash":"9cf29fb0daed95935154ce0fa2b154df5a9b11b1","modified":1485415864000},{"_id":"themes/maupassant/layout/single-column.jade","hash":"c35fff4d9b331a41af5bc10f4278ec3d9da503db","modified":1485415864000},{"_id":"themes/maupassant/layout/timeline.jade","hash":"f03d8df63a188543cfe4e85e76194abe081411a1","modified":1485415864000},{"_id":"source/_posts/Git-套路/git-代码提交.md","hash":"cbe9ede8cc7faea31006c15e5f724a502c3afdce","modified":1485418670000},{"_id":"source/_posts/Git-套路/git-分支.md","hash":"0e7d285be2834bd38dc232d74cc1548c3788228c","modified":1485418670000},{"_id":"source/_posts/Git-套路/git-增加-删除文件.md","hash":"c06d25dc3b99241973c39440edfdd3fd28f95c37","modified":1485418670000},{"_id":"source/_posts/Git-套路/git-忽略上传--gitignore.md","hash":"5a4dcff1734c9021ca8236c97de2b79f60cd8cda","modified":1485418670000},{"_id":"source/_posts/Git-套路/git-撤销.md","hash":"b73bd7e3ddec54caffa924f1b4f01f7dbafd7269","modified":1485418670000},{"_id":"source/_posts/Git-套路/git-查看信息.md","hash":"ec265925a3a2a2c04cf43d5e8bab57be9cd466b7","modified":1485418670000},{"_id":"source/_posts/Git-套路/git-标签.md","hash":"f3ee918fdde3d7cf1f67df9b3a02a2746722fe4b","modified":1485418670000},{"_id":"source/_posts/Git-套路/git-远程同步.md","hash":"e1368d730aafe91e36d21e6d4c9e5efa9cbe3189","modified":1485418670000},{"_id":"source/_posts/Git-套路/git-SSH-keys.md","hash":"5ba59edc804e1b6b675df6f1776bff0d678f03d0","modified":1485418670000},{"_id":"source/_posts/Git-套路/git-配置.md","hash":"ee4ab840269a016ec6058cd516cad29144dccb03","modified":1485418670000},{"_id":"source/_posts/Java-套路/java-castor-与XML的数据绑定.md","hash":"89cf931216c2aea76354b9bf2d571280e4484df4","modified":1485418670000},{"_id":"source/_posts/Git-套路/git-压缩包.md","hash":"a182dde4025baa1528f00c0b0842e3d1d98f98f4","modified":1485418670000},{"_id":"source/_posts/Java-套路/java-fastjson-解析json配置文件.md","hash":"4c93d86c64bf2aa548757a969966f23664ec8c8c","modified":1485418670000},{"_id":"source/_posts/Git-套路/git-新建代码库.md","hash":"9a2bb032e0421b0fe644362945f6c918d769d416","modified":1485418670000},{"_id":"source/_posts/Java-套路/java-maven-pom-xml.md","hash":"19a8ac660fb2cd10b532185ac6ca6dd540875c03","modified":1485418670000},{"_id":"source/_posts/Java-套路/java-搜罗-分析具体项目中使用的包.md","hash":"bdcbe107aff0ce25d16c234635cda908e3b07506","modified":1485418670000},{"_id":"source/_posts/Java-套路/java-ArrayList和LinkedList的几种循环遍历方式.md","hash":"17027de0c6b5ea3543fee6f0cd9d5c00d852c363","modified":1485418670000},{"_id":"source/_posts/Java-套路/java-获取当前文件-class-的相对或绝对路径.md","hash":"8d6a622e27ce1622ebb1b508b82ce405e5de0e65","modified":1485418670000},{"_id":"source/_posts/Java-套路/java-intell-IDEA-配置-tomcat.html","hash":"1473ae1ec05201a8c346cfc7430d74ea34a31df1","modified":1485418670000},{"_id":"source/_posts/Java-套路/java-图片切割.md","hash":"7a32dadcd65bc0a0816fbe3a7b8783c2efa3945c","modified":1485418670000},{"_id":"source/_posts/Java-套路/java-测试项目的流程.md","hash":"9af3732cedd398563af83b3002e6402d0b98fde4","modified":1485418670000},{"_id":"source/_posts/Javascript-Promise-套路/js-Promise-catch.md","hash":"7a4118eac421c88c2272841a9b76341f28c8e871","modified":1485418670000},{"_id":"source/_posts/Javascript-Promise-套路/js-Promise-race.md","hash":"d295cc0210779ee44437323456788b7aa66c3905","modified":1485418670000},{"_id":"source/_posts/Javascript-Promise-套路/js-Promise-resolve().md","hash":"04692d0a40317b7011f7f294c3940bc516a92a5a","modified":1485418670000},{"_id":"source/_posts/Java-套路/java-项目目录结构分析.md","hash":"890b89c780e2982805ac27b4ed79836b789bb8e0","modified":1485418670000},{"_id":"source/_posts/Javascript-Promise-套路/js-Promise-Thenable.md","hash":"9fa56ceb5742ed423e6885c8a123db19686cc93d","modified":1485418670000},{"_id":"source/_posts/Javascript-Promise-套路/js-Promise-解决地狱回调.md","hash":"4475f4ed582eeaade3bcb21924f321da49686a4e","modified":1485418670000},{"_id":"source/_posts/Javascript-Promise-套路/js-Promise-all.md","hash":"b4157acb1c630c51a817b895491cac6efdb6b892","modified":1485418670000},{"_id":"source/_posts/Javascript-Promise-套路/js-Promise.md","hash":"343c107485d7e3fcf9c5eefaed34261f317196e4","modified":1485418670000},{"_id":"source/_posts/Javascript-Promise-套路/js-Promise-传值.md","hash":"d0df20f7575dd352fa73cd50d146de2dca7f023c","modified":1485418670000},{"_id":"source/_posts/Javascript-array-套路/js-array-reduce.md","hash":"adf3bd69e09c00407ca01dc608c2a6282556f346","modified":1485418670000},{"_id":"source/_posts/Javascript-array-套路/js-array-填充数组.md","hash":"fe14f035acf5d73d97d1e4c62f080079ee41613c","modified":1485418670000},{"_id":"source/_posts/Javascript-Promise-套路/js-Promise-简介及例子.md","hash":"fd3daf1c01dded6b5b3fdef74267ba96ef4168b9","modified":1485418670000},{"_id":"source/_posts/Javascript-array-套路/js-array-Array-of-转换数组.md","hash":"e3cc55d3301740b34830b375991741b442ae3f80","modified":1485418670000},{"_id":"source/_posts/Javascript-array-套路/js-array-api-常用.md","hash":"e94abc1e36ce56f9993482cea4cb73bbb4aa62aa","modified":1485418670000},{"_id":"source/_posts/Javascript-array-套路/js-array-生成数组.md","hash":"301ce52ff00687a2d44a31f435462928a94f7424","modified":1485418670000},{"_id":"source/_posts/Javascript-array-套路/js-array-遍历数组.md","hash":"ab93687cb8275357269d2f89173195bedef9f098","modified":1485418670000},{"_id":"source/_posts/Javascript-array-套路/js-json-转换.md","hash":"abf841d6d32928df718cb6b5f29f622900407df7","modified":1485418670000},{"_id":"source/_posts/Javascript-套路/js-&&-和----用法.md","hash":"275813a6d6838df42e61fafe0da42022b08b4a5a","modified":1485418670000},{"_id":"source/_posts/Javascript-套路/js-IIFE--立即调用的函数表达式.md","hash":"b897d16c4cacee06c50a0b393324fb2bb4d0dd92","modified":1485418670000},{"_id":"source/_posts/Javascript-套路/js-Reflect.md","hash":"5175a68ae19a52db5d12050f9ebca202a3a40f7c","modified":1485418670000},{"_id":"source/_posts/Javascript-array-套路/js-array-复制数组.md","hash":"d02ec0c5697505ff55aca487f7bb674ae73f44ef","modified":1485418670000},{"_id":"source/_posts/Javascript-套路/js-es6-对象解构赋值.md","hash":"1c873b106c99d3037c8cb4440dd1a72fddee0403","modified":1485418670000},{"_id":"source/_posts/Javascript-套路/js-Set-简介.md","hash":"091d061748c1485057e408796b38ffaf2423ed6b","modified":1485418670000},{"_id":"source/_posts/Javascript-套路/js-Symbol-介绍及应用.md","hash":"73ebee9bc3108e6e70bcda097d3f8ab734af86fb","modified":1485418670000},{"_id":"source/_posts/Javascript-套路/js-es6-数组解构赋值.md","hash":"68064323ef2bec84ac368f0b16d73b6226cf46e0","modified":1485418670000},{"_id":"source/_posts/Javascript-套路/js-module-多种模式的开发.md","hash":"7b9edf7b4e18aeb0aadf1afcd3b7f488fd5a8d3f","modified":1485418670000},{"_id":"source/_posts/Javascript-套路/js-export.md","hash":"62d3ebd9ff9b22da086f8b203410b47ba26c1075","modified":1485418670000},{"_id":"source/_posts/Javascript-套路/js-对象简写.md","hash":"1cd6274ece3865d53735c6de699a939d95975ac6","modified":1485418670000},{"_id":"source/_posts/Javascript-套路/js-类型的转换.md","hash":"10aa51851af6dc9b84a20809048f9e90dab560a1","modified":1485418670000},{"_id":"source/_posts/Javascript-套路/js-数据属性和访问器属性.md","hash":"ac9b7c9b4e1b6db895b6cdc4d8706a3a87feeaf1","modified":1485418670000},{"_id":"source/_posts/Javascript-套路/js-时间--测试函数.md","hash":"e025ad533121e832ec3e61b3bef0b3c0dabc597a","modified":1485418670000},{"_id":"source/_posts/Javascript-套路/js-管理私有属性.md","hash":"445eeb371d3c2986d236d64aef41ad7ab9261134","modified":1485418670000},{"_id":"source/_posts/Javascript-套路/js-闭包理解---缺乏形参.md","hash":"ab13582ca8788a5e3d99f9c1c0f8d841f9eb7ba8","modified":1485418670000},{"_id":"source/_posts/Javascript-设计模式-套路/js-pattern--h-策略模式.md","hash":"1ace808c8af28e7b133dc0e60fd96131275911c8","modified":1485418670000},{"_id":"source/_posts/Javascript-设计模式-套路/js-pattern--k-节流模式.md","hash":"60583b677cc4e315a79c16376818bbcb08de2680","modified":1485418670000},{"_id":"source/_posts/Javascript-设计模式-套路/js-pattern--h-模板方法模式.md","hash":"545456e880b666f354e014121652ee17a881880a","modified":1485418670000},{"_id":"source/_posts/Javascript-设计模式-套路/js-pattern--h-状态模式.md","hash":"be725eef152357d2c1b4f6b14bdd9e0d5a2bf90b","modified":1485418670000},{"_id":"source/_posts/Javascript-设计模式-套路/js-pattern--h-观察者模式.md","hash":"7ec7c0f751db5c3d15a7e8e9554b4ac99b2ff492","modified":1485418670000},{"_id":"source/_posts/Javascript-设计模式-套路/js-pattern-简介与对象的收编.md","hash":"c5d871564ccae14e21cf7c9bffd89ae86f87d787","modified":1485418670000},{"_id":"source/_posts/OSX-套路/alfred-workflows-多风格的编码变量-插件---.md","hash":"83549e5c7e7c99aa5777855eac755fd483cd7c7e","modified":1485418670000},{"_id":"source/_posts/Javascript-设计模式-套路/js-pattern--s-享元模式.md","hash":"108698d77995066f139958e16db739eaee5c9134","modified":1485418670000},{"_id":"source/_posts/OSX-套路/mac-http-proxy.md","hash":"8ec2042dc361df6855c2d5ac0c632474709c0cd0","modified":1485418670000},{"_id":"source/_posts/Mysql-套路/brew-安装-mysql-启动.md","hash":"0eb4d237f4855ce6712f4a0f6d0b2a14bfa48764","modified":1485418670000},{"_id":"source/_posts/OSX-套路/brew-java-安装.md","hash":"7bad8b4e498a6bf47d394171de7868fcd8477e82","modified":1485418670000},{"_id":"source/_posts/OSX-套路/mac-切换root用户.md","hash":"6803802548a0b260c41c0952f4a5a47f16f06efd","modified":1485418670000},{"_id":"source/_posts/OSX-套路/mac-切换到子用户.md","hash":"614d7b2706416291945885c2108af795d1ec675e","modified":1485418670000},{"_id":"source/_posts/OSX-套路/mac-日常遇到的命令记录.md","hash":"34af3a3b536c73917db02f7b3575dad2dcb4dfd1","modified":1485418670000},{"_id":"source/_posts/OSX-套路/mac-系统文件夹的含义.md","hash":"9cc8b167627caaec60e99741b029cd3b284fbd9d","modified":1485418670000},{"_id":"source/_posts/OSX-套路/mac-终端-用-proxychains-ng-走-shadowsocks.md","hash":"8eb9ee9cd2d8dd4e8a752f5a05c233b33f51bc3c","modified":1485418670000},{"_id":"source/_posts/OSX-套路/mac-访问-Windows-共享文件夹.md","hash":"97967d2f74dab4f96a223b07693a4993630fcd21","modified":1485418670000},{"_id":"source/_posts/Oracle-PL-SQL-套路/oracle-关于生成包-存储过程.md","hash":"0117531ccdd518f87c1a2d4ac91b0985cae22e8c","modified":1485418670000},{"_id":"source/_posts/OSX-套路/mongodb-开机启动.md","hash":"293deb6b2af4a491f5496410e248851c459ed1f3","modified":1485418670000},{"_id":"source/_posts/angular-套路/angular-$scope变量和方法.md","hash":"750d6d1a822757b0aa83c1b00314a1cd874c3bbe","modified":1485418670000},{"_id":"source/_posts/Oracle-PL-SQL-套路/基于-JetBrains-DataGrip-之-Oracle-PL-SQL-攻略--(一).md","hash":"a1d6a16f6f5817cb4d4c52b1ef88ff8cd645be5e","modified":1485418670000},{"_id":"source/_posts/Oracle-PL-SQL-套路/基于-JetBrains-DataGrip-之-Oracle-PL-SQL-攻略--LiveTemplate.md","hash":"d4d652bd437bd4292b12c02b72025e625cfc5b79","modified":1485418670000},{"_id":"source/_posts/Oracle-PL-SQL-套路/基于-JetBrains-DataGrip-之-Oracle-PL-SQL-攻略--(二).md","hash":"7aa587f182d886c1c834ec64229e7835de168b29","modified":1485418670000},{"_id":"source/_posts/angular-套路/angular-constant.md","hash":"de4de0269dc4b6a2cda65aabe65ae472e8362b93","modified":1485418670000},{"_id":"source/_posts/angular-套路/angular-$watch.md","hash":"cde052dd8040c425025f08edeb0e9e07c6e4a60a","modified":1485418670000},{"_id":"source/_posts/angular-套路/angular-factory.md","hash":"7ab0adf0169f0f28ecd9079f9af3ba963f0718e7","modified":1485418670000},{"_id":"source/_posts/angular-套路/angular-JQuery-的-数据获取.md","hash":"278008bd52d84374994aa433d4564adcf1422f1b","modified":1485418670000},{"_id":"source/_posts/angular-套路/angular-controller.md","hash":"c19f787309714d605176c6c4df1c51133e8cd320","modified":1485418670000},{"_id":"source/_posts/angular-套路/angular-css类和样式.md","hash":"58886423cea02d812399e5fbbd79fe154f0a5f98","modified":1485418670000},{"_id":"source/_posts/angular-套路/angular-provider-.md","hash":"32ea6efd9e164f1d025b44f347c9a4395804af19","modified":1485418670000},{"_id":"source/_posts/angular-套路/angular-restrict作用.md","hash":"418c09d6b58af817eaddb888bbe1b81b0c11b645","modified":1485418670000},{"_id":"source/_posts/angular-套路/angular-service.md","hash":"5f96641941482c25ec485b1baa0b59f1f02cc1e2","modified":1485418670000},{"_id":"source/_posts/angular-套路/angular-filter.md","hash":"c9932f49ac1eadfdbf274c7e823fe8372c0aea5b","modified":1485418670000},{"_id":"source/_posts/angular-套路/angular-创建自定义指令.md","hash":"f1464d186b9e106569396d6020c3d5e6b600ba0e","modified":1485418670000},{"_id":"source/_posts/angular-套路/angular-value.md","hash":"557e17a631e214abe1cd4c3ff6b4e117a0c69c8e","modified":1485418670000},{"_id":"source/_posts/angular-套路/angular-事件绑定.md","hash":"d4d97460ed9940977f8a00f6cfb48ae3d942b1b8","modified":1485418670000},{"_id":"source/_posts/angular-套路/angular-入门.md","hash":"1de81f65a1cdbcd38ef63070128ea3d502e4f850","modified":1485418670000},{"_id":"source/_posts/angular-套路/angular-模板内容、方式.md","hash":"e714389c976506fdfe5620d8885b34248ce8bd66","modified":1485418670000},{"_id":"source/_posts/angular-套路/angular-模板内容渲染.md","hash":"e0f4bbc91e897668e0461b8e7fbe38e9dd936f23","modified":1485418670000},{"_id":"source/_posts/angular-套路/angular-模板节点控制.md","hash":"0b3a2678d58ca5b9e32a50c4b0fa744a8c1e32d9","modified":1485418670000},{"_id":"source/_posts/angular-套路/angular-控件间的传值.md","hash":"eba0d0c5eadc793a631e593418d9435b7b221015","modified":1485418670000},{"_id":"source/_posts/angular-套路/angular-包含.md","hash":"43a0325348e584a0c0dd07cb1acfb68382d2b673","modified":1485418670000},{"_id":"source/_posts/angular-套路/angular-扩展html.md","hash":"e91b8878618cd486e8041299f26a49a0c57a03c2","modified":1485418670000},{"_id":"source/_posts/angular-套路/angular-表单输入.md","hash":"08d14b9c4238e86b2cabbc832ce73c7939b879e2","modified":1485418670000},{"_id":"source/_posts/angular-套路/angular-隔离指令的作用域.md","hash":"fbf184a3eb058d0d553f8993ab6bb293b1ee24b3","modified":1485418670000},{"_id":"source/_posts/angular-套路/angular-获取列表中的值.md","hash":"6a6e4d2884863df50f90988a02afac319081b4b5","modified":1485418670000},{"_id":"source/_posts/apache-common-套路/apache-common-BeanUtils-教程.md","hash":"131fed4b802548fa78af327be355931036f6054b","modified":1485418670000},{"_id":"source/_posts/angular-套路/angular-自定义指令.md","hash":"3c52b20775ae62ca4b1f066c86a58e72359d6bff","modified":1485418670000},{"_id":"source/_posts/angular-套路/angular-表单.md","hash":"a9ed387a1726c44f186723a559559632d344213b","modified":1485418670000},{"_id":"source/_posts/apache-common-套路/apache-common-浅尝实操.md","hash":"32c07a31f7875a55d6f5d0420591c7a4a3e0f5a2","modified":1485418670000},{"_id":"source/_posts/docker-套路/docker-技术入门与实战-笔记.md","hash":"f541ecac2c7701ee117d8959ec4970b110b86c5e","modified":1485418670000},{"_id":"source/_posts/apache-common-套路/java-common-Lang-CharSetUtils.md","hash":"07975486b593278c561dfcba17664f978442408d","modified":1485418670000},{"_id":"source/_posts/express-套路/jade-语法格式.md","hash":"90cf42000fb3a3a1a6964d40fed62cfde43716bd","modified":1485418670000},{"_id":"source/_posts/apache-common-套路/java-common-Lang-StringUtils.md","hash":"72b68bf9a1b956b390b8b27135177788dd192fd4","modified":1485418670000},{"_id":"source/_posts/intellj-idea-套路/intellj-idea-maven-Web项目-+-tomcat-的搭建.md","hash":"c3573492057500cdb3fe54856571134d5b39fa98","modified":1485418670000},{"_id":"source/_posts/intellj-idea-套路/intellj-idea-开发环境配置.md","hash":"1040cc62fafb23dd56a69dcce9ad62e7c37cb83b","modified":1485418670000},{"_id":"source/_posts/express-套路/jade-在express下调用.md","hash":"81aae1dbe3d082e1f4e9e06016251c6520e622d2","modified":1485418670000},{"_id":"source/_posts/ios-套路/ios-核心开发手册读书笔记.md","hash":"cd13edefcbd06c846353996d1d8a7811a2f190d6","modified":1485418670000},{"_id":"source/_posts/ios-套路/app-签收.md","hash":"772b43568505476240777c61cdddf4dad401be14","modified":1485418670000},{"_id":"source/_posts/ios-套路/Mac-OS-X-安装-maven-.md","hash":"33b451bc046b8b804c1f86d79f6d35c5acd4d869","modified":1485418670000},{"_id":"source/_posts/jenkins/jenkins-常用配置记录.md","hash":"ee10a0688093bcb00d965b1b69909da23f3c20b2","modified":1485418670000},{"_id":"source/_posts/mongodb-套路/mongodb-remove.md","hash":"9fe31217a8426406cd0a8b4480d8bd5a1a7a2911","modified":1485418670000},{"_id":"source/_posts/mongodb-套路/mongodb-find&sort.md","hash":"8de71b07d93c03570a89406bc4d34663282aa1af","modified":1485418670000},{"_id":"source/_posts/mongodb-套路/mongodb-insert&save.md","hash":"dd7e2e38f7b3f12513db57dbeccb8ba6cb25dec2","modified":1485418670000},{"_id":"source/_posts/mongodb-套路/mongodb-初识.md","hash":"b2de1c203fbf446af91c523a01406e74d0adf193","modified":1485418670000},{"_id":"source/_posts/mongodb-套路/mongodb-update.md","hash":"69e494a7c6540d6a6178d8abe0b63d2cc47c8a4c","modified":1485418670000},{"_id":"source/_posts/mongodb-套路/mongodb-索引.md","hash":"6612f205a9e57da71b28cbbf58b358006212909b","modified":1485418670000},{"_id":"source/_posts/nginx-套路/nginx-开发理解.md","hash":"e705be5c8ba2c86ebaeaab4f8f07d90b92f8eb9e","modified":1485418670000},{"_id":"source/_posts/react-native套路/rn-mac-android-开发环境部署.md","hash":"d950f74c6503bef1775edd35d6e36f4c128ae4b1","modified":1485418670000},{"_id":"source/_posts/日常开发/如何更有效地使用谷歌搜索-Chrome.md","hash":"9502130320fa92312e1fdc8f717749b722500422","modified":1485418670000},{"_id":"source/_posts/react-native套路/rn-mac-android-开发日常记录.md","hash":"3dbd44c61fd2d3f8e2c6072267c04e83cb91ba0a","modified":1485418670000},{"_id":"source/_posts/服务器-套路/阿里云部署-Nginx.md","hash":"2a27bc1f41a34e1f32c2409b9e24004b2dc42d1a","modified":1485418670000},{"_id":"source/_posts/服务器-套路/阿里云部署-安装-Node.md","hash":"15192052549a6974545b4b9eb2e865277248aa44","modified":1485418670000},{"_id":"source/_posts/个人笔记/年度工作总结-医药行业与软件技术的碰撞.md","hash":"78bbc72469b726463bc556d68d2e4f49a337447f","modified":1485418670000},{"_id":"source/_posts/服务器-套路/阿里云部署-安装FTP-.md","hash":"397dd370bd47df5f06b9b8a6ede9fd4fe72039bb","modified":1485418670000},{"_id":"source/_posts/服务器-套路/阿里云配置-VPN-常用操作.md","hash":"21e2a9fef529e7dddd84b966e99b3fe04a796e08","modified":1485418670000},{"_id":"source/_posts/服务器-套路/阿里云配置-yummyftp-激活码.md","hash":"f053465b2fa7d3c85fa46fec447aba3441461a37","modified":1485418670000},{"_id":"source/_posts/破解各类软件-套路/Mac-Photoshop-cs6-.md","hash":"6cab402156b55991c5bcdbd15623dd2b6793a613","modified":1485418670000},{"_id":"source/_posts/私-LI系统开发/LI系统整体框架解析.md","hash":"cfcd0ffbf71ca51c828eb79b91b1399238899786","modified":1485418670000},{"_id":"source/_posts/条形码-二维码/Aspose-barcode-.md","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1485418670000},{"_id":"source/_posts/条形码-二维码/Aspose-barcode-条码和二维码处理.md","hash":"bbfa81c2829849d2f7fcb77b27d56a794735e0cb","modified":1485418670000},{"_id":"source/_posts/项目开发-点滴/bms数据库-还回.md","hash":"e11afbef0bd0b5d6ee3a5c24101c22ebe59d47c6","modified":1485418670000},{"_id":"source/_posts/条形码-二维码/图像处理-ImageMagick-+-im4java.md","hash":"e02c581f6f43b1f21012b552c60a0fda7ccfe43d","modified":1485418670000},{"_id":"source/_posts/项目开发-点滴/bms数据库---借出.md","hash":"df906025b79fa636c6cc63a660929257290c30fe","modified":1485418670000},{"_id":"source/_posts/项目开发-点滴/jersey-2-x-记录.md","hash":"99b56547ffebf5e87b6a33252763670cecd91541","modified":1485418670000},{"_id":"source/_posts/项目开发-点滴/添加的数据.md","hash":"8978450cf5e064e3aa86e4d20a21c32eacedae38","modified":1485418670000},{"_id":"source/_posts/项目开发-点滴/打印中心需求文档.md","hash":"412d09679dfc926876f26f385e91b5f123cd4281","modified":1485418670000},{"_id":"source/_posts/项目开发-点滴/备忘录.md","hash":"985982bc10e2c153f4107692e44a08c421e3d297","modified":1485418670000},{"_id":"themes/maupassant/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1485415859000},{"_id":"themes/maupassant/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1485415859000},{"_id":"themes/maupassant/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1485415859000},{"_id":"themes/maupassant/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1485415859000},{"_id":"themes/maupassant/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1485415859000},{"_id":"themes/maupassant/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1485415859000},{"_id":"themes/maupassant/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1485415859000},{"_id":"themes/maupassant/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1485415859000},{"_id":"themes/maupassant/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1485415859000},{"_id":"themes/maupassant/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1485415859000},{"_id":"themes/maupassant/.git/logs/HEAD","hash":"b58c1bb4ca9058c9a7f9df9a827c22e3ac9c89c0","modified":1485415864000},{"_id":"themes/maupassant/layout/_partial/comments.jade","hash":"6c7f63ba04a4d28323ba31e79a4927f3d3fcc56e","modified":1485415864000},{"_id":"themes/maupassant/layout/_partial/helpers.jade","hash":"acdf9e2d52ee86c831fa15ce1570930c5779bc78","modified":1485415864000},{"_id":"themes/maupassant/layout/_partial/after_footer.jade","hash":"3dbcc9a9f0d6e55da191d3393c18bbfcfe99fa69","modified":1485415864000},{"_id":"themes/maupassant/layout/_partial/footer.jade","hash":"aa020b794e697e8e9612530c97c6295efde469fe","modified":1485415864000},{"_id":"themes/maupassant/layout/_partial/mathjax.jade","hash":"b54b56faff9e47ab3ca3cdd55056c73e60776f3c","modified":1485415864000},{"_id":"themes/maupassant/layout/_partial/paginator.jade","hash":"53f9cb77448e84a98da5eb688e2e12b173c555bb","modified":1485415864000},{"_id":"themes/maupassant/layout/_partial/mathjax2.jade","hash":"d6ac5dc4e9c7a1b866f1f92d88988cfb35aded4c","modified":1485415864000},{"_id":"themes/maupassant/layout/_partial/post_nav.jade","hash":"a2d698c84bb6da08195fe870dbd7215f65388d3f","modified":1485415864000},{"_id":"themes/maupassant/layout/_widget/links.jade","hash":"f57a0c76d243882b2b77330132bdb43bc648948b","modified":1485415864000},{"_id":"themes/maupassant/layout/_partial/tag.jade","hash":"0f0e6770e9d5dd8040e330d71bbbfadd2df36a28","modified":1485415864000},{"_id":"themes/maupassant/layout/_partial/totop.jade","hash":"8225bbc3cdb9648bc2e6872e5c616a9a1e4def4f","modified":1485415864000},{"_id":"themes/maupassant/layout/_widget/recent_comments.jade","hash":"e119c5afa85abc60d139e2da99b0bfcd7a6530f8","modified":1485415864000},{"_id":"themes/maupassant/layout/_widget/recent_posts.jade","hash":"19431336d724d2118e46da43683bce9063176541","modified":1485415864000},{"_id":"themes/maupassant/layout/_widget/category.jade","hash":"7c6aed762934ca51aa2669b886254da24b77bc14","modified":1485415864000},{"_id":"themes/maupassant/layout/_widget/tag.jade","hash":"132f049ce677d0e38f50073174c4ee4b825d4a06","modified":1485415864000},{"_id":"themes/maupassant/layout/_widget/search.jade","hash":"193546282908e499813534f86d27ef6e0a1357b3","modified":1485415864000},{"_id":"themes/maupassant/source/css/jquery.fancybox.css","hash":"f42f761157f26244673eb2f4a9215c70956f80dc","modified":1485415864000},{"_id":"themes/maupassant/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1485415864000},{"_id":"themes/maupassant/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1485415864000},{"_id":"themes/maupassant/source/css/style.scss","hash":"158f1ebecf7b994ffae5332a627465f6bf38113b","modified":1485415864000},{"_id":"themes/maupassant/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1485415864000},{"_id":"themes/maupassant/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1485415864000},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1485415864000},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1485415864000},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1485415864000},{"_id":"themes/maupassant/source/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1485415864000},{"_id":"themes/maupassant/source/js/search.js","hash":"0c0630e2ef213701d393b041f10572e951a27985","modified":1485415864000},{"_id":"themes/maupassant/source/js/share.js","hash":"f49776e0baa2b913ddc7a20db24b3edd469c8343","modified":1485415864000},{"_id":"themes/maupassant/source/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1485415864000},{"_id":"themes/maupassant/source/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1485415864000},{"_id":"themes/maupassant/.git/refs/heads/master","hash":"e7de97753d00149057ca0ae9ed395fd347042cbf","modified":1485415864000},{"_id":"themes/maupassant/.git/objects/pack/pack-75caa364d8078c39e32101665c0c6c94ab45492f.idx","hash":"6918c045c1d26cd82874029e879921a25e1f78fe","modified":1485415864000},{"_id":"themes/maupassant/.git/logs/refs/heads/master","hash":"b58c1bb4ca9058c9a7f9df9a827c22e3ac9c89c0","modified":1485415864000},{"_id":"themes/maupassant/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1485415864000},{"_id":"themes/maupassant/.git/logs/refs/remotes/origin/HEAD","hash":"b58c1bb4ca9058c9a7f9df9a827c22e3ac9c89c0","modified":1485415864000},{"_id":"themes/maupassant/.git/objects/pack/pack-75caa364d8078c39e32101665c0c6c94ab45492f.pack","hash":"6052695097aa1a2b32d539f20f4778a915177617","modified":1485415864000},{"_id":"source/_posts/LI系统整体框架解析.md","hash":"cfcd0ffbf71ca51c828eb79b91b1399238899786","modified":1485418670000},{"_id":"source/_posts/Mac-Photoshop-cs6-.md","hash":"6cab402156b55991c5bcdbd15623dd2b6793a613","modified":1485418670000},{"_id":"source/_posts/angular- watch.md","hash":"cde052dd8040c425025f08edeb0e9e07c6e4a60a","modified":1485418670000},{"_id":"source/_posts/Aspose-barcode-.md","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1485418670000},{"_id":"source/_posts/angular-constant.md","hash":"de4de0269dc4b6a2cda65aabe65ae472e8362b93","modified":1485418670000},{"_id":"source/_posts/Aspose-barcode-条码和二维码处理.md","hash":"bbfa81c2829849d2f7fcb77b27d56a794735e0cb","modified":1485418670000},{"_id":"source/_posts/angular-factory.md","hash":"7ab0adf0169f0f28ecd9079f9af3ba963f0718e7","modified":1485418670000},{"_id":"source/_posts/angular-JQuery-的-数据获取.md","hash":"278008bd52d84374994aa433d4564adcf1422f1b","modified":1485418670000},{"_id":"source/_posts/angular-controller.md","hash":"c19f787309714d605176c6c4df1c51133e8cd320","modified":1485418670000},{"_id":"source/_posts/angular-css类和样式.md","hash":"58886423cea02d812399e5fbbd79fe154f0a5f98","modified":1485418670000},{"_id":"source/_posts/angular-provider-.md","hash":"32ea6efd9e164f1d025b44f347c9a4395804af19","modified":1485418670000},{"_id":"source/_posts/angular-filter.md","hash":"c9932f49ac1eadfdbf274c7e823fe8372c0aea5b","modified":1485418670000},{"_id":"source/_posts/angular-restrict作用.md","hash":"418c09d6b58af817eaddb888bbe1b81b0c11b645","modified":1485418670000},{"_id":"source/_posts/angular-scope变量和方法.md","hash":"750d6d1a822757b0aa83c1b00314a1cd874c3bbe","modified":1485418670000},{"_id":"source/_posts/angular-service.md","hash":"5f96641941482c25ec485b1baa0b59f1f02cc1e2","modified":1485418670000},{"_id":"source/_posts/angular-创建自定义指令.md","hash":"f1464d186b9e106569396d6020c3d5e6b600ba0e","modified":1485418670000},{"_id":"source/_posts/angular-value.md","hash":"557e17a631e214abe1cd4c3ff6b4e117a0c69c8e","modified":1485418670000},{"_id":"source/_posts/angular-入门.md","hash":"1de81f65a1cdbcd38ef63070128ea3d502e4f850","modified":1485418670000},{"_id":"source/_posts/angular-事件绑定.md","hash":"d4d97460ed9940977f8a00f6cfb48ae3d942b1b8","modified":1485418670000},{"_id":"source/_posts/angular-包含.md","hash":"43a0325348e584a0c0dd07cb1acfb68382d2b673","modified":1485418670000},{"_id":"source/_posts/angular-扩展html.md","hash":"e91b8878618cd486e8041299f26a49a0c57a03c2","modified":1485418670000},{"_id":"source/_posts/angular-控件间的传值.md","hash":"eba0d0c5eadc793a631e593418d9435b7b221015","modified":1485418670000},{"_id":"source/_posts/angular-模板内容、方式.md","hash":"e714389c976506fdfe5620d8885b34248ce8bd66","modified":1485418670000},{"_id":"source/_posts/angular-模板内容渲染.md","hash":"e0f4bbc91e897668e0461b8e7fbe38e9dd936f23","modified":1485418670000},{"_id":"source/_posts/angular-模板节点控制.md","hash":"0b3a2678d58ca5b9e32a50c4b0fa744a8c1e32d9","modified":1485418670000},{"_id":"source/_posts/angular-表单输入.md","hash":"08d14b9c4238e86b2cabbc832ce73c7939b879e2","modified":1485418670000},{"_id":"source/_posts/angular-隔离指令的作用域.md","hash":"fbf184a3eb058d0d553f8993ab6bb293b1ee24b3","modified":1485418670000},{"_id":"source/_posts/angular-自定义指令.md","hash":"3c52b20775ae62ca4b1f066c86a58e72359d6bff","modified":1485418670000},{"_id":"source/_posts/angular-获取列表中的值.md","hash":"6a6e4d2884863df50f90988a02afac319081b4b5","modified":1485418670000},{"_id":"source/_posts/angular-表单.md","hash":"a9ed387a1726c44f186723a559559632d344213b","modified":1485418670000},{"_id":"source/_posts/bms数据库---借出.md","hash":"df906025b79fa636c6cc63a660929257290c30fe","modified":1485418670000},{"_id":"source/_posts/bms数据库-还回.md","hash":"e11afbef0bd0b5d6ee3a5c24101c22ebe59d47c6","modified":1485418670000},{"_id":"source/_posts/图像处理-ImageMagick-+-im4java.md","hash":"e02c581f6f43b1f21012b552c60a0fda7ccfe43d","modified":1485418670000},{"_id":"source/_posts/jersey-2-x-记录.md","hash":"99b56547ffebf5e87b6a33252763670cecd91541","modified":1485418670000},{"_id":"source/_posts/如何更有效地使用谷歌搜索-Chrome.md","hash":"9502130320fa92312e1fdc8f717749b722500422","modified":1485418670000},{"_id":"source/_posts/备忘录.md","hash":"985982bc10e2c153f4107692e44a08c421e3d297","modified":1485418670000},{"_id":"source/_posts/年度工作总结-医药行业与软件技术的碰撞.md","hash":"78bbc72469b726463bc556d68d2e4f49a337447f","modified":1485418670000},{"_id":"source/_posts/添加的数据.md","hash":"8978450cf5e064e3aa86e4d20a21c32eacedae38","modified":1485418670000},{"_id":"source/_posts/打印中心需求文档.md","hash":"412d09679dfc926876f26f385e91b5f123cd4281","modified":1485418670000},{"_id":"source/_posts/阿里云部署-Nginx.md","hash":"2a27bc1f41a34e1f32c2409b9e24004b2dc42d1a","modified":1485418670000},{"_id":"source/_posts/阿里云部署-安装-Node.md","hash":"15192052549a6974545b4b9eb2e865277248aa44","modified":1485418670000},{"_id":"source/_posts/阿里云部署-安装FTP-.md","hash":"397dd370bd47df5f06b9b8a6ede9fd4fe72039bb","modified":1485418670000},{"_id":"source/_posts/阿里云配置-VPN-常用操作.md","hash":"21e2a9fef529e7dddd84b966e99b3fe04a796e08","modified":1485418670000},{"_id":"source/_posts/阿里云配置-yummyftp-激活码.md","hash":"f053465b2fa7d3c85fa46fec447aba3441461a37","modified":1485418670000}],"Category":[],"Data":[],"Page":[],"Post":[{"_content":"# 启动\nservice iptables restart\nchkconfig iptables on\n\nservice pptpd restart\nchkconfig pptpd on\nclear\n\n# 添加用户\nvi /etc/ppp/chap-secrets\n\n\n# https://blog.linuxeye.com/412.html\n","source":"_posts/阿里云配置-VPN-常用操作.md","raw":"# 启动\nservice iptables restart\nchkconfig iptables on\n\nservice pptpd restart\nchkconfig pptpd on\nclear\n\n# 添加用户\nvi /etc/ppp/chap-secrets\n\n\n# https://blog.linuxeye.com/412.html\n","slug":"阿里云配置-VPN-常用操作","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","_id":"ciye44c7a00007v0o8tmph4mj","title":"","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h1><p>service iptables restart<br>chkconfig iptables on</p>\n<p>service pptpd restart<br>chkconfig pptpd on<br>clear</p>\n<h1 id=\"添加用户\"><a href=\"#添加用户\" class=\"headerlink\" title=\"添加用户\"></a>添加用户</h1><p>vi /etc/ppp/chap-secrets</p>\n<h1 id=\"https-blog-linuxeye-com-412-html\"><a href=\"#https-blog-linuxeye-com-412-html\" class=\"headerlink\" title=\"https://blog.linuxeye.com/412.html\"></a><a href=\"https://blog.linuxeye.com/412.html\" target=\"_blank\" rel=\"external\">https://blog.linuxeye.com/412.html</a></h1>","excerpt":"","more":"<h1 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h1><p>service iptables restart<br>chkconfig iptables on</p>\n<p>service pptpd restart<br>chkconfig pptpd on<br>clear</p>\n<h1 id=\"添加用户\"><a href=\"#添加用户\" class=\"headerlink\" title=\"添加用户\"></a>添加用户</h1><p>vi /etc/ppp/chap-secrets</p>\n<h1 id=\"https-blog-linuxeye-com-412-html\"><a href=\"#https-blog-linuxeye-com-412-html\" class=\"headerlink\" title=\"https://blog.linuxeye.com/412.html\"></a><a href=\"https://blog.linuxeye.com/412.html\">https://blog.linuxeye.com/412.html</a></h1>"},{"_content":"# 开机启动\nsudo update-rc.d -f nginx defaults\n\n# 启动\nsudo /etc/init.d/nginx start\n\n# 查看配置的文件\nnginx -t\n\n# 后台启动\nnohup redis-server &\n","source":"_posts/阿里云部署-Nginx.md","raw":"# 开机启动\nsudo update-rc.d -f nginx defaults\n\n# 启动\nsudo /etc/init.d/nginx start\n\n# 查看配置的文件\nnginx -t\n\n# 后台启动\nnohup redis-server &\n","slug":"阿里云部署-Nginx","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","_id":"ciye44c7i00017v0osfld61iy","title":"","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"开机启动\"><a href=\"#开机启动\" class=\"headerlink\" title=\"开机启动\"></a>开机启动</h1><p>sudo update-rc.d -f nginx defaults</p>\n<h1 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h1><p>sudo /etc/init.d/nginx start</p>\n<h1 id=\"查看配置的文件\"><a href=\"#查看配置的文件\" class=\"headerlink\" title=\"查看配置的文件\"></a>查看配置的文件</h1><p>nginx -t</p>\n<h1 id=\"后台启动\"><a href=\"#后台启动\" class=\"headerlink\" title=\"后台启动\"></a>后台启动</h1><p>nohup redis-server &amp;</p>\n","excerpt":"","more":"<h1 id=\"开机启动\"><a href=\"#开机启动\" class=\"headerlink\" title=\"开机启动\"></a>开机启动</h1><p>sudo update-rc.d -f nginx defaults</p>\n<h1 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h1><p>sudo /etc/init.d/nginx start</p>\n<h1 id=\"查看配置的文件\"><a href=\"#查看配置的文件\" class=\"headerlink\" title=\"查看配置的文件\"></a>查看配置的文件</h1><p>nginx -t</p>\n<h1 id=\"后台启动\"><a href=\"#后台启动\" class=\"headerlink\" title=\"后台启动\"></a>后台启动</h1><p>nohup redis-server &amp;</p>\n"},{"_content":"Name: Special [K]\nSerial: YUMFTP101-5S6J-LBFK-WL1F-W2WM-8WV1\n","source":"_posts/阿里云配置-yummyftp-激活码.md","raw":"Name: Special [K]\nSerial: YUMFTP101-5S6J-LBFK-WL1F-W2WM-8WV1\n","slug":"阿里云配置-yummyftp-激活码","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","_id":"ciye44c7p00027v0oqcttux4y","title":"","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Name: Special [K]<br>Serial: YUMFTP101-5S6J-LBFK-WL1F-W2WM-8WV1</p>\n","excerpt":"","more":"<p>Name: Special [K]<br>Serial: YUMFTP101-5S6J-LBFK-WL1F-W2WM-8WV1</p>\n"},{"_content":"# 安装 node\n\n## 更新yum\n\nyum -y update \n\n## 安装nvm -->https://github.com/creationix/nvm\n\nwget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.31.1/install.sh | bash\n\n## 列出node的最新版本\n\nnvm ls-remote\n\n## 安装指定的版本 / 使用\n\nnvm install 6.2.1  / nvm use **\n","source":"_posts/阿里云部署-安装-Node.md","raw":"# 安装 node\n\n## 更新yum\n\nyum -y update \n\n## 安装nvm -->https://github.com/creationix/nvm\n\nwget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.31.1/install.sh | bash\n\n## 列出node的最新版本\n\nnvm ls-remote\n\n## 安装指定的版本 / 使用\n\nnvm install 6.2.1  / nvm use **\n","slug":"阿里云部署-安装-Node","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","_id":"ciye44c7w00037v0oko9c8u0w","title":"","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"安装-node\"><a href=\"#安装-node\" class=\"headerlink\" title=\"安装 node\"></a>安装 node</h1><h2 id=\"更新yum\"><a href=\"#更新yum\" class=\"headerlink\" title=\"更新yum\"></a>更新yum</h2><p>yum -y update </p>\n<h2 id=\"安装nvm-–-gt-https-github-com-creationix-nvm\"><a href=\"#安装nvm-–-gt-https-github-com-creationix-nvm\" class=\"headerlink\" title=\"安装nvm –&gt;https://github.com/creationix/nvm\"></a>安装nvm –&gt;<a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"external\">https://github.com/creationix/nvm</a></h2><p>wget -qO- <a href=\"https://raw.githubusercontent.com/creationix/nvm/v0.31.1/install.sh\" target=\"_blank\" rel=\"external\">https://raw.githubusercontent.com/creationix/nvm/v0.31.1/install.sh</a> | bash</p>\n<h2 id=\"列出node的最新版本\"><a href=\"#列出node的最新版本\" class=\"headerlink\" title=\"列出node的最新版本\"></a>列出node的最新版本</h2><p>nvm ls-remote</p>\n<h2 id=\"安装指定的版本-使用\"><a href=\"#安装指定的版本-使用\" class=\"headerlink\" title=\"安装指定的版本 / 使用\"></a>安装指定的版本 / 使用</h2><p>nvm install 6.2.1  / nvm use **</p>\n","excerpt":"","more":"<h1 id=\"安装-node\"><a href=\"#安装-node\" class=\"headerlink\" title=\"安装 node\"></a>安装 node</h1><h2 id=\"更新yum\"><a href=\"#更新yum\" class=\"headerlink\" title=\"更新yum\"></a>更新yum</h2><p>yum -y update </p>\n<h2 id=\"安装nvm-–-gt-https-github-com-creationix-nvm\"><a href=\"#安装nvm-–-gt-https-github-com-creationix-nvm\" class=\"headerlink\" title=\"安装nvm –&gt;https://github.com/creationix/nvm\"></a>安装nvm –&gt;<a href=\"https://github.com/creationix/nvm\">https://github.com/creationix/nvm</a></h2><p>wget -qO- <a href=\"https://raw.githubusercontent.com/creationix/nvm/v0.31.1/install.sh\">https://raw.githubusercontent.com/creationix/nvm/v0.31.1/install.sh</a> | bash</p>\n<h2 id=\"列出node的最新版本\"><a href=\"#列出node的最新版本\" class=\"headerlink\" title=\"列出node的最新版本\"></a>列出node的最新版本</h2><p>nvm ls-remote</p>\n<h2 id=\"安装指定的版本-使用\"><a href=\"#安装指定的版本-使用\" class=\"headerlink\" title=\"安装指定的版本 / 使用\"></a>安装指定的版本 / 使用</h2><p>nvm install 6.2.1  / nvm use **</p>\n"},{"_content":"# vsftpd 组件\n\nyum -y install vsftpd \n\n# 查看当前用户\n\ncat /etc/passwd \n\n# 启动 vsftpd start\n\nservice vsftpd start \n\n# 安装ftp 客户端\n\nyum -y install ftp \n\n# 尝试登陆\n\nftp localhost  \n\n# 取消匿名登陆, anonymous_enable=YES ，改为NO\n\nvi /etc/vsftpd/vsftpd.conf \n\n# 创建用户名修改密码\n\nuseradd ftpuser \n\npasswd ftpuser \n","source":"_posts/阿里云部署-安装FTP-.md","raw":"# vsftpd 组件\n\nyum -y install vsftpd \n\n# 查看当前用户\n\ncat /etc/passwd \n\n# 启动 vsftpd start\n\nservice vsftpd start \n\n# 安装ftp 客户端\n\nyum -y install ftp \n\n# 尝试登陆\n\nftp localhost  \n\n# 取消匿名登陆, anonymous_enable=YES ，改为NO\n\nvi /etc/vsftpd/vsftpd.conf \n\n# 创建用户名修改密码\n\nuseradd ftpuser \n\npasswd ftpuser \n","slug":"阿里云部署-安装FTP-","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","_id":"ciye44c7z00047v0ob6jvr55p","title":"","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"vsftpd-组件\"><a href=\"#vsftpd-组件\" class=\"headerlink\" title=\"vsftpd 组件\"></a>vsftpd 组件</h1><p>yum -y install vsftpd </p>\n<h1 id=\"查看当前用户\"><a href=\"#查看当前用户\" class=\"headerlink\" title=\"查看当前用户\"></a>查看当前用户</h1><p>cat /etc/passwd </p>\n<h1 id=\"启动-vsftpd-start\"><a href=\"#启动-vsftpd-start\" class=\"headerlink\" title=\"启动 vsftpd start\"></a>启动 vsftpd start</h1><p>service vsftpd start </p>\n<h1 id=\"安装ftp-客户端\"><a href=\"#安装ftp-客户端\" class=\"headerlink\" title=\"安装ftp 客户端\"></a>安装ftp 客户端</h1><p>yum -y install ftp </p>\n<h1 id=\"尝试登陆\"><a href=\"#尝试登陆\" class=\"headerlink\" title=\"尝试登陆\"></a>尝试登陆</h1><p>ftp localhost  </p>\n<h1 id=\"取消匿名登陆-anonymous-enable-YES-，改为NO\"><a href=\"#取消匿名登陆-anonymous-enable-YES-，改为NO\" class=\"headerlink\" title=\"取消匿名登陆, anonymous_enable=YES ，改为NO\"></a>取消匿名登陆, anonymous_enable=YES ，改为NO</h1><p>vi /etc/vsftpd/vsftpd.conf </p>\n<h1 id=\"创建用户名修改密码\"><a href=\"#创建用户名修改密码\" class=\"headerlink\" title=\"创建用户名修改密码\"></a>创建用户名修改密码</h1><p>useradd ftpuser </p>\n<p>passwd ftpuser </p>\n","excerpt":"","more":"<h1 id=\"vsftpd-组件\"><a href=\"#vsftpd-组件\" class=\"headerlink\" title=\"vsftpd 组件\"></a>vsftpd 组件</h1><p>yum -y install vsftpd </p>\n<h1 id=\"查看当前用户\"><a href=\"#查看当前用户\" class=\"headerlink\" title=\"查看当前用户\"></a>查看当前用户</h1><p>cat /etc/passwd </p>\n<h1 id=\"启动-vsftpd-start\"><a href=\"#启动-vsftpd-start\" class=\"headerlink\" title=\"启动 vsftpd start\"></a>启动 vsftpd start</h1><p>service vsftpd start </p>\n<h1 id=\"安装ftp-客户端\"><a href=\"#安装ftp-客户端\" class=\"headerlink\" title=\"安装ftp 客户端\"></a>安装ftp 客户端</h1><p>yum -y install ftp </p>\n<h1 id=\"尝试登陆\"><a href=\"#尝试登陆\" class=\"headerlink\" title=\"尝试登陆\"></a>尝试登陆</h1><p>ftp localhost  </p>\n<h1 id=\"取消匿名登陆-anonymous-enable-YES-，改为NO\"><a href=\"#取消匿名登陆-anonymous-enable-YES-，改为NO\" class=\"headerlink\" title=\"取消匿名登陆, anonymous_enable=YES ，改为NO\"></a>取消匿名登陆, anonymous_enable=YES ，改为NO</h1><p>vi /etc/vsftpd/vsftpd.conf </p>\n<h1 id=\"创建用户名修改密码\"><a href=\"#创建用户名修改密码\" class=\"headerlink\" title=\"创建用户名修改密码\"></a>创建用户名修改密码</h1><p>useradd ftpuser </p>\n<p>passwd ftpuser </p>\n"},{"_content":"# 七月入职\n转眼间就过去了好几个月\n","source":"_posts/年度工作总结-医药行业与软件技术的碰撞.md","raw":"# 七月入职\n转眼间就过去了好几个月\n","slug":"年度工作总结-医药行业与软件技术的碰撞","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","_id":"ciye44rht00057v0otvp7bhg3","title":"","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"七月入职\"><a href=\"#七月入职\" class=\"headerlink\" title=\"七月入职\"></a>七月入职</h1><p>转眼间就过去了好几个月</p>\n","excerpt":"","more":"<h1 id=\"七月入职\"><a href=\"#七月入职\" class=\"headerlink\" title=\"七月入职\"></a>七月入职</h1><p>转眼间就过去了好几个月</p>\n"},{"_content":"> 使用说明:\n\n```\n1、运行Block Adobe Activation，防止ADOBE激活程序启动，按操作提示点击即可。\n2、运行Adobe CS6安装程序\n3、选择“试用”\n4、输入Adobe ID，如果没有，免费注册一个，登录\n5、安装完之后，在Adobe Photoshop CS6程序按右键，选择显示包内容，打开/ Contents / Frameworks /文件夹，把amtlib.framework文件夹拷进去替换。\n6、同样道理，激活illustrator,indesign等程序，也是同样办法，在对应的Adobe  CS6程序按右键，选择显示包内容，打开/ Contents / Frameworks /文件夹，把amtlib.framework文件夹拷进去替换。\n7、运行Adobe 程序，激活成功。享受ADOBE CS6吧！\n\n```\n\n下载链接: https://pan.baidu.com/s/1ciesRO 密码: f95w\n","source":"_posts/Mac-Photoshop-cs6-.md","raw":"> 使用说明:\n\n```\n1、运行Block Adobe Activation，防止ADOBE激活程序启动，按操作提示点击即可。\n2、运行Adobe CS6安装程序\n3、选择“试用”\n4、输入Adobe ID，如果没有，免费注册一个，登录\n5、安装完之后，在Adobe Photoshop CS6程序按右键，选择显示包内容，打开/ Contents / Frameworks /文件夹，把amtlib.framework文件夹拷进去替换。\n6、同样道理，激活illustrator,indesign等程序，也是同样办法，在对应的Adobe  CS6程序按右键，选择显示包内容，打开/ Contents / Frameworks /文件夹，把amtlib.framework文件夹拷进去替换。\n7、运行Adobe 程序，激活成功。享受ADOBE CS6吧！\n\n```\n\n下载链接: https://pan.baidu.com/s/1ciesRO 密码: f95w\n","slug":"Mac-Photoshop-cs6-","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","_id":"ciye44zoa00067v0owx9bcai2","title":"","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>使用说明:</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">1、运行Block Adobe Activation，防止ADOBE激活程序启动，按操作提示点击即可。</div><div class=\"line\">2、运行Adobe CS6安装程序</div><div class=\"line\">3、选择“试用”</div><div class=\"line\">4、输入Adobe ID，如果没有，免费注册一个，登录</div><div class=\"line\">5、安装完之后，在Adobe Photoshop CS6程序按右键，选择显示包内容，打开/ Contents / Frameworks /文件夹，把amtlib.framework文件夹拷进去替换。</div><div class=\"line\">6、同样道理，激活illustrator,indesign等程序，也是同样办法，在对应的Adobe  CS6程序按右键，选择显示包内容，打开/ Contents / Frameworks /文件夹，把amtlib.framework文件夹拷进去替换。</div><div class=\"line\">7、运行Adobe 程序，激活成功。享受ADOBE CS6吧！</div></pre></td></tr></table></figure>\n<p>下载链接: <a href=\"https://pan.baidu.com/s/1ciesRO\" target=\"_blank\" rel=\"external\">https://pan.baidu.com/s/1ciesRO</a> 密码: f95w</p>\n","excerpt":"","more":"<blockquote>\n<p>使用说明:</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">1、运行Block Adobe Activation，防止ADOBE激活程序启动，按操作提示点击即可。</div><div class=\"line\">2、运行Adobe CS6安装程序</div><div class=\"line\">3、选择“试用”</div><div class=\"line\">4、输入Adobe ID，如果没有，免费注册一个，登录</div><div class=\"line\">5、安装完之后，在Adobe Photoshop CS6程序按右键，选择显示包内容，打开/ Contents / Frameworks /文件夹，把amtlib.framework文件夹拷进去替换。</div><div class=\"line\">6、同样道理，激活illustrator,indesign等程序，也是同样办法，在对应的Adobe  CS6程序按右键，选择显示包内容，打开/ Contents / Frameworks /文件夹，把amtlib.framework文件夹拷进去替换。</div><div class=\"line\">7、运行Adobe 程序，激活成功。享受ADOBE CS6吧！</div></pre></td></tr></table></figure>\n<p>下载链接: <a href=\"https://pan.baidu.com/s/1ciesRO\">https://pan.baidu.com/s/1ciesRO</a> 密码: f95w</p>\n"},{"_content":"> 排除条件\n\n\n![exclude.png](http://upload-images.jianshu.io/upload_images/80378-bd10a110bf9ea466.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n> 相关条件、相关网站\n\n\n![related.png](http://upload-images.jianshu.io/upload_images/80378-8141a6cc1d1df549.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n> 关联文档、电影、PDF等等\n\n![:file.png](http://upload-images.jianshu.io/upload_images/80378-ff5ca6826cb4af77.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n> 站内搜索\n\n![:site.png](http://upload-images.jianshu.io/upload_images/80378-a45d59033cace0f9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n","source":"_posts/如何更有效地使用谷歌搜索-Chrome.md","raw":"> 排除条件\n\n\n![exclude.png](http://upload-images.jianshu.io/upload_images/80378-bd10a110bf9ea466.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n> 相关条件、相关网站\n\n\n![related.png](http://upload-images.jianshu.io/upload_images/80378-8141a6cc1d1df549.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n> 关联文档、电影、PDF等等\n\n![:file.png](http://upload-images.jianshu.io/upload_images/80378-ff5ca6826cb4af77.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n> 站内搜索\n\n![:site.png](http://upload-images.jianshu.io/upload_images/80378-a45d59033cace0f9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n","slug":"如何更有效地使用谷歌搜索-Chrome","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","_id":"ciye454xr00077v0osep7f2tq","title":"","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>排除条件</p>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/80378-bd10a110bf9ea466.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"exclude.png\"></p>\n<blockquote>\n<p>相关条件、相关网站</p>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/80378-8141a6cc1d1df549.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"related.png\"></p>\n<blockquote>\n<p>关联文档、电影、PDF等等</p>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/80378-ff5ca6826cb4af77.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\":file.png\"></p>\n<blockquote>\n<p>站内搜索</p>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/80378-a45d59033cace0f9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\":site.png\"></p>\n","excerpt":"","more":"<blockquote>\n<p>排除条件</p>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/80378-bd10a110bf9ea466.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"exclude.png\"></p>\n<blockquote>\n<p>相关条件、相关网站</p>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/80378-8141a6cc1d1df549.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"related.png\"></p>\n<blockquote>\n<p>关联文档、电影、PDF等等</p>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/80378-ff5ca6826cb4af77.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\":file.png\"></p>\n<blockquote>\n<p>站内搜索</p>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/80378-a45d59033cace0f9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\":site.png\"></p>\n"},{"_content":"# 开发工具\n\n> 界面 \n\n![](http://upload-images.jianshu.io/upload_images/80378-4b84ed29811ea9f0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n> 开发功能类型和功能类别\n\n![](http://upload-images.jianshu.io/upload_images/80378-139c21dd0aea7d9b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![](http://upload-images.jianshu.io/upload_images/80378-9e2a3fea2678a8ad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n`单实体`:例如公告管理.\n\n`多实体`:\n\n![单位管理](http://upload-images.jianshu.io/upload_images/80378-d4f011e94487b8bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n> 关于开发多实体开发步骤:\n\n\n![添加](http://upload-images.jianshu.io/upload_images/80378-2c09822f7adbf18b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n\n\n\n\n\n\n\n","source":"_posts/LI系统整体框架解析.md","raw":"# 开发工具\n\n> 界面 \n\n![](http://upload-images.jianshu.io/upload_images/80378-4b84ed29811ea9f0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n> 开发功能类型和功能类别\n\n![](http://upload-images.jianshu.io/upload_images/80378-139c21dd0aea7d9b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![](http://upload-images.jianshu.io/upload_images/80378-9e2a3fea2678a8ad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n`单实体`:例如公告管理.\n\n`多实体`:\n\n![单位管理](http://upload-images.jianshu.io/upload_images/80378-d4f011e94487b8bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n> 关于开发多实体开发步骤:\n\n\n![添加](http://upload-images.jianshu.io/upload_images/80378-2c09822f7adbf18b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n\n\n\n\n\n\n\n","slug":"LI系统整体框架解析","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","_id":"ciye459n800087v0oh336pecv","title":"","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"开发工具\"><a href=\"#开发工具\" class=\"headerlink\" title=\"开发工具\"></a>开发工具</h1><blockquote>\n<p>界面 </p>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/80378-4b84ed29811ea9f0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<blockquote>\n<p>开发功能类型和功能类别</p>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/80378-139c21dd0aea7d9b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/80378-9e2a3fea2678a8ad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<p><code>单实体</code>:例如公告管理.</p>\n<p><code>多实体</code>:</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/80378-d4f011e94487b8bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"单位管理\"></p>\n<blockquote>\n<p>关于开发多实体开发步骤:</p>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/80378-2c09822f7adbf18b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"添加\"></p>\n","excerpt":"","more":"<h1 id=\"开发工具\"><a href=\"#开发工具\" class=\"headerlink\" title=\"开发工具\"></a>开发工具</h1><blockquote>\n<p>界面 </p>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/80378-4b84ed29811ea9f0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<blockquote>\n<p>开发功能类型和功能类别</p>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/80378-139c21dd0aea7d9b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/80378-9e2a3fea2678a8ad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<p><code>单实体</code>:例如公告管理.</p>\n<p><code>多实体</code>:</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/80378-d4f011e94487b8bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"单位管理\"></p>\n<blockquote>\n<p>关于开发多实体开发步骤:</p>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/80378-2c09822f7adbf18b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"添加\"></p>\n"},{"_content":"> 注意先下载所需要的各类依赖之后再装主题ImageMagick\n\n```\n\n参考记录:\nhttp://blog.csdn.net/cloudsben/article/details/8164047\n\n```\n\n\n> api 的链接\n\n```\n\nim4java:\nhttp://im4java.sourceforge.net/api/org/im4java/core/IMOps.html\n\n对应的imageMagick的命令行:\nhttp://www.imagemagick.org/script/mogrify.php \n\n```\n","source":"_posts/图像处理-ImageMagick-+-im4java.md","raw":"> 注意先下载所需要的各类依赖之后再装主题ImageMagick\n\n```\n\n参考记录:\nhttp://blog.csdn.net/cloudsben/article/details/8164047\n\n```\n\n\n> api 的链接\n\n```\n\nim4java:\nhttp://im4java.sourceforge.net/api/org/im4java/core/IMOps.html\n\n对应的imageMagick的命令行:\nhttp://www.imagemagick.org/script/mogrify.php \n\n```\n","slug":"图像处理-ImageMagick-+-im4java","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","_id":"ciye45jfg00097v0o9wdt1q6v","title":"","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>注意先下载所需要的各类依赖之后再装主题ImageMagick</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">参考记录:</div><div class=\"line\">http://blog.csdn.net/cloudsben/article/details/8164047</div></pre></td></tr></table></figure>\n<blockquote>\n<p>api 的链接</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">im4java:</div><div class=\"line\">http://im4java.sourceforge.net/api/org/im4java/core/IMOps.html</div><div class=\"line\"></div><div class=\"line\">对应的imageMagick的命令行:</div><div class=\"line\">http://www.imagemagick.org/script/mogrify.php</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<blockquote>\n<p>注意先下载所需要的各类依赖之后再装主题ImageMagick</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">参考记录:</div><div class=\"line\">http://blog.csdn.net/cloudsben/article/details/8164047</div></pre></td></tr></table></figure>\n<blockquote>\n<p>api 的链接</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">im4java:</div><div class=\"line\">http://im4java.sourceforge.net/api/org/im4java/core/IMOps.html</div><div class=\"line\"></div><div class=\"line\">对应的imageMagick的命令行:</div><div class=\"line\">http://www.imagemagick.org/script/mogrify.php</div></pre></td></tr></table></figure>\n"},{"_content":"\n","source":"_posts/Aspose-barcode-.md","raw":"\n","slug":"Aspose-barcode-","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","_id":"ciye45jfh000a7v0oa562btbs","title":"","comments":1,"layout":"post","photos":[],"link":"","content":"","excerpt":"","more":""},{"_content":"数据库的管理\nsys_func : 负责模块的界面的初始化 initGrid 和资源的生成 getData\n\n\n\njchpqsd 借出货品签收单\n\nJcHpQsd\n\nLoanProductRec\n\nhhspqsd 还回商品签收单\n\nHhSpQsd\n\nReturnProductRec\n\n\nsys_func\t功能设置 功能模块包的关联 初始化界面和 获取数据\nsys_buttoncfg\t按钮设置 配置功能\nsys_queryparamcfg 查询框设置 配置查询的模块\n\n\n[\n  {\n    \"QUERYOPER\": \"BACTERINOUTSTATUS\",\n    \"QUERYTYPE\": \"querylist\"\n  },\n  {\n    \"QUERYOPER\": \"BILLPRINTFLAG\",\n    \"QUERYTYPE\": \"querylist\"\n  },\n  {\n    \"QUERYOPER\": \"DISPATCHSTATUS\",\n    \"QUERYTYPE\": \"querylist\"\n  },\n  {\n    \"QUERYOPER\": \"DRIVEPERIOD\",\n    \"QUERYTYPE\": \"querylist\"\n  },\n  {\n    \"QUERYOPER\": \"PRINTFLAG\",\n    \"QUERYTYPE\": \"querylist\"\n  },\n  {\n    \"QUERYOPER\": \"READYFLAG\",\n    \"QUERYTYPE\": \"querylist\"\n  },\n  {\n    \"QUERYOPER\": \"RGTYPE\",\n    \"QUERYTYPE\": \"querylist\"\n  },\n  {\n    \"QUERYOPER\": \"SIGNFORREDISPATCHFLAG\",\n    \"QUERYTYPE\": \"querylist\"\n  },\n  {\n    \"QUERYOPER\": \"SIGNFORSTATUS\",\n    \"QUERYTYPE\": \"querylist\"\n  },\n  {\n    \"QUERYOPER\": \"SPECIALCONFLAG\",\n    \"QUERYTYPE\": \"querylist\"\n  },\n  {\n    \"QUERYOPER\": \"TRANSPORTMODE\",\n    \"QUERYTYPE\": \"querylist\"\n  },\n  {\n    \"QUERYOPER\": \"YESNO\",\n    \"QUERYTYPE\": \"querylist\"\n  },\n  {\n    \"QUERYOPER\": \"ZX_BIG_STOCK_TOCOMPANY\",\n    \"QUERYTYPE\": \"querylist\"\n  },\n  {\n    \"QUERYOPER\": \"between\",\n    \"QUERYTYPE\": \"date\"\n  },\n  {\n    \"QUERYOPER\": \"dispatchwarid\",\n    \"QUERYTYPE\": \"number\"\n  },\n  {\n    \"QUERYOPER\": \"equal\",\n    \"QUERYTYPE\": \"number\"\n  },\n  {\n    \"QUERYOPER\": \"equal\",\n    \"QUERYTYPE\": \"string\"\n  },\n  {\n    \"QUERYOPER\": \"matching\",\n    \"QUERYTYPE\": \"string\"\n  },\n  {\n    \"QUERYOPER\": \"select companyid consignor,companyshortname consignorname from wms_company t where companytype = 1 and companyid in (1,54640,469706,1013981,8603080)\",\n    \"QUERYTYPE\": \"sqllist\"\n  },\n  {\n    \"QUERYOPER\": \"select companyid,companyshortname from wms_company where companytype = 1 and companyid in (1,54640,469706,1013981,8603080)\",\n    \"QUERYTYPE\": \"sqllist\"\n  },\n  {\n    \"QUERYOPER\": \"select serverid,servername from sys_server where usestatus = 1\",\n    \"QUERYTYPE\": \"sqllist\"\n  },\n  {\n    \"QUERYOPER\": \"select typeid,typename from sys_print_def\",\n    \"QUERYTYPE\": \"sqllist\"\n  }\n]\n\nsys_server\t打印池服务器设置\nsys_print_def 打印定义\tsys_print_printer_def打印机定义\nsys_dataitemcfg  sys_dataitemcfg_extend  字段属性及中文\nsys_datadictionary 字典\nsys_query_filter 查询授权\nsys_report_job 打印任务\nobe_print_doc 打印文档号\n\n\n","source":"_posts/备忘录.md","raw":"数据库的管理\nsys_func : 负责模块的界面的初始化 initGrid 和资源的生成 getData\n\n\n\njchpqsd 借出货品签收单\n\nJcHpQsd\n\nLoanProductRec\n\nhhspqsd 还回商品签收单\n\nHhSpQsd\n\nReturnProductRec\n\n\nsys_func\t功能设置 功能模块包的关联 初始化界面和 获取数据\nsys_buttoncfg\t按钮设置 配置功能\nsys_queryparamcfg 查询框设置 配置查询的模块\n\n\n[\n  {\n    \"QUERYOPER\": \"BACTERINOUTSTATUS\",\n    \"QUERYTYPE\": \"querylist\"\n  },\n  {\n    \"QUERYOPER\": \"BILLPRINTFLAG\",\n    \"QUERYTYPE\": \"querylist\"\n  },\n  {\n    \"QUERYOPER\": \"DISPATCHSTATUS\",\n    \"QUERYTYPE\": \"querylist\"\n  },\n  {\n    \"QUERYOPER\": \"DRIVEPERIOD\",\n    \"QUERYTYPE\": \"querylist\"\n  },\n  {\n    \"QUERYOPER\": \"PRINTFLAG\",\n    \"QUERYTYPE\": \"querylist\"\n  },\n  {\n    \"QUERYOPER\": \"READYFLAG\",\n    \"QUERYTYPE\": \"querylist\"\n  },\n  {\n    \"QUERYOPER\": \"RGTYPE\",\n    \"QUERYTYPE\": \"querylist\"\n  },\n  {\n    \"QUERYOPER\": \"SIGNFORREDISPATCHFLAG\",\n    \"QUERYTYPE\": \"querylist\"\n  },\n  {\n    \"QUERYOPER\": \"SIGNFORSTATUS\",\n    \"QUERYTYPE\": \"querylist\"\n  },\n  {\n    \"QUERYOPER\": \"SPECIALCONFLAG\",\n    \"QUERYTYPE\": \"querylist\"\n  },\n  {\n    \"QUERYOPER\": \"TRANSPORTMODE\",\n    \"QUERYTYPE\": \"querylist\"\n  },\n  {\n    \"QUERYOPER\": \"YESNO\",\n    \"QUERYTYPE\": \"querylist\"\n  },\n  {\n    \"QUERYOPER\": \"ZX_BIG_STOCK_TOCOMPANY\",\n    \"QUERYTYPE\": \"querylist\"\n  },\n  {\n    \"QUERYOPER\": \"between\",\n    \"QUERYTYPE\": \"date\"\n  },\n  {\n    \"QUERYOPER\": \"dispatchwarid\",\n    \"QUERYTYPE\": \"number\"\n  },\n  {\n    \"QUERYOPER\": \"equal\",\n    \"QUERYTYPE\": \"number\"\n  },\n  {\n    \"QUERYOPER\": \"equal\",\n    \"QUERYTYPE\": \"string\"\n  },\n  {\n    \"QUERYOPER\": \"matching\",\n    \"QUERYTYPE\": \"string\"\n  },\n  {\n    \"QUERYOPER\": \"select companyid consignor,companyshortname consignorname from wms_company t where companytype = 1 and companyid in (1,54640,469706,1013981,8603080)\",\n    \"QUERYTYPE\": \"sqllist\"\n  },\n  {\n    \"QUERYOPER\": \"select companyid,companyshortname from wms_company where companytype = 1 and companyid in (1,54640,469706,1013981,8603080)\",\n    \"QUERYTYPE\": \"sqllist\"\n  },\n  {\n    \"QUERYOPER\": \"select serverid,servername from sys_server where usestatus = 1\",\n    \"QUERYTYPE\": \"sqllist\"\n  },\n  {\n    \"QUERYOPER\": \"select typeid,typename from sys_print_def\",\n    \"QUERYTYPE\": \"sqllist\"\n  }\n]\n\nsys_server\t打印池服务器设置\nsys_print_def 打印定义\tsys_print_printer_def打印机定义\nsys_dataitemcfg  sys_dataitemcfg_extend  字段属性及中文\nsys_datadictionary 字典\nsys_query_filter 查询授权\nsys_report_job 打印任务\nobe_print_doc 打印文档号\n\n\n","slug":"备忘录","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","_id":"ciye45jfl000b7v0obpn59xlt","title":"","comments":1,"layout":"post","photos":[],"link":"","content":"<p>数据库的管理<br>sys_func : 负责模块的界面的初始化 initGrid 和资源的生成 getData</p>\n<p>jchpqsd 借出货品签收单</p>\n<p>JcHpQsd</p>\n<p>LoanProductRec</p>\n<p>hhspqsd 还回商品签收单</p>\n<p>HhSpQsd</p>\n<p>ReturnProductRec</p>\n<p>sys_func    功能设置 功能模块包的关联 初始化界面和 获取数据<br>sys_buttoncfg    按钮设置 配置功能<br>sys_queryparamcfg 查询框设置 配置查询的模块</p>\n<p>[<br>  {<br>    “QUERYOPER”: “BACTERINOUTSTATUS”,<br>    “QUERYTYPE”: “querylist”<br>  },<br>  {<br>    “QUERYOPER”: “BILLPRINTFLAG”,<br>    “QUERYTYPE”: “querylist”<br>  },<br>  {<br>    “QUERYOPER”: “DISPATCHSTATUS”,<br>    “QUERYTYPE”: “querylist”<br>  },<br>  {<br>    “QUERYOPER”: “DRIVEPERIOD”,<br>    “QUERYTYPE”: “querylist”<br>  },<br>  {<br>    “QUERYOPER”: “PRINTFLAG”,<br>    “QUERYTYPE”: “querylist”<br>  },<br>  {<br>    “QUERYOPER”: “READYFLAG”,<br>    “QUERYTYPE”: “querylist”<br>  },<br>  {<br>    “QUERYOPER”: “RGTYPE”,<br>    “QUERYTYPE”: “querylist”<br>  },<br>  {<br>    “QUERYOPER”: “SIGNFORREDISPATCHFLAG”,<br>    “QUERYTYPE”: “querylist”<br>  },<br>  {<br>    “QUERYOPER”: “SIGNFORSTATUS”,<br>    “QUERYTYPE”: “querylist”<br>  },<br>  {<br>    “QUERYOPER”: “SPECIALCONFLAG”,<br>    “QUERYTYPE”: “querylist”<br>  },<br>  {<br>    “QUERYOPER”: “TRANSPORTMODE”,<br>    “QUERYTYPE”: “querylist”<br>  },<br>  {<br>    “QUERYOPER”: “YESNO”,<br>    “QUERYTYPE”: “querylist”<br>  },<br>  {<br>    “QUERYOPER”: “ZX_BIG_STOCK_TOCOMPANY”,<br>    “QUERYTYPE”: “querylist”<br>  },<br>  {<br>    “QUERYOPER”: “between”,<br>    “QUERYTYPE”: “date”<br>  },<br>  {<br>    “QUERYOPER”: “dispatchwarid”,<br>    “QUERYTYPE”: “number”<br>  },<br>  {<br>    “QUERYOPER”: “equal”,<br>    “QUERYTYPE”: “number”<br>  },<br>  {<br>    “QUERYOPER”: “equal”,<br>    “QUERYTYPE”: “string”<br>  },<br>  {<br>    “QUERYOPER”: “matching”,<br>    “QUERYTYPE”: “string”<br>  },<br>  {<br>    “QUERYOPER”: “select companyid consignor,companyshortname consignorname from wms_company t where companytype = 1 and companyid in (1,54640,469706,1013981,8603080)”,<br>    “QUERYTYPE”: “sqllist”<br>  },<br>  {<br>    “QUERYOPER”: “select companyid,companyshortname from wms_company where companytype = 1 and companyid in (1,54640,469706,1013981,8603080)”,<br>    “QUERYTYPE”: “sqllist”<br>  },<br>  {<br>    “QUERYOPER”: “select serverid,servername from sys_server where usestatus = 1”,<br>    “QUERYTYPE”: “sqllist”<br>  },<br>  {<br>    “QUERYOPER”: “select typeid,typename from sys_print_def”,<br>    “QUERYTYPE”: “sqllist”<br>  }<br>]</p>\n<p>sys_server    打印池服务器设置<br>sys_print_def 打印定义    sys_print_printer_def打印机定义<br>sys_dataitemcfg  sys_dataitemcfg_extend  字段属性及中文<br>sys_datadictionary 字典<br>sys_query_filter 查询授权<br>sys_report_job 打印任务<br>obe_print_doc 打印文档号</p>\n","excerpt":"","more":"<p>数据库的管理<br>sys_func : 负责模块的界面的初始化 initGrid 和资源的生成 getData</p>\n<p>jchpqsd 借出货品签收单</p>\n<p>JcHpQsd</p>\n<p>LoanProductRec</p>\n<p>hhspqsd 还回商品签收单</p>\n<p>HhSpQsd</p>\n<p>ReturnProductRec</p>\n<p>sys_func    功能设置 功能模块包的关联 初始化界面和 获取数据<br>sys_buttoncfg    按钮设置 配置功能<br>sys_queryparamcfg 查询框设置 配置查询的模块</p>\n<p>[<br>  {<br>    “QUERYOPER”: “BACTERINOUTSTATUS”,<br>    “QUERYTYPE”: “querylist”<br>  },<br>  {<br>    “QUERYOPER”: “BILLPRINTFLAG”,<br>    “QUERYTYPE”: “querylist”<br>  },<br>  {<br>    “QUERYOPER”: “DISPATCHSTATUS”,<br>    “QUERYTYPE”: “querylist”<br>  },<br>  {<br>    “QUERYOPER”: “DRIVEPERIOD”,<br>    “QUERYTYPE”: “querylist”<br>  },<br>  {<br>    “QUERYOPER”: “PRINTFLAG”,<br>    “QUERYTYPE”: “querylist”<br>  },<br>  {<br>    “QUERYOPER”: “READYFLAG”,<br>    “QUERYTYPE”: “querylist”<br>  },<br>  {<br>    “QUERYOPER”: “RGTYPE”,<br>    “QUERYTYPE”: “querylist”<br>  },<br>  {<br>    “QUERYOPER”: “SIGNFORREDISPATCHFLAG”,<br>    “QUERYTYPE”: “querylist”<br>  },<br>  {<br>    “QUERYOPER”: “SIGNFORSTATUS”,<br>    “QUERYTYPE”: “querylist”<br>  },<br>  {<br>    “QUERYOPER”: “SPECIALCONFLAG”,<br>    “QUERYTYPE”: “querylist”<br>  },<br>  {<br>    “QUERYOPER”: “TRANSPORTMODE”,<br>    “QUERYTYPE”: “querylist”<br>  },<br>  {<br>    “QUERYOPER”: “YESNO”,<br>    “QUERYTYPE”: “querylist”<br>  },<br>  {<br>    “QUERYOPER”: “ZX_BIG_STOCK_TOCOMPANY”,<br>    “QUERYTYPE”: “querylist”<br>  },<br>  {<br>    “QUERYOPER”: “between”,<br>    “QUERYTYPE”: “date”<br>  },<br>  {<br>    “QUERYOPER”: “dispatchwarid”,<br>    “QUERYTYPE”: “number”<br>  },<br>  {<br>    “QUERYOPER”: “equal”,<br>    “QUERYTYPE”: “number”<br>  },<br>  {<br>    “QUERYOPER”: “equal”,<br>    “QUERYTYPE”: “string”<br>  },<br>  {<br>    “QUERYOPER”: “matching”,<br>    “QUERYTYPE”: “string”<br>  },<br>  {<br>    “QUERYOPER”: “select companyid consignor,companyshortname consignorname from wms_company t where companytype = 1 and companyid in (1,54640,469706,1013981,8603080)”,<br>    “QUERYTYPE”: “sqllist”<br>  },<br>  {<br>    “QUERYOPER”: “select companyid,companyshortname from wms_company where companytype = 1 and companyid in (1,54640,469706,1013981,8603080)”,<br>    “QUERYTYPE”: “sqllist”<br>  },<br>  {<br>    “QUERYOPER”: “select serverid,servername from sys_server where usestatus = 1”,<br>    “QUERYTYPE”: “sqllist”<br>  },<br>  {<br>    “QUERYOPER”: “select typeid,typename from sys_print_def”,<br>    “QUERYTYPE”: “sqllist”<br>  }<br>]</p>\n<p>sys_server    打印池服务器设置<br>sys_print_def 打印定义    sys_print_printer_def打印机定义<br>sys_dataitemcfg  sys_dataitemcfg_extend  字段属性及中文<br>sys_datadictionary 字典<br>sys_query_filter 查询授权<br>sys_report_job 打印任务<br>obe_print_doc 打印文档号</p>\n"},{"_content":"> 条码信息和贴士\n\n```\n\nhttp://china.keyence.com/ss/products/auto_id/barcode_lecture/\n\n```\n\n> 应用背景:公司需要将发票中的二维码和条码一同识别并于相关的订单绑定至数据库\n\n> 初略的第一版\n\n```\n\npackage com.xudaolong.bean;\n\nimport com.aspose.barcode.*;\nimport com.aspose.barcoderecognition.BarCodeReadType;\nimport com.aspose.barcoderecognition.BarCodeReader;\nimport com.xudaolong.Utils.ImageCutterUtil;\n\nimport javax.imageio.ImageIO;\nimport java.awt.image.BufferedImage;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.ArrayList;\n\n/**\n * 文 件 名: AsposeBarcode.java\n * 创 建 人: xudaolong\n * 创建日期: 16/7/12 14:24\n * 邮   箱: xudaolong@vip.qq.com\n * 博   客: http://xudaolong.github.io/\n * 修改时间：\n * 修改备注：\n */\n\npublic class AsposeBarcode {\n\n    private static final String TAG = \"AsposeBarcode\";\n\n    /**\n     * 发票信息列表\n     */\n    private ArrayList<BarcodeInfo> list = new ArrayList();\n\n\n    public AsposeBarcode() {\n\n    }\n\n    /**\n     * 存储扫描发票信息(二维码和二五码)\n     */\n    class BarcodeInfo {\n        private static final String TAG = \"BarcodeInfo\";\n\n        public BarcodeInfo() {\n\n        }\n\n        private String FileName;\n        private String Interleaved2of5;\n        private String QR;\n\n        public void clear() {\n            this.setFileName(\"\");\n            this.setInterleaved2of5(\"\");\n            this.setQR(\"\");\n        }\n\n        public String getFileName() {\n            return FileName;\n        }\n\n        public void setFileName(String fileName) {\n            this.FileName = fileName;\n        }\n\n        public String getQR() {\n            return QR;\n        }\n\n        public void setQR(String QR) {\n            this.QR = QR;\n        }\n\n        public String getInterleaved2of5() {\n            return Interleaved2of5;\n        }\n\n        public void setInterleaved2of5(String interleaved2of5) {\n            Interleaved2of5 = interleaved2of5;\n        }\n\n        public void checkInfo(BarcodeInfo _info) {\n            if (_info.getInterleaved2of5().equals(\"\")) {\n                System.out.println(_info.getFileName() + \":: 不能获取 Interleaved2of5 条形码\");\n            }\n\n            if (_info.getQR().equals(\"\")) {\n                System.out.println(_info.getQR() + \":: 不能获取 QR 条形码 \");\n            }\n        }\n\n        @Override\n        public String toString() {\n            return \"BarcodeInfo{\" +\n                    \"FileName='\" + this.getFileName() + '\\'' +\n                    \", Interleaved2of5='\" + this.getInterleaved2of5() + '\\'' +\n                    \", QR='\" + this.getQR() + '\\'' +\n                    '}';\n        }\n    }\n\n    /**\n     * 获取工具类\n     *\n     * @return\n     */\n    public BarCodeBuilder getInstance() {\n        return new BarCodeBuilder();\n    }\n\n    /**\n     * 获取一个普通的QR图片\n     *\n     * @return\n     */\n    public BarCodeBuilder getPublicQR(String context, String targetPath) {\n\n        // 初始化\n        BarCodeBuilder builder = this.getInstance();\n\n        builder.setCodeText(context);\n        builder.setSymbologyType(Symbology.QR);\n\n        // 设置编程模式\n        builder.setQREncodeMode(QREncodeMode.Auto);\n\n        // 设置容错率\n        builder.setQRErrorLevel(QRErrorLevel.LevelH);\n\n        // 隐藏文字\n        builder.setCodeLocation(CodeLocation.None);\n\n        // 翻转\n        builder.setRotationAngleF(0);\n\n        builder.setImageHeight(88);\n        builder.setImageWidth(88);\n\n        // 保存\n        builder.save(targetPath);\n\n        cutQR(targetPath);\n\n        return builder;\n    }\n\n\n    public void cutQR(String sourcePath) {\n\n        try {\n            File file = new File(sourcePath);\n\n            BufferedImage image = ImageIO.read(file);\n\n            // 起始坐标，剪切大小\n            int x = 14;\n            int y = 25;\n            int width = 62;\n            int height = 62;\n            // 参考图像大小\n            int clientWidth = 88;\n            int clientHeight = 88;\n\n            double destWidth = image.getWidth();\n            double destHeight = image.getHeight();\n\n            if (destWidth < width || destHeight < height)\n                throw new Exception(\"源图大小小于截取图片大小!\");\n\n\n            double widthRatio = destWidth / clientWidth;\n            double heightRatio = destHeight / clientHeight;\n\n            //修改一下单位\n            x = Double.valueOf(x * widthRatio).intValue();\n            y = Double.valueOf(y * heightRatio).intValue();\n            width = Double.valueOf(width * widthRatio).intValue();\n            height = Double.valueOf(height * heightRatio).intValue();\n\n            System.out.println(\"裁剪大小  x:\" + x + \",y:\" + y + \",width:\" + width + \",height:\" + height);\n\n            //获取指定的名字\n//            String formatName = getImageFormatName(file);\n//            String pathSuffix = \".\" + formatName;\n//            String pathPrefix = getFilePrefixPath(file);\n//            String targetPath = pathPrefix + System.currentTimeMillis() + pathSuffix;\n\n            //最后一步进行裁剪到指定的名字\n\n            File destFile = new File(sourcePath);\n\n            ImageCutterUtil.cutImage(file, destFile, x, y, width, height);\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n    }\n\n\n    /**\n     * 读取QR\n     *\n     * @return\n     */\n    public ArrayList<BarcodeInfo> ReaderImg(String dest) throws IOException {\n\n        if (dest == null) {\n            return null;\n        }\n\n        /**\n         * 转成 BufferedImage 图像缓存区便于操作\n         */\n//        BufferedImage bufImg = ImageIO.read(new FileInputStream(dest));\n\n        //创建指定的读取器 25码 和 QR 码\n        BarCodeReader reader = new BarCodeReader(dest, BarCodeReadType.QR | BarCodeReadType.Interleaved2of5);\n\n        /**\n         * MaxPerformance\t1\tFinds all the possible good and average quality barcodes. Uses only the fastest algorithms. Enabled by default.\n         * MaxQuality\t2\tFinds all the possible barcodes with good or bad quality. Doesn't return potential barcodes. Uses different fast and slow algorithms.\n         * MaxBarCodes\t3\tExtends MaxQuality. Finds even potential barcodes. Uses extra algorithms which may recognize incorrect barcodes, barcodes on complex background, noisy or damaged barcodes and etc. You may observe extra spurious barcodes.\n         * ManualHints\t4\tUser configures hints optionally. Allows you to adjust the balance between speed and quality manually.\n         */\n        reader.setRecognitionMode(1);\n\n        /**\n         * 设定识别超时,有助于提高识别效率\n         */\n//        reader.setTimeout(3500);\n\n        //暂时存储\n        BarcodeInfo _info = new BarcodeInfo();\n\n        //重置\n        _info.clear();\n\n        try {\n            while (reader.read()) {\n                _info.setFileName(reader.getFileName());\n\n                if (reader.getReadTypeName().equals(\"Interleaved2of5\")) {\n                    _info.setInterleaved2of5(reader.getCodeText());\n                }\n\n                if (reader.getReadTypeName().equals(\"QR\")) {\n                    _info.setQR(reader.getCodeText());\n                }\n            }\n\n            list.add(_info);\n            reader.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            _info.checkInfo(_info);\n        }\n\n        return list;\n    }\n\n}\n\n\n```\n\n\n> 测试文件\n\n```\n\npackage com.xudaolong.QR;\n\nimport com.xudaolong.Utils.Path;\nimport com.xudaolong.bean.AsposeBarcode;\n\nimport java.io.IOException;\nimport java.util.ArrayList;\n\n/**\n * Created by xudaolong on 16/7/12.\n */\n\npublic class TestQR {\n\n    public static void main(String[] args) throws IOException {\n        //指定相对的路径\n        String path = “/resources/src/com/xudaolong/second”;\n\n        long startTime=System.nanoTime();   //获取开始时间\n\n\n        ArrayList<String> allFile =  new Path().getAllFile(path);\n\n        for (int i = 0; i < allFile.size(); i++) {\n            String _filename = allFile.get(i);\n            System.out.println(new AsposeBarcode().ReaderImg(_filename));\n        }\n\n        long endTime=System.nanoTime(); //获取结束时间\n        System.out.println(“程序运行时间： “+(endTime-startTime)+”ns”);\n        \n        System.out.println(allFile);\n\n    }\n\n}\n\n\n```\n\n> 辅助类 Path::用于处理路径的问题\n\n```\n\npackage com.xudaolong.Utils;\n\n\nimport java.io.File;\nimport java.util.ArrayList;\n\n/**\n * Created by xudaolong on 16/7/12.\n */\npublic class Path {\n\n    private static final String TAG = \"Path\";\n\n    public static final String CURRFILE = new String(System.getProperty(\"user.dir\"));\n\n    /**\n     * 创建不存在的目录\n     *\n     * @param c\n     * @param dir\n     * @return\n     */\n    public File rebuildDir(Class c, File dir) {\n\n        for (String s : c.getName().split(\"\\\\.\")) {\n            dir = new File(dir, s);\n            if (dir.isDirectory() == false)\n                dir.mkdirs();\n        }\n\n        return dir;\n    }\n\n    /**\n     * 返回指定的路径为 resources\n     *\n     * @param c\n     * @return\n     */\n    public String getDataDir(Class c) {\n        //目录resolve\n        File _currfile = new File(CURRFILE, \"resources\");\n        _currfile = this.rebuildDir(c, _currfile);\n\n        System.out.println(TAG + \"::Using data directory::\" + _currfile.toString());\n        return _currfile.toString() + File.separator;\n\n    }\n\n    /**\n     * 返回指定相对路径,相对的是user.dir\n     *\n     * @param c\n     * @param desc\n     * @return\n     */\n    public String getDataDir(Class c, String desc) {\n\n        File _currfile = new File(CURRFILE, \"resources\");\n\n        //目录resolve\n        _currfile = new File(_currfile, desc);\n        _currfile = this.rebuildDir(c, _currfile);\n\n        System.out.println(TAG + \"::Using data directory::\" + _currfile.toString());\n\n        return _currfile.toString() + File.separator;\n    }\n\n    /**\n     * 返回绝对路径的文件名组\n     *\n     * @param floder\n     * @return\n     */\n    public ArrayList<String> getAllFile(String floder) {\n        if (floder == null) {\n            return null;\n        }\n        //存储文件名\n        ArrayList _allfilename = new ArrayList();\n\n        //获取当前的路径\n        File _currfile = new File(CURRFILE);\n\n        //目录resolve\n        _currfile = new File(_currfile, floder);\n\n        if (!_currfile.exists()) {\n            System.out.println(floder + \" not exists\");\n            return null;\n        }\n\n        File _dir[] = _currfile.listFiles();\n\n        for (int i = 0; i < _dir.length; i++) {\n            File fs = _dir[i];\n            if (fs.isDirectory()) {\n                System.out.println(fs.getName() + “ [目录]”);\n            } else {\n                _allfilename.add(_currfile + “/“ + fs.getName());\n            }\n        }\n\n        return _allfilename;\n    }\n\n}\n\n\n```\n\n\n\n\n\n\n","source":"_posts/Aspose-barcode-条码和二维码处理.md","raw":"> 条码信息和贴士\n\n```\n\nhttp://china.keyence.com/ss/products/auto_id/barcode_lecture/\n\n```\n\n> 应用背景:公司需要将发票中的二维码和条码一同识别并于相关的订单绑定至数据库\n\n> 初略的第一版\n\n```\n\npackage com.xudaolong.bean;\n\nimport com.aspose.barcode.*;\nimport com.aspose.barcoderecognition.BarCodeReadType;\nimport com.aspose.barcoderecognition.BarCodeReader;\nimport com.xudaolong.Utils.ImageCutterUtil;\n\nimport javax.imageio.ImageIO;\nimport java.awt.image.BufferedImage;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.ArrayList;\n\n/**\n * 文 件 名: AsposeBarcode.java\n * 创 建 人: xudaolong\n * 创建日期: 16/7/12 14:24\n * 邮   箱: xudaolong@vip.qq.com\n * 博   客: http://xudaolong.github.io/\n * 修改时间：\n * 修改备注：\n */\n\npublic class AsposeBarcode {\n\n    private static final String TAG = \"AsposeBarcode\";\n\n    /**\n     * 发票信息列表\n     */\n    private ArrayList<BarcodeInfo> list = new ArrayList();\n\n\n    public AsposeBarcode() {\n\n    }\n\n    /**\n     * 存储扫描发票信息(二维码和二五码)\n     */\n    class BarcodeInfo {\n        private static final String TAG = \"BarcodeInfo\";\n\n        public BarcodeInfo() {\n\n        }\n\n        private String FileName;\n        private String Interleaved2of5;\n        private String QR;\n\n        public void clear() {\n            this.setFileName(\"\");\n            this.setInterleaved2of5(\"\");\n            this.setQR(\"\");\n        }\n\n        public String getFileName() {\n            return FileName;\n        }\n\n        public void setFileName(String fileName) {\n            this.FileName = fileName;\n        }\n\n        public String getQR() {\n            return QR;\n        }\n\n        public void setQR(String QR) {\n            this.QR = QR;\n        }\n\n        public String getInterleaved2of5() {\n            return Interleaved2of5;\n        }\n\n        public void setInterleaved2of5(String interleaved2of5) {\n            Interleaved2of5 = interleaved2of5;\n        }\n\n        public void checkInfo(BarcodeInfo _info) {\n            if (_info.getInterleaved2of5().equals(\"\")) {\n                System.out.println(_info.getFileName() + \":: 不能获取 Interleaved2of5 条形码\");\n            }\n\n            if (_info.getQR().equals(\"\")) {\n                System.out.println(_info.getQR() + \":: 不能获取 QR 条形码 \");\n            }\n        }\n\n        @Override\n        public String toString() {\n            return \"BarcodeInfo{\" +\n                    \"FileName='\" + this.getFileName() + '\\'' +\n                    \", Interleaved2of5='\" + this.getInterleaved2of5() + '\\'' +\n                    \", QR='\" + this.getQR() + '\\'' +\n                    '}';\n        }\n    }\n\n    /**\n     * 获取工具类\n     *\n     * @return\n     */\n    public BarCodeBuilder getInstance() {\n        return new BarCodeBuilder();\n    }\n\n    /**\n     * 获取一个普通的QR图片\n     *\n     * @return\n     */\n    public BarCodeBuilder getPublicQR(String context, String targetPath) {\n\n        // 初始化\n        BarCodeBuilder builder = this.getInstance();\n\n        builder.setCodeText(context);\n        builder.setSymbologyType(Symbology.QR);\n\n        // 设置编程模式\n        builder.setQREncodeMode(QREncodeMode.Auto);\n\n        // 设置容错率\n        builder.setQRErrorLevel(QRErrorLevel.LevelH);\n\n        // 隐藏文字\n        builder.setCodeLocation(CodeLocation.None);\n\n        // 翻转\n        builder.setRotationAngleF(0);\n\n        builder.setImageHeight(88);\n        builder.setImageWidth(88);\n\n        // 保存\n        builder.save(targetPath);\n\n        cutQR(targetPath);\n\n        return builder;\n    }\n\n\n    public void cutQR(String sourcePath) {\n\n        try {\n            File file = new File(sourcePath);\n\n            BufferedImage image = ImageIO.read(file);\n\n            // 起始坐标，剪切大小\n            int x = 14;\n            int y = 25;\n            int width = 62;\n            int height = 62;\n            // 参考图像大小\n            int clientWidth = 88;\n            int clientHeight = 88;\n\n            double destWidth = image.getWidth();\n            double destHeight = image.getHeight();\n\n            if (destWidth < width || destHeight < height)\n                throw new Exception(\"源图大小小于截取图片大小!\");\n\n\n            double widthRatio = destWidth / clientWidth;\n            double heightRatio = destHeight / clientHeight;\n\n            //修改一下单位\n            x = Double.valueOf(x * widthRatio).intValue();\n            y = Double.valueOf(y * heightRatio).intValue();\n            width = Double.valueOf(width * widthRatio).intValue();\n            height = Double.valueOf(height * heightRatio).intValue();\n\n            System.out.println(\"裁剪大小  x:\" + x + \",y:\" + y + \",width:\" + width + \",height:\" + height);\n\n            //获取指定的名字\n//            String formatName = getImageFormatName(file);\n//            String pathSuffix = \".\" + formatName;\n//            String pathPrefix = getFilePrefixPath(file);\n//            String targetPath = pathPrefix + System.currentTimeMillis() + pathSuffix;\n\n            //最后一步进行裁剪到指定的名字\n\n            File destFile = new File(sourcePath);\n\n            ImageCutterUtil.cutImage(file, destFile, x, y, width, height);\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n    }\n\n\n    /**\n     * 读取QR\n     *\n     * @return\n     */\n    public ArrayList<BarcodeInfo> ReaderImg(String dest) throws IOException {\n\n        if (dest == null) {\n            return null;\n        }\n\n        /**\n         * 转成 BufferedImage 图像缓存区便于操作\n         */\n//        BufferedImage bufImg = ImageIO.read(new FileInputStream(dest));\n\n        //创建指定的读取器 25码 和 QR 码\n        BarCodeReader reader = new BarCodeReader(dest, BarCodeReadType.QR | BarCodeReadType.Interleaved2of5);\n\n        /**\n         * MaxPerformance\t1\tFinds all the possible good and average quality barcodes. Uses only the fastest algorithms. Enabled by default.\n         * MaxQuality\t2\tFinds all the possible barcodes with good or bad quality. Doesn't return potential barcodes. Uses different fast and slow algorithms.\n         * MaxBarCodes\t3\tExtends MaxQuality. Finds even potential barcodes. Uses extra algorithms which may recognize incorrect barcodes, barcodes on complex background, noisy or damaged barcodes and etc. You may observe extra spurious barcodes.\n         * ManualHints\t4\tUser configures hints optionally. Allows you to adjust the balance between speed and quality manually.\n         */\n        reader.setRecognitionMode(1);\n\n        /**\n         * 设定识别超时,有助于提高识别效率\n         */\n//        reader.setTimeout(3500);\n\n        //暂时存储\n        BarcodeInfo _info = new BarcodeInfo();\n\n        //重置\n        _info.clear();\n\n        try {\n            while (reader.read()) {\n                _info.setFileName(reader.getFileName());\n\n                if (reader.getReadTypeName().equals(\"Interleaved2of5\")) {\n                    _info.setInterleaved2of5(reader.getCodeText());\n                }\n\n                if (reader.getReadTypeName().equals(\"QR\")) {\n                    _info.setQR(reader.getCodeText());\n                }\n            }\n\n            list.add(_info);\n            reader.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            _info.checkInfo(_info);\n        }\n\n        return list;\n    }\n\n}\n\n\n```\n\n\n> 测试文件\n\n```\n\npackage com.xudaolong.QR;\n\nimport com.xudaolong.Utils.Path;\nimport com.xudaolong.bean.AsposeBarcode;\n\nimport java.io.IOException;\nimport java.util.ArrayList;\n\n/**\n * Created by xudaolong on 16/7/12.\n */\n\npublic class TestQR {\n\n    public static void main(String[] args) throws IOException {\n        //指定相对的路径\n        String path = “/resources/src/com/xudaolong/second”;\n\n        long startTime=System.nanoTime();   //获取开始时间\n\n\n        ArrayList<String> allFile =  new Path().getAllFile(path);\n\n        for (int i = 0; i < allFile.size(); i++) {\n            String _filename = allFile.get(i);\n            System.out.println(new AsposeBarcode().ReaderImg(_filename));\n        }\n\n        long endTime=System.nanoTime(); //获取结束时间\n        System.out.println(“程序运行时间： “+(endTime-startTime)+”ns”);\n        \n        System.out.println(allFile);\n\n    }\n\n}\n\n\n```\n\n> 辅助类 Path::用于处理路径的问题\n\n```\n\npackage com.xudaolong.Utils;\n\n\nimport java.io.File;\nimport java.util.ArrayList;\n\n/**\n * Created by xudaolong on 16/7/12.\n */\npublic class Path {\n\n    private static final String TAG = \"Path\";\n\n    public static final String CURRFILE = new String(System.getProperty(\"user.dir\"));\n\n    /**\n     * 创建不存在的目录\n     *\n     * @param c\n     * @param dir\n     * @return\n     */\n    public File rebuildDir(Class c, File dir) {\n\n        for (String s : c.getName().split(\"\\\\.\")) {\n            dir = new File(dir, s);\n            if (dir.isDirectory() == false)\n                dir.mkdirs();\n        }\n\n        return dir;\n    }\n\n    /**\n     * 返回指定的路径为 resources\n     *\n     * @param c\n     * @return\n     */\n    public String getDataDir(Class c) {\n        //目录resolve\n        File _currfile = new File(CURRFILE, \"resources\");\n        _currfile = this.rebuildDir(c, _currfile);\n\n        System.out.println(TAG + \"::Using data directory::\" + _currfile.toString());\n        return _currfile.toString() + File.separator;\n\n    }\n\n    /**\n     * 返回指定相对路径,相对的是user.dir\n     *\n     * @param c\n     * @param desc\n     * @return\n     */\n    public String getDataDir(Class c, String desc) {\n\n        File _currfile = new File(CURRFILE, \"resources\");\n\n        //目录resolve\n        _currfile = new File(_currfile, desc);\n        _currfile = this.rebuildDir(c, _currfile);\n\n        System.out.println(TAG + \"::Using data directory::\" + _currfile.toString());\n\n        return _currfile.toString() + File.separator;\n    }\n\n    /**\n     * 返回绝对路径的文件名组\n     *\n     * @param floder\n     * @return\n     */\n    public ArrayList<String> getAllFile(String floder) {\n        if (floder == null) {\n            return null;\n        }\n        //存储文件名\n        ArrayList _allfilename = new ArrayList();\n\n        //获取当前的路径\n        File _currfile = new File(CURRFILE);\n\n        //目录resolve\n        _currfile = new File(_currfile, floder);\n\n        if (!_currfile.exists()) {\n            System.out.println(floder + \" not exists\");\n            return null;\n        }\n\n        File _dir[] = _currfile.listFiles();\n\n        for (int i = 0; i < _dir.length; i++) {\n            File fs = _dir[i];\n            if (fs.isDirectory()) {\n                System.out.println(fs.getName() + “ [目录]”);\n            } else {\n                _allfilename.add(_currfile + “/“ + fs.getName());\n            }\n        }\n\n        return _allfilename;\n    }\n\n}\n\n\n```\n\n\n\n\n\n\n","slug":"Aspose-barcode-条码和二维码处理","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","_id":"ciye45jfo000c7v0okz2buci2","title":"","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>条码信息和贴士</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">http://china.keyence.com/ss/products/auto_id/barcode_lecture/</div></pre></td></tr></table></figure>\n<blockquote>\n<p>应用背景:公司需要将发票中的二维码和条码一同识别并于相关的订单绑定至数据库</p>\n<p>初略的第一版</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">package com.xudaolong.bean;</div><div class=\"line\"></div><div class=\"line\">import com.aspose.barcode.*;</div><div class=\"line\">import com.aspose.barcoderecognition.BarCodeReadType;</div><div class=\"line\">import com.aspose.barcoderecognition.BarCodeReader;</div><div class=\"line\">import com.xudaolong.Utils.ImageCutterUtil;</div><div class=\"line\"></div><div class=\"line\">import javax.imageio.ImageIO;</div><div class=\"line\">import java.awt.image.BufferedImage;</div><div class=\"line\">import java.io.File;</div><div class=\"line\">import java.io.IOException;</div><div class=\"line\">import java.util.ArrayList;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\"> * 文 件 名: AsposeBarcode.java</div><div class=\"line\"> * 创 建 人: xudaolong</div><div class=\"line\"> * 创建日期: 16/7/12 14:24</div><div class=\"line\"> * 邮   箱: xudaolong@vip.qq.com</div><div class=\"line\"> * 博   客: http://xudaolong.github.io/</div><div class=\"line\"> * 修改时间：</div><div class=\"line\"> * 修改备注：</div><div class=\"line\"> */</div><div class=\"line\"></div><div class=\"line\">public class AsposeBarcode &#123;</div><div class=\"line\"></div><div class=\"line\">    private static final String TAG = &quot;AsposeBarcode&quot;;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 发票信息列表</div><div class=\"line\">     */</div><div class=\"line\">    private ArrayList&lt;BarcodeInfo&gt; list = new ArrayList();</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    public AsposeBarcode() &#123;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 存储扫描发票信息(二维码和二五码)</div><div class=\"line\">     */</div><div class=\"line\">    class BarcodeInfo &#123;</div><div class=\"line\">        private static final String TAG = &quot;BarcodeInfo&quot;;</div><div class=\"line\"></div><div class=\"line\">        public BarcodeInfo() &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        private String FileName;</div><div class=\"line\">        private String Interleaved2of5;</div><div class=\"line\">        private String QR;</div><div class=\"line\"></div><div class=\"line\">        public void clear() &#123;</div><div class=\"line\">            this.setFileName(&quot;&quot;);</div><div class=\"line\">            this.setInterleaved2of5(&quot;&quot;);</div><div class=\"line\">            this.setQR(&quot;&quot;);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        public String getFileName() &#123;</div><div class=\"line\">            return FileName;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        public void setFileName(String fileName) &#123;</div><div class=\"line\">            this.FileName = fileName;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        public String getQR() &#123;</div><div class=\"line\">            return QR;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        public void setQR(String QR) &#123;</div><div class=\"line\">            this.QR = QR;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        public String getInterleaved2of5() &#123;</div><div class=\"line\">            return Interleaved2of5;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        public void setInterleaved2of5(String interleaved2of5) &#123;</div><div class=\"line\">            Interleaved2of5 = interleaved2of5;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        public void checkInfo(BarcodeInfo _info) &#123;</div><div class=\"line\">            if (_info.getInterleaved2of5().equals(&quot;&quot;)) &#123;</div><div class=\"line\">                System.out.println(_info.getFileName() + &quot;:: 不能获取 Interleaved2of5 条形码&quot;);</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            if (_info.getQR().equals(&quot;&quot;)) &#123;</div><div class=\"line\">                System.out.println(_info.getQR() + &quot;:: 不能获取 QR 条形码 &quot;);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        @Override</div><div class=\"line\">        public String toString() &#123;</div><div class=\"line\">            return &quot;BarcodeInfo&#123;&quot; +</div><div class=\"line\">                    &quot;FileName=&apos;&quot; + this.getFileName() + &apos;\\&apos;&apos; +</div><div class=\"line\">                    &quot;, Interleaved2of5=&apos;&quot; + this.getInterleaved2of5() + &apos;\\&apos;&apos; +</div><div class=\"line\">                    &quot;, QR=&apos;&quot; + this.getQR() + &apos;\\&apos;&apos; +</div><div class=\"line\">                    &apos;&#125;&apos;;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 获取工具类</div><div class=\"line\">     *</div><div class=\"line\">     * @return</div><div class=\"line\">     */</div><div class=\"line\">    public BarCodeBuilder getInstance() &#123;</div><div class=\"line\">        return new BarCodeBuilder();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 获取一个普通的QR图片</div><div class=\"line\">     *</div><div class=\"line\">     * @return</div><div class=\"line\">     */</div><div class=\"line\">    public BarCodeBuilder getPublicQR(String context, String targetPath) &#123;</div><div class=\"line\"></div><div class=\"line\">        // 初始化</div><div class=\"line\">        BarCodeBuilder builder = this.getInstance();</div><div class=\"line\"></div><div class=\"line\">        builder.setCodeText(context);</div><div class=\"line\">        builder.setSymbologyType(Symbology.QR);</div><div class=\"line\"></div><div class=\"line\">        // 设置编程模式</div><div class=\"line\">        builder.setQREncodeMode(QREncodeMode.Auto);</div><div class=\"line\"></div><div class=\"line\">        // 设置容错率</div><div class=\"line\">        builder.setQRErrorLevel(QRErrorLevel.LevelH);</div><div class=\"line\"></div><div class=\"line\">        // 隐藏文字</div><div class=\"line\">        builder.setCodeLocation(CodeLocation.None);</div><div class=\"line\"></div><div class=\"line\">        // 翻转</div><div class=\"line\">        builder.setRotationAngleF(0);</div><div class=\"line\"></div><div class=\"line\">        builder.setImageHeight(88);</div><div class=\"line\">        builder.setImageWidth(88);</div><div class=\"line\"></div><div class=\"line\">        // 保存</div><div class=\"line\">        builder.save(targetPath);</div><div class=\"line\"></div><div class=\"line\">        cutQR(targetPath);</div><div class=\"line\"></div><div class=\"line\">        return builder;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    public void cutQR(String sourcePath) &#123;</div><div class=\"line\"></div><div class=\"line\">        try &#123;</div><div class=\"line\">            File file = new File(sourcePath);</div><div class=\"line\"></div><div class=\"line\">            BufferedImage image = ImageIO.read(file);</div><div class=\"line\"></div><div class=\"line\">            // 起始坐标，剪切大小</div><div class=\"line\">            int x = 14;</div><div class=\"line\">            int y = 25;</div><div class=\"line\">            int width = 62;</div><div class=\"line\">            int height = 62;</div><div class=\"line\">            // 参考图像大小</div><div class=\"line\">            int clientWidth = 88;</div><div class=\"line\">            int clientHeight = 88;</div><div class=\"line\"></div><div class=\"line\">            double destWidth = image.getWidth();</div><div class=\"line\">            double destHeight = image.getHeight();</div><div class=\"line\"></div><div class=\"line\">            if (destWidth &lt; width || destHeight &lt; height)</div><div class=\"line\">                throw new Exception(&quot;源图大小小于截取图片大小!&quot;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">            double widthRatio = destWidth / clientWidth;</div><div class=\"line\">            double heightRatio = destHeight / clientHeight;</div><div class=\"line\"></div><div class=\"line\">            //修改一下单位</div><div class=\"line\">            x = Double.valueOf(x * widthRatio).intValue();</div><div class=\"line\">            y = Double.valueOf(y * heightRatio).intValue();</div><div class=\"line\">            width = Double.valueOf(width * widthRatio).intValue();</div><div class=\"line\">            height = Double.valueOf(height * heightRatio).intValue();</div><div class=\"line\"></div><div class=\"line\">            System.out.println(&quot;裁剪大小  x:&quot; + x + &quot;,y:&quot; + y + &quot;,width:&quot; + width + &quot;,height:&quot; + height);</div><div class=\"line\"></div><div class=\"line\">            //获取指定的名字</div><div class=\"line\">//            String formatName = getImageFormatName(file);</div><div class=\"line\">//            String pathSuffix = &quot;.&quot; + formatName;</div><div class=\"line\">//            String pathPrefix = getFilePrefixPath(file);</div><div class=\"line\">//            String targetPath = pathPrefix + System.currentTimeMillis() + pathSuffix;</div><div class=\"line\"></div><div class=\"line\">            //最后一步进行裁剪到指定的名字</div><div class=\"line\"></div><div class=\"line\">            File destFile = new File(sourcePath);</div><div class=\"line\"></div><div class=\"line\">            ImageCutterUtil.cutImage(file, destFile, x, y, width, height);</div><div class=\"line\"></div><div class=\"line\">        &#125; catch (Exception e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 读取QR</div><div class=\"line\">     *</div><div class=\"line\">     * @return</div><div class=\"line\">     */</div><div class=\"line\">    public ArrayList&lt;BarcodeInfo&gt; ReaderImg(String dest) throws IOException &#123;</div><div class=\"line\"></div><div class=\"line\">        if (dest == null) &#123;</div><div class=\"line\">            return null;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        /**</div><div class=\"line\">         * 转成 BufferedImage 图像缓存区便于操作</div><div class=\"line\">         */</div><div class=\"line\">//        BufferedImage bufImg = ImageIO.read(new FileInputStream(dest));</div><div class=\"line\"></div><div class=\"line\">        //创建指定的读取器 25码 和 QR 码</div><div class=\"line\">        BarCodeReader reader = new BarCodeReader(dest, BarCodeReadType.QR | BarCodeReadType.Interleaved2of5);</div><div class=\"line\"></div><div class=\"line\">        /**</div><div class=\"line\">         * MaxPerformance\t1\tFinds all the possible good and average quality barcodes. Uses only the fastest algorithms. Enabled by default.</div><div class=\"line\">         * MaxQuality\t2\tFinds all the possible barcodes with good or bad quality. Doesn&apos;t return potential barcodes. Uses different fast and slow algorithms.</div><div class=\"line\">         * MaxBarCodes\t3\tExtends MaxQuality. Finds even potential barcodes. Uses extra algorithms which may recognize incorrect barcodes, barcodes on complex background, noisy or damaged barcodes and etc. You may observe extra spurious barcodes.</div><div class=\"line\">         * ManualHints\t4\tUser configures hints optionally. Allows you to adjust the balance between speed and quality manually.</div><div class=\"line\">         */</div><div class=\"line\">        reader.setRecognitionMode(1);</div><div class=\"line\"></div><div class=\"line\">        /**</div><div class=\"line\">         * 设定识别超时,有助于提高识别效率</div><div class=\"line\">         */</div><div class=\"line\">//        reader.setTimeout(3500);</div><div class=\"line\"></div><div class=\"line\">        //暂时存储</div><div class=\"line\">        BarcodeInfo _info = new BarcodeInfo();</div><div class=\"line\"></div><div class=\"line\">        //重置</div><div class=\"line\">        _info.clear();</div><div class=\"line\"></div><div class=\"line\">        try &#123;</div><div class=\"line\">            while (reader.read()) &#123;</div><div class=\"line\">                _info.setFileName(reader.getFileName());</div><div class=\"line\"></div><div class=\"line\">                if (reader.getReadTypeName().equals(&quot;Interleaved2of5&quot;)) &#123;</div><div class=\"line\">                    _info.setInterleaved2of5(reader.getCodeText());</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                if (reader.getReadTypeName().equals(&quot;QR&quot;)) &#123;</div><div class=\"line\">                    _info.setQR(reader.getCodeText());</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            list.add(_info);</div><div class=\"line\">            reader.close();</div><div class=\"line\">        &#125; catch (Exception e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125; finally &#123;</div><div class=\"line\">            _info.checkInfo(_info);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        return list;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>测试文件</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">package com.xudaolong.QR;</div><div class=\"line\"></div><div class=\"line\">import com.xudaolong.Utils.Path;</div><div class=\"line\">import com.xudaolong.bean.AsposeBarcode;</div><div class=\"line\"></div><div class=\"line\">import java.io.IOException;</div><div class=\"line\">import java.util.ArrayList;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\"> * Created by xudaolong on 16/7/12.</div><div class=\"line\"> */</div><div class=\"line\"></div><div class=\"line\">public class TestQR &#123;</div><div class=\"line\"></div><div class=\"line\">    public static void main(String[] args) throws IOException &#123;</div><div class=\"line\">        //指定相对的路径</div><div class=\"line\">        String path = “/resources/src/com/xudaolong/second”;</div><div class=\"line\"></div><div class=\"line\">        long startTime=System.nanoTime();   //获取开始时间</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        ArrayList&lt;String&gt; allFile =  new Path().getAllFile(path);</div><div class=\"line\"></div><div class=\"line\">        for (int i = 0; i &lt; allFile.size(); i++) &#123;</div><div class=\"line\">            String _filename = allFile.get(i);</div><div class=\"line\">            System.out.println(new AsposeBarcode().ReaderImg(_filename));</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        long endTime=System.nanoTime(); //获取结束时间</div><div class=\"line\">        System.out.println(“程序运行时间： “+(endTime-startTime)+”ns”);</div><div class=\"line\">        </div><div class=\"line\">        System.out.println(allFile);</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>辅助类 Path::用于处理路径的问题</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">package com.xudaolong.Utils;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">import java.io.File;</div><div class=\"line\">import java.util.ArrayList;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\"> * Created by xudaolong on 16/7/12.</div><div class=\"line\"> */</div><div class=\"line\">public class Path &#123;</div><div class=\"line\"></div><div class=\"line\">    private static final String TAG = &quot;Path&quot;;</div><div class=\"line\"></div><div class=\"line\">    public static final String CURRFILE = new String(System.getProperty(&quot;user.dir&quot;));</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 创建不存在的目录</div><div class=\"line\">     *</div><div class=\"line\">     * @param c</div><div class=\"line\">     * @param dir</div><div class=\"line\">     * @return</div><div class=\"line\">     */</div><div class=\"line\">    public File rebuildDir(Class c, File dir) &#123;</div><div class=\"line\"></div><div class=\"line\">        for (String s : c.getName().split(&quot;\\\\.&quot;)) &#123;</div><div class=\"line\">            dir = new File(dir, s);</div><div class=\"line\">            if (dir.isDirectory() == false)</div><div class=\"line\">                dir.mkdirs();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        return dir;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 返回指定的路径为 resources</div><div class=\"line\">     *</div><div class=\"line\">     * @param c</div><div class=\"line\">     * @return</div><div class=\"line\">     */</div><div class=\"line\">    public String getDataDir(Class c) &#123;</div><div class=\"line\">        //目录resolve</div><div class=\"line\">        File _currfile = new File(CURRFILE, &quot;resources&quot;);</div><div class=\"line\">        _currfile = this.rebuildDir(c, _currfile);</div><div class=\"line\"></div><div class=\"line\">        System.out.println(TAG + &quot;::Using data directory::&quot; + _currfile.toString());</div><div class=\"line\">        return _currfile.toString() + File.separator;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 返回指定相对路径,相对的是user.dir</div><div class=\"line\">     *</div><div class=\"line\">     * @param c</div><div class=\"line\">     * @param desc</div><div class=\"line\">     * @return</div><div class=\"line\">     */</div><div class=\"line\">    public String getDataDir(Class c, String desc) &#123;</div><div class=\"line\"></div><div class=\"line\">        File _currfile = new File(CURRFILE, &quot;resources&quot;);</div><div class=\"line\"></div><div class=\"line\">        //目录resolve</div><div class=\"line\">        _currfile = new File(_currfile, desc);</div><div class=\"line\">        _currfile = this.rebuildDir(c, _currfile);</div><div class=\"line\"></div><div class=\"line\">        System.out.println(TAG + &quot;::Using data directory::&quot; + _currfile.toString());</div><div class=\"line\"></div><div class=\"line\">        return _currfile.toString() + File.separator;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 返回绝对路径的文件名组</div><div class=\"line\">     *</div><div class=\"line\">     * @param floder</div><div class=\"line\">     * @return</div><div class=\"line\">     */</div><div class=\"line\">    public ArrayList&lt;String&gt; getAllFile(String floder) &#123;</div><div class=\"line\">        if (floder == null) &#123;</div><div class=\"line\">            return null;</div><div class=\"line\">        &#125;</div><div class=\"line\">        //存储文件名</div><div class=\"line\">        ArrayList _allfilename = new ArrayList();</div><div class=\"line\"></div><div class=\"line\">        //获取当前的路径</div><div class=\"line\">        File _currfile = new File(CURRFILE);</div><div class=\"line\"></div><div class=\"line\">        //目录resolve</div><div class=\"line\">        _currfile = new File(_currfile, floder);</div><div class=\"line\"></div><div class=\"line\">        if (!_currfile.exists()) &#123;</div><div class=\"line\">            System.out.println(floder + &quot; not exists&quot;);</div><div class=\"line\">            return null;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        File _dir[] = _currfile.listFiles();</div><div class=\"line\"></div><div class=\"line\">        for (int i = 0; i &lt; _dir.length; i++) &#123;</div><div class=\"line\">            File fs = _dir[i];</div><div class=\"line\">            if (fs.isDirectory()) &#123;</div><div class=\"line\">                System.out.println(fs.getName() + “ [目录]”);</div><div class=\"line\">            &#125; else &#123;</div><div class=\"line\">                _allfilename.add(_currfile + “/“ + fs.getName());</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        return _allfilename;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<blockquote>\n<p>条码信息和贴士</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">http://china.keyence.com/ss/products/auto_id/barcode_lecture/</div></pre></td></tr></table></figure>\n<blockquote>\n<p>应用背景:公司需要将发票中的二维码和条码一同识别并于相关的订单绑定至数据库</p>\n<p>初略的第一版</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">package com.xudaolong.bean;</div><div class=\"line\"></div><div class=\"line\">import com.aspose.barcode.*;</div><div class=\"line\">import com.aspose.barcoderecognition.BarCodeReadType;</div><div class=\"line\">import com.aspose.barcoderecognition.BarCodeReader;</div><div class=\"line\">import com.xudaolong.Utils.ImageCutterUtil;</div><div class=\"line\"></div><div class=\"line\">import javax.imageio.ImageIO;</div><div class=\"line\">import java.awt.image.BufferedImage;</div><div class=\"line\">import java.io.File;</div><div class=\"line\">import java.io.IOException;</div><div class=\"line\">import java.util.ArrayList;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\"> * 文 件 名: AsposeBarcode.java</div><div class=\"line\"> * 创 建 人: xudaolong</div><div class=\"line\"> * 创建日期: 16/7/12 14:24</div><div class=\"line\"> * 邮   箱: xudaolong@vip.qq.com</div><div class=\"line\"> * 博   客: http://xudaolong.github.io/</div><div class=\"line\"> * 修改时间：</div><div class=\"line\"> * 修改备注：</div><div class=\"line\"> */</div><div class=\"line\"></div><div class=\"line\">public class AsposeBarcode &#123;</div><div class=\"line\"></div><div class=\"line\">    private static final String TAG = &quot;AsposeBarcode&quot;;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 发票信息列表</div><div class=\"line\">     */</div><div class=\"line\">    private ArrayList&lt;BarcodeInfo&gt; list = new ArrayList();</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    public AsposeBarcode() &#123;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 存储扫描发票信息(二维码和二五码)</div><div class=\"line\">     */</div><div class=\"line\">    class BarcodeInfo &#123;</div><div class=\"line\">        private static final String TAG = &quot;BarcodeInfo&quot;;</div><div class=\"line\"></div><div class=\"line\">        public BarcodeInfo() &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        private String FileName;</div><div class=\"line\">        private String Interleaved2of5;</div><div class=\"line\">        private String QR;</div><div class=\"line\"></div><div class=\"line\">        public void clear() &#123;</div><div class=\"line\">            this.setFileName(&quot;&quot;);</div><div class=\"line\">            this.setInterleaved2of5(&quot;&quot;);</div><div class=\"line\">            this.setQR(&quot;&quot;);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        public String getFileName() &#123;</div><div class=\"line\">            return FileName;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        public void setFileName(String fileName) &#123;</div><div class=\"line\">            this.FileName = fileName;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        public String getQR() &#123;</div><div class=\"line\">            return QR;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        public void setQR(String QR) &#123;</div><div class=\"line\">            this.QR = QR;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        public String getInterleaved2of5() &#123;</div><div class=\"line\">            return Interleaved2of5;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        public void setInterleaved2of5(String interleaved2of5) &#123;</div><div class=\"line\">            Interleaved2of5 = interleaved2of5;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        public void checkInfo(BarcodeInfo _info) &#123;</div><div class=\"line\">            if (_info.getInterleaved2of5().equals(&quot;&quot;)) &#123;</div><div class=\"line\">                System.out.println(_info.getFileName() + &quot;:: 不能获取 Interleaved2of5 条形码&quot;);</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            if (_info.getQR().equals(&quot;&quot;)) &#123;</div><div class=\"line\">                System.out.println(_info.getQR() + &quot;:: 不能获取 QR 条形码 &quot;);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        @Override</div><div class=\"line\">        public String toString() &#123;</div><div class=\"line\">            return &quot;BarcodeInfo&#123;&quot; +</div><div class=\"line\">                    &quot;FileName=&apos;&quot; + this.getFileName() + &apos;\\&apos;&apos; +</div><div class=\"line\">                    &quot;, Interleaved2of5=&apos;&quot; + this.getInterleaved2of5() + &apos;\\&apos;&apos; +</div><div class=\"line\">                    &quot;, QR=&apos;&quot; + this.getQR() + &apos;\\&apos;&apos; +</div><div class=\"line\">                    &apos;&#125;&apos;;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 获取工具类</div><div class=\"line\">     *</div><div class=\"line\">     * @return</div><div class=\"line\">     */</div><div class=\"line\">    public BarCodeBuilder getInstance() &#123;</div><div class=\"line\">        return new BarCodeBuilder();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 获取一个普通的QR图片</div><div class=\"line\">     *</div><div class=\"line\">     * @return</div><div class=\"line\">     */</div><div class=\"line\">    public BarCodeBuilder getPublicQR(String context, String targetPath) &#123;</div><div class=\"line\"></div><div class=\"line\">        // 初始化</div><div class=\"line\">        BarCodeBuilder builder = this.getInstance();</div><div class=\"line\"></div><div class=\"line\">        builder.setCodeText(context);</div><div class=\"line\">        builder.setSymbologyType(Symbology.QR);</div><div class=\"line\"></div><div class=\"line\">        // 设置编程模式</div><div class=\"line\">        builder.setQREncodeMode(QREncodeMode.Auto);</div><div class=\"line\"></div><div class=\"line\">        // 设置容错率</div><div class=\"line\">        builder.setQRErrorLevel(QRErrorLevel.LevelH);</div><div class=\"line\"></div><div class=\"line\">        // 隐藏文字</div><div class=\"line\">        builder.setCodeLocation(CodeLocation.None);</div><div class=\"line\"></div><div class=\"line\">        // 翻转</div><div class=\"line\">        builder.setRotationAngleF(0);</div><div class=\"line\"></div><div class=\"line\">        builder.setImageHeight(88);</div><div class=\"line\">        builder.setImageWidth(88);</div><div class=\"line\"></div><div class=\"line\">        // 保存</div><div class=\"line\">        builder.save(targetPath);</div><div class=\"line\"></div><div class=\"line\">        cutQR(targetPath);</div><div class=\"line\"></div><div class=\"line\">        return builder;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    public void cutQR(String sourcePath) &#123;</div><div class=\"line\"></div><div class=\"line\">        try &#123;</div><div class=\"line\">            File file = new File(sourcePath);</div><div class=\"line\"></div><div class=\"line\">            BufferedImage image = ImageIO.read(file);</div><div class=\"line\"></div><div class=\"line\">            // 起始坐标，剪切大小</div><div class=\"line\">            int x = 14;</div><div class=\"line\">            int y = 25;</div><div class=\"line\">            int width = 62;</div><div class=\"line\">            int height = 62;</div><div class=\"line\">            // 参考图像大小</div><div class=\"line\">            int clientWidth = 88;</div><div class=\"line\">            int clientHeight = 88;</div><div class=\"line\"></div><div class=\"line\">            double destWidth = image.getWidth();</div><div class=\"line\">            double destHeight = image.getHeight();</div><div class=\"line\"></div><div class=\"line\">            if (destWidth &lt; width || destHeight &lt; height)</div><div class=\"line\">                throw new Exception(&quot;源图大小小于截取图片大小!&quot;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">            double widthRatio = destWidth / clientWidth;</div><div class=\"line\">            double heightRatio = destHeight / clientHeight;</div><div class=\"line\"></div><div class=\"line\">            //修改一下单位</div><div class=\"line\">            x = Double.valueOf(x * widthRatio).intValue();</div><div class=\"line\">            y = Double.valueOf(y * heightRatio).intValue();</div><div class=\"line\">            width = Double.valueOf(width * widthRatio).intValue();</div><div class=\"line\">            height = Double.valueOf(height * heightRatio).intValue();</div><div class=\"line\"></div><div class=\"line\">            System.out.println(&quot;裁剪大小  x:&quot; + x + &quot;,y:&quot; + y + &quot;,width:&quot; + width + &quot;,height:&quot; + height);</div><div class=\"line\"></div><div class=\"line\">            //获取指定的名字</div><div class=\"line\">//            String formatName = getImageFormatName(file);</div><div class=\"line\">//            String pathSuffix = &quot;.&quot; + formatName;</div><div class=\"line\">//            String pathPrefix = getFilePrefixPath(file);</div><div class=\"line\">//            String targetPath = pathPrefix + System.currentTimeMillis() + pathSuffix;</div><div class=\"line\"></div><div class=\"line\">            //最后一步进行裁剪到指定的名字</div><div class=\"line\"></div><div class=\"line\">            File destFile = new File(sourcePath);</div><div class=\"line\"></div><div class=\"line\">            ImageCutterUtil.cutImage(file, destFile, x, y, width, height);</div><div class=\"line\"></div><div class=\"line\">        &#125; catch (Exception e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 读取QR</div><div class=\"line\">     *</div><div class=\"line\">     * @return</div><div class=\"line\">     */</div><div class=\"line\">    public ArrayList&lt;BarcodeInfo&gt; ReaderImg(String dest) throws IOException &#123;</div><div class=\"line\"></div><div class=\"line\">        if (dest == null) &#123;</div><div class=\"line\">            return null;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        /**</div><div class=\"line\">         * 转成 BufferedImage 图像缓存区便于操作</div><div class=\"line\">         */</div><div class=\"line\">//        BufferedImage bufImg = ImageIO.read(new FileInputStream(dest));</div><div class=\"line\"></div><div class=\"line\">        //创建指定的读取器 25码 和 QR 码</div><div class=\"line\">        BarCodeReader reader = new BarCodeReader(dest, BarCodeReadType.QR | BarCodeReadType.Interleaved2of5);</div><div class=\"line\"></div><div class=\"line\">        /**</div><div class=\"line\">         * MaxPerformance\t1\tFinds all the possible good and average quality barcodes. Uses only the fastest algorithms. Enabled by default.</div><div class=\"line\">         * MaxQuality\t2\tFinds all the possible barcodes with good or bad quality. Doesn&apos;t return potential barcodes. Uses different fast and slow algorithms.</div><div class=\"line\">         * MaxBarCodes\t3\tExtends MaxQuality. Finds even potential barcodes. Uses extra algorithms which may recognize incorrect barcodes, barcodes on complex background, noisy or damaged barcodes and etc. You may observe extra spurious barcodes.</div><div class=\"line\">         * ManualHints\t4\tUser configures hints optionally. Allows you to adjust the balance between speed and quality manually.</div><div class=\"line\">         */</div><div class=\"line\">        reader.setRecognitionMode(1);</div><div class=\"line\"></div><div class=\"line\">        /**</div><div class=\"line\">         * 设定识别超时,有助于提高识别效率</div><div class=\"line\">         */</div><div class=\"line\">//        reader.setTimeout(3500);</div><div class=\"line\"></div><div class=\"line\">        //暂时存储</div><div class=\"line\">        BarcodeInfo _info = new BarcodeInfo();</div><div class=\"line\"></div><div class=\"line\">        //重置</div><div class=\"line\">        _info.clear();</div><div class=\"line\"></div><div class=\"line\">        try &#123;</div><div class=\"line\">            while (reader.read()) &#123;</div><div class=\"line\">                _info.setFileName(reader.getFileName());</div><div class=\"line\"></div><div class=\"line\">                if (reader.getReadTypeName().equals(&quot;Interleaved2of5&quot;)) &#123;</div><div class=\"line\">                    _info.setInterleaved2of5(reader.getCodeText());</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                if (reader.getReadTypeName().equals(&quot;QR&quot;)) &#123;</div><div class=\"line\">                    _info.setQR(reader.getCodeText());</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            list.add(_info);</div><div class=\"line\">            reader.close();</div><div class=\"line\">        &#125; catch (Exception e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125; finally &#123;</div><div class=\"line\">            _info.checkInfo(_info);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        return list;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>测试文件</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">package com.xudaolong.QR;</div><div class=\"line\"></div><div class=\"line\">import com.xudaolong.Utils.Path;</div><div class=\"line\">import com.xudaolong.bean.AsposeBarcode;</div><div class=\"line\"></div><div class=\"line\">import java.io.IOException;</div><div class=\"line\">import java.util.ArrayList;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\"> * Created by xudaolong on 16/7/12.</div><div class=\"line\"> */</div><div class=\"line\"></div><div class=\"line\">public class TestQR &#123;</div><div class=\"line\"></div><div class=\"line\">    public static void main(String[] args) throws IOException &#123;</div><div class=\"line\">        //指定相对的路径</div><div class=\"line\">        String path = “/resources/src/com/xudaolong/second”;</div><div class=\"line\"></div><div class=\"line\">        long startTime=System.nanoTime();   //获取开始时间</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        ArrayList&lt;String&gt; allFile =  new Path().getAllFile(path);</div><div class=\"line\"></div><div class=\"line\">        for (int i = 0; i &lt; allFile.size(); i++) &#123;</div><div class=\"line\">            String _filename = allFile.get(i);</div><div class=\"line\">            System.out.println(new AsposeBarcode().ReaderImg(_filename));</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        long endTime=System.nanoTime(); //获取结束时间</div><div class=\"line\">        System.out.println(“程序运行时间： “+(endTime-startTime)+”ns”);</div><div class=\"line\">        </div><div class=\"line\">        System.out.println(allFile);</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>辅助类 Path::用于处理路径的问题</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">package com.xudaolong.Utils;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">import java.io.File;</div><div class=\"line\">import java.util.ArrayList;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\"> * Created by xudaolong on 16/7/12.</div><div class=\"line\"> */</div><div class=\"line\">public class Path &#123;</div><div class=\"line\"></div><div class=\"line\">    private static final String TAG = &quot;Path&quot;;</div><div class=\"line\"></div><div class=\"line\">    public static final String CURRFILE = new String(System.getProperty(&quot;user.dir&quot;));</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 创建不存在的目录</div><div class=\"line\">     *</div><div class=\"line\">     * @param c</div><div class=\"line\">     * @param dir</div><div class=\"line\">     * @return</div><div class=\"line\">     */</div><div class=\"line\">    public File rebuildDir(Class c, File dir) &#123;</div><div class=\"line\"></div><div class=\"line\">        for (String s : c.getName().split(&quot;\\\\.&quot;)) &#123;</div><div class=\"line\">            dir = new File(dir, s);</div><div class=\"line\">            if (dir.isDirectory() == false)</div><div class=\"line\">                dir.mkdirs();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        return dir;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 返回指定的路径为 resources</div><div class=\"line\">     *</div><div class=\"line\">     * @param c</div><div class=\"line\">     * @return</div><div class=\"line\">     */</div><div class=\"line\">    public String getDataDir(Class c) &#123;</div><div class=\"line\">        //目录resolve</div><div class=\"line\">        File _currfile = new File(CURRFILE, &quot;resources&quot;);</div><div class=\"line\">        _currfile = this.rebuildDir(c, _currfile);</div><div class=\"line\"></div><div class=\"line\">        System.out.println(TAG + &quot;::Using data directory::&quot; + _currfile.toString());</div><div class=\"line\">        return _currfile.toString() + File.separator;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 返回指定相对路径,相对的是user.dir</div><div class=\"line\">     *</div><div class=\"line\">     * @param c</div><div class=\"line\">     * @param desc</div><div class=\"line\">     * @return</div><div class=\"line\">     */</div><div class=\"line\">    public String getDataDir(Class c, String desc) &#123;</div><div class=\"line\"></div><div class=\"line\">        File _currfile = new File(CURRFILE, &quot;resources&quot;);</div><div class=\"line\"></div><div class=\"line\">        //目录resolve</div><div class=\"line\">        _currfile = new File(_currfile, desc);</div><div class=\"line\">        _currfile = this.rebuildDir(c, _currfile);</div><div class=\"line\"></div><div class=\"line\">        System.out.println(TAG + &quot;::Using data directory::&quot; + _currfile.toString());</div><div class=\"line\"></div><div class=\"line\">        return _currfile.toString() + File.separator;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 返回绝对路径的文件名组</div><div class=\"line\">     *</div><div class=\"line\">     * @param floder</div><div class=\"line\">     * @return</div><div class=\"line\">     */</div><div class=\"line\">    public ArrayList&lt;String&gt; getAllFile(String floder) &#123;</div><div class=\"line\">        if (floder == null) &#123;</div><div class=\"line\">            return null;</div><div class=\"line\">        &#125;</div><div class=\"line\">        //存储文件名</div><div class=\"line\">        ArrayList _allfilename = new ArrayList();</div><div class=\"line\"></div><div class=\"line\">        //获取当前的路径</div><div class=\"line\">        File _currfile = new File(CURRFILE);</div><div class=\"line\"></div><div class=\"line\">        //目录resolve</div><div class=\"line\">        _currfile = new File(_currfile, floder);</div><div class=\"line\"></div><div class=\"line\">        if (!_currfile.exists()) &#123;</div><div class=\"line\">            System.out.println(floder + &quot; not exists&quot;);</div><div class=\"line\">            return null;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        File _dir[] = _currfile.listFiles();</div><div class=\"line\"></div><div class=\"line\">        for (int i = 0; i &lt; _dir.length; i++) &#123;</div><div class=\"line\">            File fs = _dir[i];</div><div class=\"line\">            if (fs.isDirectory()) &#123;</div><div class=\"line\">                System.out.println(fs.getName() + “ [目录]”);</div><div class=\"line\">            &#125; else &#123;</div><div class=\"line\">                _allfilename.add(_currfile + “/“ + fs.getName());</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        return _allfilename;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"_content":"功能\n\nINSERT INTO PC.SYS_FUNC (FUNCCODE, FUNCNAME, PARENTCODE, INITCLASS, FUNCFLAG, HIDDEN, FUNCSORT) VALUES ('jchpqsd', '借出货品签收单', 'pjdy', 'com.gzmpc.service.func.impl.LoanProductRecFucService', 1, null, 4);\nINSERT INTO PC.SYS_FUNC (FUNCCODE, FUNCNAME, PARENTCODE, INITCLASS, FUNCFLAG, HIDDEN, FUNCSORT) VALUES ('hhspqsd', '还回商品签收单', 'pjdy', 'com.gzmpc.service.func.impl.ReturnProductRecFuncService', 1, null, 5);\n\n按钮\n\nINSERT INTO PC.SYS_BUTTONCFG (BUTTONID, FUNCCODE, BUTTONNAME, ICONCLS, HANDLER, BUTTONSORT) VALUES (301, 'jchpqsd', '默认打印机打印', 'glyphicon glyphicon-print', 'appletprint', 3);\nINSERT INTO PC.SYS_BUTTONCFG (BUTTONID, FUNCCODE, BUTTONNAME, ICONCLS, HANDLER, BUTTONSORT) VALUES (302, 'jchpqsd', '分发打印', 'glyphicon glyphicon-print', 'print', 1);\nINSERT INTO PC.SYS_BUTTONCFG (BUTTONID, FUNCCODE, BUTTONNAME, ICONCLS, HANDLER, BUTTONSORT) VALUES (303, 'jchpqsd', '预览', 'glyphicon glyphicon-eye-open', 'preview', 2);\nINSERT INTO PC.SYS_BUTTONCFG (BUTTONID, FUNCCODE, BUTTONNAME, ICONCLS, HANDLER, BUTTONSORT) VALUES (311, 'hhspqsd', '默认打印机打印', 'glyphicon glyphicon-print', 'appletprint', 3);\nINSERT INTO PC.SYS_BUTTONCFG (BUTTONID, FUNCCODE, BUTTONNAME, ICONCLS, HANDLER, BUTTONSORT) VALUES (312, 'hhspqsd', '分发打印', 'glyphicon glyphicon-print', 'print', 1);\nINSERT INTO PC.SYS_BUTTONCFG (BUTTONID, FUNCCODE, BUTTONNAME, ICONCLS, HANDLER, BUTTONSORT) VALUES (313, 'hhspqsd', '预览', 'glyphicon glyphicon-eye-open', 'preview', 2);\n\n查询框配置\n\n借出查询的按钮配置:\n\nINSERT INTO PC.SYS_QUERYPARAMCFG (ITEMID, FUNCCODE, ITEMNAME, QUERYTYPE, QUERYOPER, TABLENAME, COLNAME, ITEMSORT, DBBEAN) VALUES (201, 'jchpqsd', '总单ID', 'number', 'equal', null, 'stldid', 1, null);\nINSERT INTO PC.SYS_QUERYPARAMCFG (ITEMID, FUNCCODE, ITEMNAME, QUERYTYPE, QUERYOPER, TABLENAME, COLNAME, ITEMSORT, DBBEAN) VALUES (202, 'jchpqsd', '借出原因', 'querylist', 'LDREASON', null, 'ldreason', 2, null);\nINSERT INTO PC.SYS_QUERYPARAMCFG (ITEMID, FUNCCODE, ITEMNAME, QUERYTYPE, QUERYOPER, TABLENAME, COLNAME, ITEMSORT, DBBEAN) VALUES (203, 'jchpqsd', '录入日期', 'date', 'between', null, 'credate', 3, null);\nINSERT INTO PC.SYS_QUERYPARAMCFG (ITEMID, FUNCCODE, ITEMNAME, QUERYTYPE, QUERYOPER, TABLENAME, COLNAME, ITEMSORT, DBBEAN) VALUES (204, 'jchpqsd', '借货单位ID', 'number', 'equal', null, 'companyid', 4, null);\nINSERT INTO PC.SYS_QUERYPARAMCFG (ITEMID, FUNCCODE, ITEMNAME, QUERYTYPE, QUERYOPER, TABLENAME, COLNAME, ITEMSORT, DBBEAN) VALUES (205, 'jchpqsd', '出货保管账ID', 'number', 'equal', null, 'outstorageid', 5, null);\nINSERT INTO PC.SYS_QUERYPARAMCFG (ITEMID, FUNCCODE, ITEMNAME, QUERYTYPE, QUERYOPER, TABLENAME, COLNAME, ITEMSORT, DBBEAN) VALUES (206, 'jchpqsd', '录入人', 'string', 'matching', null, 'inputmanname', 6, null);\n\n","source":"_posts/添加的数据.md","raw":"功能\n\nINSERT INTO PC.SYS_FUNC (FUNCCODE, FUNCNAME, PARENTCODE, INITCLASS, FUNCFLAG, HIDDEN, FUNCSORT) VALUES ('jchpqsd', '借出货品签收单', 'pjdy', 'com.gzmpc.service.func.impl.LoanProductRecFucService', 1, null, 4);\nINSERT INTO PC.SYS_FUNC (FUNCCODE, FUNCNAME, PARENTCODE, INITCLASS, FUNCFLAG, HIDDEN, FUNCSORT) VALUES ('hhspqsd', '还回商品签收单', 'pjdy', 'com.gzmpc.service.func.impl.ReturnProductRecFuncService', 1, null, 5);\n\n按钮\n\nINSERT INTO PC.SYS_BUTTONCFG (BUTTONID, FUNCCODE, BUTTONNAME, ICONCLS, HANDLER, BUTTONSORT) VALUES (301, 'jchpqsd', '默认打印机打印', 'glyphicon glyphicon-print', 'appletprint', 3);\nINSERT INTO PC.SYS_BUTTONCFG (BUTTONID, FUNCCODE, BUTTONNAME, ICONCLS, HANDLER, BUTTONSORT) VALUES (302, 'jchpqsd', '分发打印', 'glyphicon glyphicon-print', 'print', 1);\nINSERT INTO PC.SYS_BUTTONCFG (BUTTONID, FUNCCODE, BUTTONNAME, ICONCLS, HANDLER, BUTTONSORT) VALUES (303, 'jchpqsd', '预览', 'glyphicon glyphicon-eye-open', 'preview', 2);\nINSERT INTO PC.SYS_BUTTONCFG (BUTTONID, FUNCCODE, BUTTONNAME, ICONCLS, HANDLER, BUTTONSORT) VALUES (311, 'hhspqsd', '默认打印机打印', 'glyphicon glyphicon-print', 'appletprint', 3);\nINSERT INTO PC.SYS_BUTTONCFG (BUTTONID, FUNCCODE, BUTTONNAME, ICONCLS, HANDLER, BUTTONSORT) VALUES (312, 'hhspqsd', '分发打印', 'glyphicon glyphicon-print', 'print', 1);\nINSERT INTO PC.SYS_BUTTONCFG (BUTTONID, FUNCCODE, BUTTONNAME, ICONCLS, HANDLER, BUTTONSORT) VALUES (313, 'hhspqsd', '预览', 'glyphicon glyphicon-eye-open', 'preview', 2);\n\n查询框配置\n\n借出查询的按钮配置:\n\nINSERT INTO PC.SYS_QUERYPARAMCFG (ITEMID, FUNCCODE, ITEMNAME, QUERYTYPE, QUERYOPER, TABLENAME, COLNAME, ITEMSORT, DBBEAN) VALUES (201, 'jchpqsd', '总单ID', 'number', 'equal', null, 'stldid', 1, null);\nINSERT INTO PC.SYS_QUERYPARAMCFG (ITEMID, FUNCCODE, ITEMNAME, QUERYTYPE, QUERYOPER, TABLENAME, COLNAME, ITEMSORT, DBBEAN) VALUES (202, 'jchpqsd', '借出原因', 'querylist', 'LDREASON', null, 'ldreason', 2, null);\nINSERT INTO PC.SYS_QUERYPARAMCFG (ITEMID, FUNCCODE, ITEMNAME, QUERYTYPE, QUERYOPER, TABLENAME, COLNAME, ITEMSORT, DBBEAN) VALUES (203, 'jchpqsd', '录入日期', 'date', 'between', null, 'credate', 3, null);\nINSERT INTO PC.SYS_QUERYPARAMCFG (ITEMID, FUNCCODE, ITEMNAME, QUERYTYPE, QUERYOPER, TABLENAME, COLNAME, ITEMSORT, DBBEAN) VALUES (204, 'jchpqsd', '借货单位ID', 'number', 'equal', null, 'companyid', 4, null);\nINSERT INTO PC.SYS_QUERYPARAMCFG (ITEMID, FUNCCODE, ITEMNAME, QUERYTYPE, QUERYOPER, TABLENAME, COLNAME, ITEMSORT, DBBEAN) VALUES (205, 'jchpqsd', '出货保管账ID', 'number', 'equal', null, 'outstorageid', 5, null);\nINSERT INTO PC.SYS_QUERYPARAMCFG (ITEMID, FUNCCODE, ITEMNAME, QUERYTYPE, QUERYOPER, TABLENAME, COLNAME, ITEMSORT, DBBEAN) VALUES (206, 'jchpqsd', '录入人', 'string', 'matching', null, 'inputmanname', 6, null);\n\n","slug":"添加的数据","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","_id":"ciye45jfr000d7v0o28r45xql","title":"","comments":1,"layout":"post","photos":[],"link":"","content":"<p>功能</p>\n<p>INSERT INTO PC.SYS_FUNC (FUNCCODE, FUNCNAME, PARENTCODE, INITCLASS, FUNCFLAG, HIDDEN, FUNCSORT) VALUES (‘jchpqsd’, ‘借出货品签收单’, ‘pjdy’, ‘com.gzmpc.service.func.impl.LoanProductRecFucService’, 1, null, 4);<br>INSERT INTO PC.SYS_FUNC (FUNCCODE, FUNCNAME, PARENTCODE, INITCLASS, FUNCFLAG, HIDDEN, FUNCSORT) VALUES (‘hhspqsd’, ‘还回商品签收单’, ‘pjdy’, ‘com.gzmpc.service.func.impl.ReturnProductRecFuncService’, 1, null, 5);</p>\n<p>按钮</p>\n<p>INSERT INTO PC.SYS_BUTTONCFG (BUTTONID, FUNCCODE, BUTTONNAME, ICONCLS, HANDLER, BUTTONSORT) VALUES (301, ‘jchpqsd’, ‘默认打印机打印’, ‘glyphicon glyphicon-print’, ‘appletprint’, 3);<br>INSERT INTO PC.SYS_BUTTONCFG (BUTTONID, FUNCCODE, BUTTONNAME, ICONCLS, HANDLER, BUTTONSORT) VALUES (302, ‘jchpqsd’, ‘分发打印’, ‘glyphicon glyphicon-print’, ‘print’, 1);<br>INSERT INTO PC.SYS_BUTTONCFG (BUTTONID, FUNCCODE, BUTTONNAME, ICONCLS, HANDLER, BUTTONSORT) VALUES (303, ‘jchpqsd’, ‘预览’, ‘glyphicon glyphicon-eye-open’, ‘preview’, 2);<br>INSERT INTO PC.SYS_BUTTONCFG (BUTTONID, FUNCCODE, BUTTONNAME, ICONCLS, HANDLER, BUTTONSORT) VALUES (311, ‘hhspqsd’, ‘默认打印机打印’, ‘glyphicon glyphicon-print’, ‘appletprint’, 3);<br>INSERT INTO PC.SYS_BUTTONCFG (BUTTONID, FUNCCODE, BUTTONNAME, ICONCLS, HANDLER, BUTTONSORT) VALUES (312, ‘hhspqsd’, ‘分发打印’, ‘glyphicon glyphicon-print’, ‘print’, 1);<br>INSERT INTO PC.SYS_BUTTONCFG (BUTTONID, FUNCCODE, BUTTONNAME, ICONCLS, HANDLER, BUTTONSORT) VALUES (313, ‘hhspqsd’, ‘预览’, ‘glyphicon glyphicon-eye-open’, ‘preview’, 2);</p>\n<p>查询框配置</p>\n<p>借出查询的按钮配置:</p>\n<p>INSERT INTO PC.SYS_QUERYPARAMCFG (ITEMID, FUNCCODE, ITEMNAME, QUERYTYPE, QUERYOPER, TABLENAME, COLNAME, ITEMSORT, DBBEAN) VALUES (201, ‘jchpqsd’, ‘总单ID’, ‘number’, ‘equal’, null, ‘stldid’, 1, null);<br>INSERT INTO PC.SYS_QUERYPARAMCFG (ITEMID, FUNCCODE, ITEMNAME, QUERYTYPE, QUERYOPER, TABLENAME, COLNAME, ITEMSORT, DBBEAN) VALUES (202, ‘jchpqsd’, ‘借出原因’, ‘querylist’, ‘LDREASON’, null, ‘ldreason’, 2, null);<br>INSERT INTO PC.SYS_QUERYPARAMCFG (ITEMID, FUNCCODE, ITEMNAME, QUERYTYPE, QUERYOPER, TABLENAME, COLNAME, ITEMSORT, DBBEAN) VALUES (203, ‘jchpqsd’, ‘录入日期’, ‘date’, ‘between’, null, ‘credate’, 3, null);<br>INSERT INTO PC.SYS_QUERYPARAMCFG (ITEMID, FUNCCODE, ITEMNAME, QUERYTYPE, QUERYOPER, TABLENAME, COLNAME, ITEMSORT, DBBEAN) VALUES (204, ‘jchpqsd’, ‘借货单位ID’, ‘number’, ‘equal’, null, ‘companyid’, 4, null);<br>INSERT INTO PC.SYS_QUERYPARAMCFG (ITEMID, FUNCCODE, ITEMNAME, QUERYTYPE, QUERYOPER, TABLENAME, COLNAME, ITEMSORT, DBBEAN) VALUES (205, ‘jchpqsd’, ‘出货保管账ID’, ‘number’, ‘equal’, null, ‘outstorageid’, 5, null);<br>INSERT INTO PC.SYS_QUERYPARAMCFG (ITEMID, FUNCCODE, ITEMNAME, QUERYTYPE, QUERYOPER, TABLENAME, COLNAME, ITEMSORT, DBBEAN) VALUES (206, ‘jchpqsd’, ‘录入人’, ‘string’, ‘matching’, null, ‘inputmanname’, 6, null);</p>\n","excerpt":"","more":"<p>功能</p>\n<p>INSERT INTO PC.SYS_FUNC (FUNCCODE, FUNCNAME, PARENTCODE, INITCLASS, FUNCFLAG, HIDDEN, FUNCSORT) VALUES (‘jchpqsd’, ‘借出货品签收单’, ‘pjdy’, ‘com.gzmpc.service.func.impl.LoanProductRecFucService’, 1, null, 4);<br>INSERT INTO PC.SYS_FUNC (FUNCCODE, FUNCNAME, PARENTCODE, INITCLASS, FUNCFLAG, HIDDEN, FUNCSORT) VALUES (‘hhspqsd’, ‘还回商品签收单’, ‘pjdy’, ‘com.gzmpc.service.func.impl.ReturnProductRecFuncService’, 1, null, 5);</p>\n<p>按钮</p>\n<p>INSERT INTO PC.SYS_BUTTONCFG (BUTTONID, FUNCCODE, BUTTONNAME, ICONCLS, HANDLER, BUTTONSORT) VALUES (301, ‘jchpqsd’, ‘默认打印机打印’, ‘glyphicon glyphicon-print’, ‘appletprint’, 3);<br>INSERT INTO PC.SYS_BUTTONCFG (BUTTONID, FUNCCODE, BUTTONNAME, ICONCLS, HANDLER, BUTTONSORT) VALUES (302, ‘jchpqsd’, ‘分发打印’, ‘glyphicon glyphicon-print’, ‘print’, 1);<br>INSERT INTO PC.SYS_BUTTONCFG (BUTTONID, FUNCCODE, BUTTONNAME, ICONCLS, HANDLER, BUTTONSORT) VALUES (303, ‘jchpqsd’, ‘预览’, ‘glyphicon glyphicon-eye-open’, ‘preview’, 2);<br>INSERT INTO PC.SYS_BUTTONCFG (BUTTONID, FUNCCODE, BUTTONNAME, ICONCLS, HANDLER, BUTTONSORT) VALUES (311, ‘hhspqsd’, ‘默认打印机打印’, ‘glyphicon glyphicon-print’, ‘appletprint’, 3);<br>INSERT INTO PC.SYS_BUTTONCFG (BUTTONID, FUNCCODE, BUTTONNAME, ICONCLS, HANDLER, BUTTONSORT) VALUES (312, ‘hhspqsd’, ‘分发打印’, ‘glyphicon glyphicon-print’, ‘print’, 1);<br>INSERT INTO PC.SYS_BUTTONCFG (BUTTONID, FUNCCODE, BUTTONNAME, ICONCLS, HANDLER, BUTTONSORT) VALUES (313, ‘hhspqsd’, ‘预览’, ‘glyphicon glyphicon-eye-open’, ‘preview’, 2);</p>\n<p>查询框配置</p>\n<p>借出查询的按钮配置:</p>\n<p>INSERT INTO PC.SYS_QUERYPARAMCFG (ITEMID, FUNCCODE, ITEMNAME, QUERYTYPE, QUERYOPER, TABLENAME, COLNAME, ITEMSORT, DBBEAN) VALUES (201, ‘jchpqsd’, ‘总单ID’, ‘number’, ‘equal’, null, ‘stldid’, 1, null);<br>INSERT INTO PC.SYS_QUERYPARAMCFG (ITEMID, FUNCCODE, ITEMNAME, QUERYTYPE, QUERYOPER, TABLENAME, COLNAME, ITEMSORT, DBBEAN) VALUES (202, ‘jchpqsd’, ‘借出原因’, ‘querylist’, ‘LDREASON’, null, ‘ldreason’, 2, null);<br>INSERT INTO PC.SYS_QUERYPARAMCFG (ITEMID, FUNCCODE, ITEMNAME, QUERYTYPE, QUERYOPER, TABLENAME, COLNAME, ITEMSORT, DBBEAN) VALUES (203, ‘jchpqsd’, ‘录入日期’, ‘date’, ‘between’, null, ‘credate’, 3, null);<br>INSERT INTO PC.SYS_QUERYPARAMCFG (ITEMID, FUNCCODE, ITEMNAME, QUERYTYPE, QUERYOPER, TABLENAME, COLNAME, ITEMSORT, DBBEAN) VALUES (204, ‘jchpqsd’, ‘借货单位ID’, ‘number’, ‘equal’, null, ‘companyid’, 4, null);<br>INSERT INTO PC.SYS_QUERYPARAMCFG (ITEMID, FUNCCODE, ITEMNAME, QUERYTYPE, QUERYOPER, TABLENAME, COLNAME, ITEMSORT, DBBEAN) VALUES (205, ‘jchpqsd’, ‘出货保管账ID’, ‘number’, ‘equal’, null, ‘outstorageid’, 5, null);<br>INSERT INTO PC.SYS_QUERYPARAMCFG (ITEMID, FUNCCODE, ITEMNAME, QUERYTYPE, QUERYOPER, TABLENAME, COLNAME, ITEMSORT, DBBEAN) VALUES (206, ‘jchpqsd’, ‘录入人’, ‘string’, ‘matching’, null, ‘inputmanname’, 6, null);</p>\n"},{"_content":"JCDG 借出单管理\n\nXSJSD 还回商品签收单\n\n新增借货业务签收单打印功能的需求\n\n1\t编写目的\n此文档记录营运中心对新增打印中心借货业务签收单打印需求，供开发人员阅读及作为开发参考依据。\n2\t需求背景\n待修改的软件系统的名称：打印中心（http://print.gzmpc.com/pc/）\n涉及功能名称：<签收单>、<票据打印>\n本项目的任务提出者： 营运中心\n本项目涉及部门：物流中心、营运中心、各销售部门\n用途：配合质量管理要求，统一公司货品出库的签收形式。\n3\t系统流程\n \n\n4\t开发目标\n利用打印中心，打印与正常销售形式一致的借货业务签收单。\n5\t功能规定\n于<票据打印>功能中新增二级功能<借出货品签收单>及<还回商品签收单（明细签收联）>。\n（1）\t<借出货品签收单>\n设置“借出总单ID”，“录入日期”，“运输日期”，“借货单位”等相关字段。\n新增“借货出库”类型订单签收单打印，调用BMS<借出单管理（黄金围）>（500050025）中“借出总单ID”、“备注”、“属性”、“货位”，按以下模板（图一）生成签收单。除特殊说明外，其他字段按正常销售的签收单于WMS取数生成。\n\n\n\n“运输方式”为自提时，“收货地址”增加显示\n“（自提）”内容。“收货提示”关联显示“备注”\n关联显示BMS“借出总单ID”\n取消“金额”字段\n关联借出单记录生成对应内容，另需增加显示“属性”、“货位”、“调度单号”字段。\n \n图一\n允许通过字段查询，调用BMS<借出单管理(118)>(4821)相关借出单记录,按以下模板（图二）生成签收单。除特殊说明外，其他字段参考<票据打印>中<存厂直拨打印>相关设置生成。\n（1）“收货单位”关联显示“借货单位”，\n（2）“收货地址”关联显示“送货地点”，“运输\n方式”为自提时，增加显示“（自提）”字段。\n（3）“收货提示”关联显示“备注”。 \n（4）“签收单ID”及“承运方式”不显示内容\n\n空白处不显示内容\n关联显示“借出总单ID”\n\n（1）“收货单位”关联显示“借货单位”，\n（2）“收货地址”关联显示“送货地点”，“运输\n方式”为自提时，增加显示“（自提）”字段。\n（3）“收货提示”关联显示“备注”。 \n（4）“签收单ID”不显示内容\n\n关联借出单记录生成对应内容，另需增加显示“属性”、“货位”、“调度单号”字段。\n\n取消“金额”字段\n \n图二\n（2）\t功能<还回商品签收单（明细签收联）>\n设置“结算单ID”，“创建日期”等相关字段。允许通过字段查询，调用BMS<销售结算单明细查询>（811168）相关记录，按以下模板（图三）生成签收单（明细联）。除特殊说明外，其他字段参考<票据打印>中<存厂直拨打印>相关设置生成。\n \n图三\n6\t其他描述\n无\n7\t需求变更说明\n一、\t此需求由需求提交人签名确认\n二、\t信息中心按签名确认的需求说明进行相关开发及修改工作\n三、\t签名确认后的需求如果发生改变需填写范围变更申请表，相关的变更工作将按确认后的变更申请表内容进行。\n\n需求提出人签字：\t日期：\n\t\n广州医药有限公司  \n2016年5月31日\n","source":"_posts/打印中心需求文档.md","raw":"JCDG 借出单管理\n\nXSJSD 还回商品签收单\n\n新增借货业务签收单打印功能的需求\n\n1\t编写目的\n此文档记录营运中心对新增打印中心借货业务签收单打印需求，供开发人员阅读及作为开发参考依据。\n2\t需求背景\n待修改的软件系统的名称：打印中心（http://print.gzmpc.com/pc/）\n涉及功能名称：<签收单>、<票据打印>\n本项目的任务提出者： 营运中心\n本项目涉及部门：物流中心、营运中心、各销售部门\n用途：配合质量管理要求，统一公司货品出库的签收形式。\n3\t系统流程\n \n\n4\t开发目标\n利用打印中心，打印与正常销售形式一致的借货业务签收单。\n5\t功能规定\n于<票据打印>功能中新增二级功能<借出货品签收单>及<还回商品签收单（明细签收联）>。\n（1）\t<借出货品签收单>\n设置“借出总单ID”，“录入日期”，“运输日期”，“借货单位”等相关字段。\n新增“借货出库”类型订单签收单打印，调用BMS<借出单管理（黄金围）>（500050025）中“借出总单ID”、“备注”、“属性”、“货位”，按以下模板（图一）生成签收单。除特殊说明外，其他字段按正常销售的签收单于WMS取数生成。\n\n\n\n“运输方式”为自提时，“收货地址”增加显示\n“（自提）”内容。“收货提示”关联显示“备注”\n关联显示BMS“借出总单ID”\n取消“金额”字段\n关联借出单记录生成对应内容，另需增加显示“属性”、“货位”、“调度单号”字段。\n \n图一\n允许通过字段查询，调用BMS<借出单管理(118)>(4821)相关借出单记录,按以下模板（图二）生成签收单。除特殊说明外，其他字段参考<票据打印>中<存厂直拨打印>相关设置生成。\n（1）“收货单位”关联显示“借货单位”，\n（2）“收货地址”关联显示“送货地点”，“运输\n方式”为自提时，增加显示“（自提）”字段。\n（3）“收货提示”关联显示“备注”。 \n（4）“签收单ID”及“承运方式”不显示内容\n\n空白处不显示内容\n关联显示“借出总单ID”\n\n（1）“收货单位”关联显示“借货单位”，\n（2）“收货地址”关联显示“送货地点”，“运输\n方式”为自提时，增加显示“（自提）”字段。\n（3）“收货提示”关联显示“备注”。 \n（4）“签收单ID”不显示内容\n\n关联借出单记录生成对应内容，另需增加显示“属性”、“货位”、“调度单号”字段。\n\n取消“金额”字段\n \n图二\n（2）\t功能<还回商品签收单（明细签收联）>\n设置“结算单ID”，“创建日期”等相关字段。允许通过字段查询，调用BMS<销售结算单明细查询>（811168）相关记录，按以下模板（图三）生成签收单（明细联）。除特殊说明外，其他字段参考<票据打印>中<存厂直拨打印>相关设置生成。\n \n图三\n6\t其他描述\n无\n7\t需求变更说明\n一、\t此需求由需求提交人签名确认\n二、\t信息中心按签名确认的需求说明进行相关开发及修改工作\n三、\t签名确认后的需求如果发生改变需填写范围变更申请表，相关的变更工作将按确认后的变更申请表内容进行。\n\n需求提出人签字：\t日期：\n\t\n广州医药有限公司  \n2016年5月31日\n","slug":"打印中心需求文档","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","_id":"ciye45jfs000e7v0ogkci80z0","title":"","comments":1,"layout":"post","photos":[],"link":"","content":"<p>JCDG 借出单管理</p>\n<p>XSJSD 还回商品签收单</p>\n<p>新增借货业务签收单打印功能的需求</p>\n<p>1    编写目的<br>此文档记录营运中心对新增打印中心借货业务签收单打印需求，供开发人员阅读及作为开发参考依据。<br>2    需求背景<br>待修改的软件系统的名称：打印中心（<a href=\"http://print.gzmpc.com/pc/）\" target=\"_blank\" rel=\"external\">http://print.gzmpc.com/pc/）</a><br>涉及功能名称：&lt;签收单&gt;、&lt;票据打印&gt;<br>本项目的任务提出者： 营运中心<br>本项目涉及部门：物流中心、营运中心、各销售部门<br>用途：配合质量管理要求，统一公司货品出库的签收形式。<br>3    系统流程</p>\n<p>4    开发目标<br>利用打印中心，打印与正常销售形式一致的借货业务签收单。<br>5    功能规定<br>于&lt;票据打印&gt;功能中新增二级功能&lt;借出货品签收单&gt;及&lt;还回商品签收单（明细签收联）&gt;。<br>（1）    &lt;借出货品签收单&gt;<br>设置“借出总单ID”，“录入日期”，“运输日期”，“借货单位”等相关字段。<br>新增“借货出库”类型订单签收单打印，调用BMS&lt;借出单管理（黄金围）&gt;（500050025）中“借出总单ID”、“备注”、“属性”、“货位”，按以下模板（图一）生成签收单。除特殊说明外，其他字段按正常销售的签收单于WMS取数生成。</p>\n<p>“运输方式”为自提时，“收货地址”增加显示<br>“（自提）”内容。“收货提示”关联显示“备注”<br>关联显示BMS“借出总单ID”<br>取消“金额”字段<br>关联借出单记录生成对应内容，另需增加显示“属性”、“货位”、“调度单号”字段。</p>\n<p>图一<br>允许通过字段查询，调用BMS&lt;借出单管理(118)&gt;(4821)相关借出单记录,按以下模板（图二）生成签收单。除特殊说明外，其他字段参考&lt;票据打印&gt;中&lt;存厂直拨打印&gt;相关设置生成。<br>（1）“收货单位”关联显示“借货单位”，<br>（2）“收货地址”关联显示“送货地点”，“运输<br>方式”为自提时，增加显示“（自提）”字段。<br>（3）“收货提示”关联显示“备注”。<br>（4）“签收单ID”及“承运方式”不显示内容</p>\n<p>空白处不显示内容<br>关联显示“借出总单ID”</p>\n<p>（1）“收货单位”关联显示“借货单位”，<br>（2）“收货地址”关联显示“送货地点”，“运输<br>方式”为自提时，增加显示“（自提）”字段。<br>（3）“收货提示”关联显示“备注”。<br>（4）“签收单ID”不显示内容</p>\n<p>关联借出单记录生成对应内容，另需增加显示“属性”、“货位”、“调度单号”字段。</p>\n<p>取消“金额”字段</p>\n<p>图二<br>（2）    功能&lt;还回商品签收单（明细签收联）&gt;<br>设置“结算单ID”，“创建日期”等相关字段。允许通过字段查询，调用BMS&lt;销售结算单明细查询&gt;（811168）相关记录，按以下模板（图三）生成签收单（明细联）。除特殊说明外，其他字段参考&lt;票据打印&gt;中&lt;存厂直拨打印&gt;相关设置生成。</p>\n<p>图三<br>6    其他描述<br>无<br>7    需求变更说明<br>一、    此需求由需求提交人签名确认<br>二、    信息中心按签名确认的需求说明进行相关开发及修改工作<br>三、    签名确认后的需求如果发生改变需填写范围变更申请表，相关的变更工作将按确认后的变更申请表内容进行。</p>\n<p>需求提出人签字：    日期：</p>\n<p>广州医药有限公司<br>2016年5月31日</p>\n","excerpt":"","more":"<p>JCDG 借出单管理</p>\n<p>XSJSD 还回商品签收单</p>\n<p>新增借货业务签收单打印功能的需求</p>\n<p>1    编写目的<br>此文档记录营运中心对新增打印中心借货业务签收单打印需求，供开发人员阅读及作为开发参考依据。<br>2    需求背景<br>待修改的软件系统的名称：打印中心（<a href=\"http://print.gzmpc.com/pc/）\">http://print.gzmpc.com/pc/）</a><br>涉及功能名称：&lt;签收单&gt;、&lt;票据打印&gt;<br>本项目的任务提出者： 营运中心<br>本项目涉及部门：物流中心、营运中心、各销售部门<br>用途：配合质量管理要求，统一公司货品出库的签收形式。<br>3    系统流程</p>\n<p>4    开发目标<br>利用打印中心，打印与正常销售形式一致的借货业务签收单。<br>5    功能规定<br>于&lt;票据打印&gt;功能中新增二级功能&lt;借出货品签收单&gt;及&lt;还回商品签收单（明细签收联）&gt;。<br>（1）    &lt;借出货品签收单&gt;<br>设置“借出总单ID”，“录入日期”，“运输日期”，“借货单位”等相关字段。<br>新增“借货出库”类型订单签收单打印，调用BMS&lt;借出单管理（黄金围）&gt;（500050025）中“借出总单ID”、“备注”、“属性”、“货位”，按以下模板（图一）生成签收单。除特殊说明外，其他字段按正常销售的签收单于WMS取数生成。</p>\n<p>“运输方式”为自提时，“收货地址”增加显示<br>“（自提）”内容。“收货提示”关联显示“备注”<br>关联显示BMS“借出总单ID”<br>取消“金额”字段<br>关联借出单记录生成对应内容，另需增加显示“属性”、“货位”、“调度单号”字段。</p>\n<p>图一<br>允许通过字段查询，调用BMS&lt;借出单管理(118)&gt;(4821)相关借出单记录,按以下模板（图二）生成签收单。除特殊说明外，其他字段参考&lt;票据打印&gt;中&lt;存厂直拨打印&gt;相关设置生成。<br>（1）“收货单位”关联显示“借货单位”，<br>（2）“收货地址”关联显示“送货地点”，“运输<br>方式”为自提时，增加显示“（自提）”字段。<br>（3）“收货提示”关联显示“备注”。<br>（4）“签收单ID”及“承运方式”不显示内容</p>\n<p>空白处不显示内容<br>关联显示“借出总单ID”</p>\n<p>（1）“收货单位”关联显示“借货单位”，<br>（2）“收货地址”关联显示“送货地点”，“运输<br>方式”为自提时，增加显示“（自提）”字段。<br>（3）“收货提示”关联显示“备注”。<br>（4）“签收单ID”不显示内容</p>\n<p>关联借出单记录生成对应内容，另需增加显示“属性”、“货位”、“调度单号”字段。</p>\n<p>取消“金额”字段</p>\n<p>图二<br>（2）    功能&lt;还回商品签收单（明细签收联）&gt;<br>设置“结算单ID”，“创建日期”等相关字段。允许通过字段查询，调用BMS&lt;销售结算单明细查询&gt;（811168）相关记录，按以下模板（图三）生成签收单（明细联）。除特殊说明外，其他字段参考&lt;票据打印&gt;中&lt;存厂直拨打印&gt;相关设置生成。</p>\n<p>图三<br>6    其他描述<br>无<br>7    需求变更说明<br>一、    此需求由需求提交人签名确认<br>二、    信息中心按签名确认的需求说明进行相关开发及修改工作<br>三、    签名确认后的需求如果发生改变需填写范围变更申请表，相关的变更工作将按确认后的变更申请表内容进行。</p>\n<p>需求提出人签字：    日期：</p>\n<p>广州医药有限公司<br>2016年5月31日</p>\n"},{"_content":"SELECT  BMS_SA_SETTLE_DTLQRY_V.SASETTLEID,  DECODE(BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN8, NULL,         BMS_SA_SETTLE_DTLQRY_V.CREDATE, BMS_SA_SETTLE_DTLQRY_V.CONFIRMDATE)                                                                                            CREDATE,  BMS_SA_SETTLE_DTLQRY_V.SA_MODE,  BMS_SA_SETTLE_DTLQRY_V.CUSTOMID,  BMS_SA_SETTLE_DTLQRY_V.INVTYPE,  BMS_SA_SETTLE_DTLQRY_V.CUSTOMOPCODE,  BMS_SA_SETTLE_DTLQRY_V.CUSTOMNAME,  (SELECT sum(nvl(t.zxcolumn5 * t.goodsqty,                  t.total_line))   FROM bms_sa_settle_dtl t   WHERE t.sasettleid =         BMS_SA_SETTLE_DTLQRY_V.SASETTLEID)                                                 TOTAL,  BMS_SA_SETTLE_DTLQRY_V.INPUTMANID,  BMS_SA_SETTLE_DTLQRY_V.INPUTMANNAME,  BMS_SA_SETTLE_DTLQRY_V.DTL_LINES,  BMS_SA_SETTLE_DTLQRY_V.MEMO,  BMS_SA_SETTLE_DTLQRY_V.SETTLEGROUPNO,  BMS_SA_SETTLE_DTLQRY_V.SETTLETYPEID,  BMS_SA_SETTLE_DTLQRY_V.GATHERINGATONCE,  BMS_SA_SETTLE_DTLQRY_V.CERTID,  BMS_SA_SETTLE_DTLQRY_V.CERTNO,  BMS_SA_SETTLE_DTLQRY_V.CERTUSESTATUS,  BMS_SA_SETTLE_DTLQRY_V.USESTATUS,  BMS_SA_SETTLE_DTLQRY_V.INITFLAG,  BMS_SA_SETTLE_DTLQRY_V.SASETTLEDTLID,  BMS_SA_SETTLE_DTLQRY_V.INVLISTID,  BMS_SA_SETTLE_DTLQRY_V.INVLISTFIRSTNO,  BMS_SA_SETTLE_DTLQRY_V.INVLISTNO,  BMS_SA_SETTLE_DTLQRY_V.PRINTNO,  BMS_SA_SETTLE_DTLQRY_V.PRINTLINE,  BMS_SA_SETTLE_DTLQRY_V.GOODSID,  BMS_SA_SETTLE_DTLQRY_V.OPCODE,  BMS_SA_SETTLE_DTLQRY_V.GOODSNO,  BMS_SA_SETTLE_DTLQRY_V.GOODSNAME,  BMS_SA_SETTLE_DTLQRY_V.GOODSTYPE,  BMS_SA_SETTLE_DTLQRY_V.PRODAREA,  BMS_SA_SETTLE_DTLQRY_V.GOODSUNIT,  BMS_SA_SETTLE_DTLQRY_V.GOODSQTY,  ceil(abs(BMS_SA_SETTLE_DTLQRY_V.GOODSQTY) / (SELECT packsize                                               FROM                                                 BMS_SA_DOCTOSET A, BMS_SA_DTL B, PUB_GOODS_DETAIL C                                               WHERE a.sadtlid =                                                     b.salesdtlid AND b.goodsdtlid = c.goodsdtlid AND                                                     a.sasettledtlid =                                                     BMS_SA_SETTLE_DTLQRY_V.SASETTLEDTLID)) packsizenum,  BMS_SA_SETTLE_DTLQRY_V.GOODSQTY1,  BMS_SA_SETTLE_DTLQRY_V.GOODSUNIT1,  BMS_SA_SETTLE_DTLQRY_V.UNITPRICE,  BMS_SA_SETTLE_DTLQRY_V.TOTAL_LINE,  BMS_SA_SETTLE_DTLQRY_V.TAXRATE,  BMS_SA_SETTLE_DTLQRY_V.TAXMONEY,  BMS_SA_SETTLE_DTLQRY_V.NOTAXMONEY,  BMS_SA_SETTLE_DTLQRY_V.SALERID,  BMS_SA_SETTLE_DTLQRY_V.SALERNAME,  BMS_SA_SETTLE_DTLQRY_V.SALESDEPTID,  BMS_SA_SETTLE_DTLQRY_V.SALESDEPTNAME,  BMS_SA_SETTLE_DTLQRY_V.SKFLAG,  BMS_SA_SETTLE_DTLQRY_V.COSTINGMONEY,  BMS_SA_SETTLE_DTLQRY_V.COSTALTER,  BMS_SA_SETTLE_DTLQRY_V.PRESENTCOST,  BMS_SA_SETTLE_DTLQRY_V.DTLMEMO,  BMS_SA_SETTLE_DTLQRY_V.PROXYFLAG,  BMS_SA_SETTLE_DTLQRY_V.RECFINFLAG,  BMS_SA_SETTLE_DTLQRY_V.SHOULESETTLEMONEY,  BMS_SA_SETTLE_DTLQRY_V.INVID,  BMS_SA_SETTLE_DTLQRY_V.INVFIRSTNO,  BMS_SA_SETTLE_DTLQRY_V.INVNO,  BMS_SA_SETTLE_DTLQRY_V.INVTYPE_A,  BMS_SA_SETTLE_DTLQRY_V.INVDTLID,  BMS_SA_SETTLE_DTLQRY_V.TOTALRECQTY,  BMS_SA_SETTLE_DTLQRY_V.TOTALRECMONEY,  BMS_SA_SETTLE_DTLQRY_V.OTHERSETTLEFLAG,  BMS_SA_SETTLE_DTLQRY_V.SADISCOUNTMONEY,  BMS_SA_SETTLE_DTLQRY_V.CORRECTFLAG,  BMS_SA_SETTLE_DTLQRY_V.CORRECTCPLID,  BMS_SA_SETTLE_DTLQRY_V.SKCERTID,  BMS_SA_SETTLE_DTLQRY_V.SKCERTNO,  BMS_SA_SETTLE_DTLQRY_V.SKCERTUSESTATUS,  BMS_SA_SETTLE_DTLQRY_V.RECINGQTY,  BMS_SA_SETTLE_DTLQRY_V.RECINGMONEY,  BMS_SA_SETTLE_DTLQRY_V.ENTRYID,  BMS_SA_SETTLE_DTLQRY_V.ENTRYNAME,  BMS_SA_SETTLE_DTLQRY_V.CUSTOMNO,  BMS_SA_SETTLE_DTLQRY_V.SKCERTCREDATE,  BMS_SA_SETTLE_DTLQRY_V.CERTCREDATE,  BMS_SA_SETTLE_DTLQRY_V.ENGLISHSHORT,  BMS_SA_SETTLE_DTLQRY_V.FMID,  BMS_SA_SETTLE_DTLQRY_V.FMNAME,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN1,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN2,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN3,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN4,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN52                                                      DTLZXCOLUMN52,  to_number(BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN5)                                            DTLZXCOLUMN5,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN6,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN7,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN8,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN9,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN10,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN1,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN2,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN3,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN4,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN5,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN6,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN7,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN8,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN9,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN10,  BMS_SA_SETTLE_DTLQRY_V.CONFIRMDATE,  BMS_SA_SETTLE_DTLQRY_V.CONFIRMMANID,  BMS_SA_SETTLE_DTLQRY_V.CONFIRMMANNAME,  BMS_SA_SETTLE_DTLQRY_V.FPRQ,  BMS_SA_SETTLE_DTLQRY_V.YSKTS,  BMS_SA_SETTLE_DTLQRY_V.CQTS,  BMS_SA_SETTLE_DTLQRY_V.EARLIESTLACKDAYS,  BMS_SA_SETTLE_DTLQRY_V.NOID15,  BMS_SA_SETTLE_DTLQRY_V.NONAME15,  BMS_SA_SETTLE_DTLQRY_V.NO13,  bms_sa_settle_dtlqry_v.exchange,  pf_sasettranflag1(sasettledtlid)                                                          DELIVERMETHOD,  pf_sasetTARGETPOSADDR1(sasettledtlid)                                                     TARGETPOSADDR,  protocolid,  ratime,  BMS_SA_SETTLE_DTLQRY_V.LXDATE,  BMS_SA_SETTLE_DTLQRY_V.CNONAME17,  BMS_SA_SETTLE_DTLQRY_V.CNOID17,  PF_GET_PLATFORMID(BMS_SA_SETTLE_DTLQRY_V.GOODSID)                                         platformid,  BMS_SA_SETTLE_DTLQRY_V.realcustomname,  BMS_SA_SETTLE_DTLQRY_V.NBPZH,  BMS_SA_SETTLE_DTLQRY_V.NO07,  BMS_SA_SETTLE_DTLQRY_V.DZSETTLEID,  BMS_SA_SETTLE_DTLQRY_V.DZINVNOFROM BMS_SA_SETTLE_DTLQRY_VWHERE 1 = 1;\n\nsasettleid\t结算总单ID\tbms_sa_settle_dtlqry_v.sasettleid\tnull\tno\ncredate\t结算日期\tcredate\tnull\tno\nsa_mode\t销售模式\tbms_sa_settle_dtlqry_v.sa_mode\tnull\tno\ncustomid\t客户标识号\tbms_sa_settle_dtlqry_v.customid\tnull\tno\ninvtype\t合同类型\tbms_sa_settle_dtlqry_v.invtype\tnull\tno\ncustomopcode\t客户操作码\tbms_sa_settle_dtlqry_v.customopcode\tnull\tno\ncustomname\t客户名称\tbms_sa_settle_dtlqry_v.customname\tnull\tno\ntotal\t结算总单金额\ttotal\tnull\tno\ninputmanid\t录入员标识号\tbms_sa_settle_dtlqry_v.inputmanid\tnull\tno\ninputmanname\t录入人\tbms_sa_settle_dtlqry_v.inputmanname\tnull\tno\ndtl_lines\t细目笔数\tbms_sa_settle_dtlqry_v.dtl_lines\tnull\tno\nmemo\t备注\tbms_sa_settle_dtlqry_v.memo\tnull\tno\nsettlegroupno\t结算组号\tbms_sa_settle_dtlqry_v.settlegroupno\tnull\tno\nsettletypeid\t结算方式\tbms_sa_settle_dtlqry_v.settletypeid\tnull\tno\ngatheringatonce\t现收金额\tbms_sa_settle_dtlqry_v.gatheringatonce\tnull\tno\ncertid\t传票ID\tbms_sa_settle_dtlqry_v.certid\tnull\tno\ncertno\t传票号\tbms_sa_settle_dtlqry_v.certno\tnull\tno\ncertusestatus\t传票状态\tbms_sa_settle_dtlqry_v.certusestatus\tnull\tno\nusestatus\t使用状态\tbms_sa_settle_dtlqry_v.usestatus\tnull\tno\ninitflag\t初始标志\tbms_sa_settle_dtlqry_v.initflag\tnull\tno\nsasettledtlid\t结算细单ID\tbms_sa_settle_dtlqry_v.sasettledtlid\tnull\tno\ninvlistid\t发票清单ID\tbms_sa_settle_dtlqry_v.invlistid\tnull\tno\ninvlistfirstno\t清单轨号\tbms_sa_settle_dtlqry_v.invlistfirstno\tnull\tno\ninvlistno\t清单号\tbms_sa_settle_dtlqry_v.invlistno\tnull\tno\nprintno\t打印号\tbms_sa_settle_dtlqry_v.printno\tnull\tno\nprintline\t打印行号\tbms_sa_settle_dtlqry_v.printline\tnull\tno\ngoodsid\t货品标识号\tbms_sa_settle_dtlqry_v.goodsid\tnull\tno\nopcode\t货品操作码\tbms_sa_settle_dtlqry_v.opcode\tnull\tno\ngoodsno\t货品分类码\tbms_sa_settle_dtlqry_v.goodsno\tnull\tno\ngoodsname\t货品名称\tbms_sa_settle_dtlqry_v.goodsname\tnull\tno\ngoodstype\t货品规格\tbms_sa_settle_dtlqry_v.goodstype\tnull\tno\nprodarea\t产地\tbms_sa_settle_dtlqry_v.prodarea\tnull\tno\ngoodsunit\t基本单位\tbms_sa_settle_dtlqry_v.goodsunit\tnull\tno\ngoodsqty\t结算数量\tbms_sa_settle_dtlqry_v.goodsqty\tnull\tno\npacksizenum\t件数\tpacksizenum\tnull\tno\ngoodsqty1\t计价单位数量\tbms_sa_settle_dtlqry_v.goodsqty1\tnull\tno\ngoodsunit1\t计价单位\tbms_sa_settle_dtlqry_v.goodsunit1\tnull\tno\nunitprice\tunitprice_t\tbms_sa_settle_dtlqry_v.unitprice\tnull\tno\ntotal_line\ttotal_line_t\tbms_sa_settle_dtlqry_v.total_line\tnull\tno\ntaxrate\t税率\tbms_sa_settle_dtlqry_v.taxrate\tnull\tno\ntaxmoney\t税额\tbms_sa_settle_dtlqry_v.taxmoney\tnull\tno\nnotaxmoney\t价额\tbms_sa_settle_dtlqry_v.notaxmoney\tnull\tno\nsalerid\t业务员标识号\tbms_sa_settle_dtlqry_v.salerid\tnull\tno\nsalername\t业务员姓名\tbms_sa_settle_dtlqry_v.salername\tnull\tno\nsalesdeptid\t销售部门标识号\tbms_sa_settle_dtlqry_v.salesdeptid\tnull\tno\nsalesdeptname\t业务部门\tbms_sa_settle_dtlqry_v.salesdeptname\tnull\tno\nskflag\t记存货帐标志\tbms_sa_settle_dtlqry_v.skflag\tnull\tno\ncostingmoney\t销售成本\tbms_sa_settle_dtlqry_v.costingmoney\tnull\tno\ncostalter\t摊成本调整金额\tbms_sa_settle_dtlqry_v.costalter\tnull\tno\npresentcost\t摊赠样成本\tbms_sa_settle_dtlqry_v.presentcost\tnull\tno\ndtlmemo\t细目备注\tbms_sa_settle_dtlqry_v.dtlmemo\tnull\tno\nproxyflag\t托收标志\tbms_sa_settle_dtlqry_v.proxyflag\tnull\tno\nrecfinflag\t收款完成标志\tbms_sa_settle_dtlqry_v.recfinflag\tnull\tno\nshoulesettlemoney\t应结金额\tbms_sa_settle_dtlqry_v.shoulesettlemoney\tnull\tno\ninvid\t发票标识号\tbms_sa_settle_dtlqry_v.invid\tnull\tno\ninvfirstno\t发票轨号\tbms_sa_settle_dtlqry_v.invfirstno\tnull\tno\ninvno\t发票号\tbms_sa_settle_dtlqry_v.invno\tnull\tno\ninvtype_a\t发票类型\tbms_sa_settle_dtlqry_v.invtype_a\tnull\tno\ninvdtlid\t发票明细标识号\tbms_sa_settle_dtlqry_v.invdtlid\tnull\tno\ntotalrecqty\t累计收款数量\tbms_sa_settle_dtlqry_v.totalrecqty\tnull\tno\ntotalrecmoney\t累计收款金额\tbms_sa_settle_dtlqry_v.totalrecmoney\tnull\tno\nothersettleflag\t其它应收标志\tbms_sa_settle_dtlqry_v.othersettleflag\tnull\tno\nsadiscountmoney\t销售折扣金额\tbms_sa_settle_dtlqry_v.sadiscountmoney\tnull\tno\ncorrectflag\t冲调标志\tbms_sa_settle_dtlqry_v.correctflag\tnull\tno\ncorrectcplid\t冲调单据标识号\tbms_sa_settle_dtlqry_v.correctcplid\tnull\tno\nskcertid\t存货传票标识号\tbms_sa_settle_dtlqry_v.skcertid\tnull\tno\nskcertno\t存货传票号\tbms_sa_settle_dtlqry_v.skcertno\tnull\tno\nskcertusestatus\t存货传票状态\tbms_sa_settle_dtlqry_v.skcertusestatus\tnull\tno\nrecingqty\t期票未收款数量\tbms_sa_settle_dtlqry_v.recingqty\tnull\tno\nrecingmoney\t期票未收款金额\tbms_sa_settle_dtlqry_v.recingmoney\tnull\tno\nentryid\t独立核算单元号\tbms_sa_settle_dtlqry_v.entryid\tnull\tno\nentryname\t独立核算单元\tbms_sa_settle_dtlqry_v.entryname\tnull\tno\ncustomno\t客户编码\tbms_sa_settle_dtlqry_v.customno\tnull\tno\nskcertcredate\t存货传票日期\tbms_sa_settle_dtlqry_v.skcertcredate\tnull\tno\ncertcredate\t传票日期\tbms_sa_settle_dtlqry_v.certcredate\tnull\tno\nenglishshort\t币种缩写\tbms_sa_settle_dtlqry_v.englishshort\tnull\tno\nfmid\t币种ID\tbms_sa_settle_dtlqry_v.fmid\tnull\tno\nfmname\t币种名称\tbms_sa_settle_dtlqry_v.fmname\tnull\tno\ndtlzxcolumn1\tDtlzxcolumn1_t\tbms_sa_settle_dtlqry_v.dtlzxcolumn1\tnull\tno\ndtlzxcolumn2\tDtlzxcolumn2_t\tbms_sa_settle_dtlqry_v.dtlzxcolumn2\tnull\tno\ndtlzxcolumn3\t行号\tbms_sa_settle_dtlqry_v.dtlzxcolumn3\tnull\tno\ndtlzxcolumn4\tDtlzxcolumn4_t\tbms_sa_settle_dtlqry_v.dtlzxcolumn4\tnull\tno\ndtlzxcolumn52\t票面价\tbms_sa_settle_dtlqry_v.dtlzxcolumn52\tnull\tno\ndtlzxcolumn5\tDtlzxcolumn5_t\tdtlzxcolumn5\tnull\tno\ndtlzxcolumn6\tDtlzxcolumn6_t\tbms_sa_settle_dtlqry_v.dtlzxcolumn6\tnull\tno\ndtlzxcolumn7\tDtlzxcolumn7_t\tbms_sa_settle_dtlqry_v.dtlzxcolumn7\tnull\tno\ndtlzxcolumn8\tDtlzxcolumn8_t\tbms_sa_settle_dtlqry_v.dtlzxcolumn8\tnull\tno\ndtlzxcolumn9\tDtlzxcolumn9_9\tbms_sa_settle_dtlqry_v.dtlzxcolumn9\tnull\tno\ndtlzxcolumn10\tDtlzxcolumn10_t\tbms_sa_settle_dtlqry_v.dtlzxcolumn10\tnull\tno\ndoczxcolumn1\t行号\tbms_sa_settle_dtlqry_v.doczxcolumn1\tnull\tno\ndoczxcolumn2\t行号\tbms_sa_settle_dtlqry_v.doczxcolumn2\tnull\tno\ndoczxcolumn3\tDoczxcolumn3_t\tbms_sa_settle_dtlqry_v.doczxcolumn3\tnull\tno\ndoczxcolumn4\tDoczxcolumn4_t\tbms_sa_settle_dtlqry_v.doczxcolumn4\tnull\tno\ndoczxcolumn5\tDoczxcolumn5_t\tbms_sa_settle_dtlqry_v.doczxcolumn5\tnull\tno\ndoczxcolumn6\tDoczxcolumn6_t\tbms_sa_settle_dtlqry_v.doczxcolumn6\tnull\tno\ndoczxcolumn7\tDoczxcolumn7_t\tbms_sa_settle_dtlqry_v.doczxcolumn7\tnull\tno\ndoczxcolumn8\tDoczxcolumn8_t\tbms_sa_settle_dtlqry_v.doczxcolumn8\tnull\tno\ndoczxcolumn9\tDoczxcolumn9_t\tbms_sa_settle_dtlqry_v.doczxcolumn9\tnull\tno\ndoczxcolumn10\tDoczxcolumn10_t\tbms_sa_settle_dtlqry_v.doczxcolumn10\tnull\tno\nconfirmdate\t确定时间\tbms_sa_settle_dtlqry_v.confirmdate\tnull\tno\nconfirmmanid\t确定人ID\tbms_sa_settle_dtlqry_v.confirmmanid\tnull\tno\nconfirmmanname\t确定人姓名\tbms_sa_settle_dtlqry_v.confirmmanname\tnull\tno\nfprq\tfprq_t\tbms_sa_settle_dtlqry_v.fprq\tnull\tno\nyskts\t收款天数期限\tbms_sa_settle_dtlqry_v.yskts\tnull\tno\ncqts\t超期天数\tbms_sa_settle_dtlqry_v.cqts\tnull\tno\nearliestlackdays\t默认最早欠款天数\tbms_sa_settle_dtlqry_v.earliestlackdays\tnull\tno\nnoid15\t厂牌ID\tbms_sa_settle_dtlqry_v.noid15\tnull\tno\nnoname15\t厂牌\tbms_sa_settle_dtlqry_v.noname15\tnull\tno\nno13\t功效属性一级\tbms_sa_settle_dtlqry_v.no13\tnull\tno\nexchange\t汇率\tbms_sa_settle_dtlqry_v.exchange\tnull\tno\ndelivermethod\t送货方式\tdelivermethod\tnull\tno\ntargetposaddr\t送货地址\ttargetposaddr\tnull\tno\nprotocolid\t折扣协议ID\tbms_sa_settle_dtlqry_v.protocolid\tnull\tno\nratime\t传票记帐日期\tbms_sa_settle_dtlqry_v.ratime\tnull\tno\nlxdate\t流向日期\tbms_sa_settle_dtlqry_v.lxdate\tnull\tno\ncnoname17\t规划分类\tbms_sa_settle_dtlqry_v.cnoname17\tnull\tno\ncnoid17\tcnoid17_t\tbms_sa_settle_dtlqry_v.cnoid17\tnull\tno\nplatformid\t货品平台ID\tplatformid\tnull\tno\nrealcustomname\t实际客户名称\tbms_sa_settle_dtlqry_v.realcustomname\tnull\tno\nnbpzh\t内部凭证号\tbms_sa_settle_dtlqry_v.nbpzh\tnull\tno\nno07\t处方属性一级\tbms_sa_settle_dtlqry_v.no07\tnull\tno\ndzsettleid\t大众结算单ID\tbms_sa_settle_dtlqry_v.dzsettleid\tnull\tno\ndzinvno\t大众发票号\tbms_sa_settle_dtlqry_v.dzinvno\tnull\tno\n\n-- 下面关键表的注释\n\nCREATE TABLE BMS_SA_SETTLE_DOC\n(\n    SASETTLEID NUMBER(10) PRIMARY KEY NOT NULL,\n    CREDATE DATE,\n    SA_MODE NUMBER(1),\n    CUSTOMID NUMBER(10),\n    CUSTOMNAME VARCHAR2(60),\n    TOTAL NUMBER(12,2),\n    INPUTMANID NUMBER(10),\n    DTL_LINES NUMBER(5),\n    MEMO VARCHAR2(200),\n    SETTLEGROUPNO VARCHAR2(10),\n    SETTLETYPEID NUMBER(3),\n    GATHERINGATONCE NUMBER(12,2),\n    CERTID NUMBER(10),\n    USESTATUS NUMBER(1),\n    INVTYPE NUMBER(2),\n    INITFLAG NUMBER(1),\n    ENTRYID NUMBER(10),\n    TOTALREC NUMBER(12,2),\n    FMID NUMBER(10),\n    EXCHANGE NUMBER(20,12),\n    ZXCOLUMN1 VARCHAR2(50),\n    ZXCOLUMN2 VARCHAR2(50),\n    ZXCOLUMN3 VARCHAR2(50),\n    ZXCOLUMN4 VARCHAR2(50),\n    ZXCOLUMN5 VARCHAR2(50),\n    ZXCOLUMN6 VARCHAR2(50),\n    ZXCOLUMN7 VARCHAR2(50),\n    ZXCOLUMN8 VARCHAR2(50),\n    ZXCOLUMN9 VARCHAR2(50),\n    ZXCOLUMN10 VARCHAR2(50),\n    CONFIRMDATE DATE,\n    CONFIRMMANID NUMBER(10),\n    ZXCOLUMN11 VARCHAR2(50),\n    ZXCOLUMN12 VARCHAR2(50),\n    ZXCOLUMN13 VARCHAR2(50),\n    ZXCOLUMN14 VARCHAR2(50),\n    ZXCOLUMN15 VARCHAR2(50),\n    ZXCOLUMN16 VARCHAR2(50),\n    ZXCOLUMN17 VARCHAR2(50),\n    ZXCOLUMN18 VARCHAR2(50),\n    ZXCOLUMN19 VARCHAR2(50),\n    ZXCOLUMN20 VARCHAR2(50),\n    CONSTRAINT BMS_SASET_CUSTOMID_FK FOREIGN KEY (CUSTOMID) REFERENCES PUB_CUSTOMER (CUSTOMID),\n    CONSTRAINT BMS_SASET_DOC_ENTRYID FOREIGN KEY (ENTRYID) REFERENCES PUB_ENTRY (ENTRYID)\n);\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.SASETTLEID IS '销售结算单标识号';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.CREDATE IS '日期';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.SA_MODE IS '\"1-\t普通销售2-\t先配后结3-\t发出销售4-\t委托销售\"';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.CUSTOMID IS '客户标识号';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.CUSTOMNAME IS '客户名称';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.TOTAL IS '总金额';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.INPUTMANID IS '录入员标识号';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.DTL_LINES IS '细目笔数';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.MEMO IS '备注';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.SETTLEGROUPNO IS '结算组号';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.SETTLETYPEID IS '结算方式 详见PUB_SETTLETYPE_DDL字典表';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.GATHERINGATONCE IS '大众商场现收金额';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.CERTID IS '传票标识号';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.USESTATUS IS '\"使用状态0-\t作废1-\t临时2-\t确定\"';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.INVTYPE IS '1-增值税发票 2-普通发票';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.INITFLAG IS '初始标志';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.ENTRYID IS '核算单元ID';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.TOTALREC IS '累计收款金额';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.FMID IS '外币ID';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.EXCHANGE IS '汇率';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN1 IS '专项字段';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN2 IS '大众商场开票标志';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN3 IS '专项字段';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN4 IS '记录大众商场开票结算时医保刷卡金额';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN5 IS '记录大众商场开票结算时银联卡刷卡金额';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN6 IS '记录大众商场开票结算时现金金额';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN7 IS '记录大众商场开票结算时医保品种总金额';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN8 IS '专项字段';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN9 IS '清单打印标志';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN10 IS '已打印时间序列号(年月日时)';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.CONFIRMDATE IS '确定时间';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.CONFIRMMANID IS '确定人ID';\nCREATE INDEX BMS_SASETDOC_CREDATE_IDX ON BMS_SA_SETTLE_DOC (CREDATE);\nCREATE INDEX BMS_SASET_CUSTOMID_IDX ON BMS_SA_SETTLE_DOC (CUSTOMID);\nCREATE INDEX SA_SET_DOC_CERTID_IDX ON BMS_SA_SETTLE_DOC (CERTID);\n","source":"_posts/bms数据库-还回.md","raw":"SELECT  BMS_SA_SETTLE_DTLQRY_V.SASETTLEID,  DECODE(BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN8, NULL,         BMS_SA_SETTLE_DTLQRY_V.CREDATE, BMS_SA_SETTLE_DTLQRY_V.CONFIRMDATE)                                                                                            CREDATE,  BMS_SA_SETTLE_DTLQRY_V.SA_MODE,  BMS_SA_SETTLE_DTLQRY_V.CUSTOMID,  BMS_SA_SETTLE_DTLQRY_V.INVTYPE,  BMS_SA_SETTLE_DTLQRY_V.CUSTOMOPCODE,  BMS_SA_SETTLE_DTLQRY_V.CUSTOMNAME,  (SELECT sum(nvl(t.zxcolumn5 * t.goodsqty,                  t.total_line))   FROM bms_sa_settle_dtl t   WHERE t.sasettleid =         BMS_SA_SETTLE_DTLQRY_V.SASETTLEID)                                                 TOTAL,  BMS_SA_SETTLE_DTLQRY_V.INPUTMANID,  BMS_SA_SETTLE_DTLQRY_V.INPUTMANNAME,  BMS_SA_SETTLE_DTLQRY_V.DTL_LINES,  BMS_SA_SETTLE_DTLQRY_V.MEMO,  BMS_SA_SETTLE_DTLQRY_V.SETTLEGROUPNO,  BMS_SA_SETTLE_DTLQRY_V.SETTLETYPEID,  BMS_SA_SETTLE_DTLQRY_V.GATHERINGATONCE,  BMS_SA_SETTLE_DTLQRY_V.CERTID,  BMS_SA_SETTLE_DTLQRY_V.CERTNO,  BMS_SA_SETTLE_DTLQRY_V.CERTUSESTATUS,  BMS_SA_SETTLE_DTLQRY_V.USESTATUS,  BMS_SA_SETTLE_DTLQRY_V.INITFLAG,  BMS_SA_SETTLE_DTLQRY_V.SASETTLEDTLID,  BMS_SA_SETTLE_DTLQRY_V.INVLISTID,  BMS_SA_SETTLE_DTLQRY_V.INVLISTFIRSTNO,  BMS_SA_SETTLE_DTLQRY_V.INVLISTNO,  BMS_SA_SETTLE_DTLQRY_V.PRINTNO,  BMS_SA_SETTLE_DTLQRY_V.PRINTLINE,  BMS_SA_SETTLE_DTLQRY_V.GOODSID,  BMS_SA_SETTLE_DTLQRY_V.OPCODE,  BMS_SA_SETTLE_DTLQRY_V.GOODSNO,  BMS_SA_SETTLE_DTLQRY_V.GOODSNAME,  BMS_SA_SETTLE_DTLQRY_V.GOODSTYPE,  BMS_SA_SETTLE_DTLQRY_V.PRODAREA,  BMS_SA_SETTLE_DTLQRY_V.GOODSUNIT,  BMS_SA_SETTLE_DTLQRY_V.GOODSQTY,  ceil(abs(BMS_SA_SETTLE_DTLQRY_V.GOODSQTY) / (SELECT packsize                                               FROM                                                 BMS_SA_DOCTOSET A, BMS_SA_DTL B, PUB_GOODS_DETAIL C                                               WHERE a.sadtlid =                                                     b.salesdtlid AND b.goodsdtlid = c.goodsdtlid AND                                                     a.sasettledtlid =                                                     BMS_SA_SETTLE_DTLQRY_V.SASETTLEDTLID)) packsizenum,  BMS_SA_SETTLE_DTLQRY_V.GOODSQTY1,  BMS_SA_SETTLE_DTLQRY_V.GOODSUNIT1,  BMS_SA_SETTLE_DTLQRY_V.UNITPRICE,  BMS_SA_SETTLE_DTLQRY_V.TOTAL_LINE,  BMS_SA_SETTLE_DTLQRY_V.TAXRATE,  BMS_SA_SETTLE_DTLQRY_V.TAXMONEY,  BMS_SA_SETTLE_DTLQRY_V.NOTAXMONEY,  BMS_SA_SETTLE_DTLQRY_V.SALERID,  BMS_SA_SETTLE_DTLQRY_V.SALERNAME,  BMS_SA_SETTLE_DTLQRY_V.SALESDEPTID,  BMS_SA_SETTLE_DTLQRY_V.SALESDEPTNAME,  BMS_SA_SETTLE_DTLQRY_V.SKFLAG,  BMS_SA_SETTLE_DTLQRY_V.COSTINGMONEY,  BMS_SA_SETTLE_DTLQRY_V.COSTALTER,  BMS_SA_SETTLE_DTLQRY_V.PRESENTCOST,  BMS_SA_SETTLE_DTLQRY_V.DTLMEMO,  BMS_SA_SETTLE_DTLQRY_V.PROXYFLAG,  BMS_SA_SETTLE_DTLQRY_V.RECFINFLAG,  BMS_SA_SETTLE_DTLQRY_V.SHOULESETTLEMONEY,  BMS_SA_SETTLE_DTLQRY_V.INVID,  BMS_SA_SETTLE_DTLQRY_V.INVFIRSTNO,  BMS_SA_SETTLE_DTLQRY_V.INVNO,  BMS_SA_SETTLE_DTLQRY_V.INVTYPE_A,  BMS_SA_SETTLE_DTLQRY_V.INVDTLID,  BMS_SA_SETTLE_DTLQRY_V.TOTALRECQTY,  BMS_SA_SETTLE_DTLQRY_V.TOTALRECMONEY,  BMS_SA_SETTLE_DTLQRY_V.OTHERSETTLEFLAG,  BMS_SA_SETTLE_DTLQRY_V.SADISCOUNTMONEY,  BMS_SA_SETTLE_DTLQRY_V.CORRECTFLAG,  BMS_SA_SETTLE_DTLQRY_V.CORRECTCPLID,  BMS_SA_SETTLE_DTLQRY_V.SKCERTID,  BMS_SA_SETTLE_DTLQRY_V.SKCERTNO,  BMS_SA_SETTLE_DTLQRY_V.SKCERTUSESTATUS,  BMS_SA_SETTLE_DTLQRY_V.RECINGQTY,  BMS_SA_SETTLE_DTLQRY_V.RECINGMONEY,  BMS_SA_SETTLE_DTLQRY_V.ENTRYID,  BMS_SA_SETTLE_DTLQRY_V.ENTRYNAME,  BMS_SA_SETTLE_DTLQRY_V.CUSTOMNO,  BMS_SA_SETTLE_DTLQRY_V.SKCERTCREDATE,  BMS_SA_SETTLE_DTLQRY_V.CERTCREDATE,  BMS_SA_SETTLE_DTLQRY_V.ENGLISHSHORT,  BMS_SA_SETTLE_DTLQRY_V.FMID,  BMS_SA_SETTLE_DTLQRY_V.FMNAME,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN1,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN2,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN3,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN4,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN52                                                      DTLZXCOLUMN52,  to_number(BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN5)                                            DTLZXCOLUMN5,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN6,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN7,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN8,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN9,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN10,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN1,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN2,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN3,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN4,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN5,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN6,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN7,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN8,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN9,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN10,  BMS_SA_SETTLE_DTLQRY_V.CONFIRMDATE,  BMS_SA_SETTLE_DTLQRY_V.CONFIRMMANID,  BMS_SA_SETTLE_DTLQRY_V.CONFIRMMANNAME,  BMS_SA_SETTLE_DTLQRY_V.FPRQ,  BMS_SA_SETTLE_DTLQRY_V.YSKTS,  BMS_SA_SETTLE_DTLQRY_V.CQTS,  BMS_SA_SETTLE_DTLQRY_V.EARLIESTLACKDAYS,  BMS_SA_SETTLE_DTLQRY_V.NOID15,  BMS_SA_SETTLE_DTLQRY_V.NONAME15,  BMS_SA_SETTLE_DTLQRY_V.NO13,  bms_sa_settle_dtlqry_v.exchange,  pf_sasettranflag1(sasettledtlid)                                                          DELIVERMETHOD,  pf_sasetTARGETPOSADDR1(sasettledtlid)                                                     TARGETPOSADDR,  protocolid,  ratime,  BMS_SA_SETTLE_DTLQRY_V.LXDATE,  BMS_SA_SETTLE_DTLQRY_V.CNONAME17,  BMS_SA_SETTLE_DTLQRY_V.CNOID17,  PF_GET_PLATFORMID(BMS_SA_SETTLE_DTLQRY_V.GOODSID)                                         platformid,  BMS_SA_SETTLE_DTLQRY_V.realcustomname,  BMS_SA_SETTLE_DTLQRY_V.NBPZH,  BMS_SA_SETTLE_DTLQRY_V.NO07,  BMS_SA_SETTLE_DTLQRY_V.DZSETTLEID,  BMS_SA_SETTLE_DTLQRY_V.DZINVNOFROM BMS_SA_SETTLE_DTLQRY_VWHERE 1 = 1;\n\nsasettleid\t结算总单ID\tbms_sa_settle_dtlqry_v.sasettleid\tnull\tno\ncredate\t结算日期\tcredate\tnull\tno\nsa_mode\t销售模式\tbms_sa_settle_dtlqry_v.sa_mode\tnull\tno\ncustomid\t客户标识号\tbms_sa_settle_dtlqry_v.customid\tnull\tno\ninvtype\t合同类型\tbms_sa_settle_dtlqry_v.invtype\tnull\tno\ncustomopcode\t客户操作码\tbms_sa_settle_dtlqry_v.customopcode\tnull\tno\ncustomname\t客户名称\tbms_sa_settle_dtlqry_v.customname\tnull\tno\ntotal\t结算总单金额\ttotal\tnull\tno\ninputmanid\t录入员标识号\tbms_sa_settle_dtlqry_v.inputmanid\tnull\tno\ninputmanname\t录入人\tbms_sa_settle_dtlqry_v.inputmanname\tnull\tno\ndtl_lines\t细目笔数\tbms_sa_settle_dtlqry_v.dtl_lines\tnull\tno\nmemo\t备注\tbms_sa_settle_dtlqry_v.memo\tnull\tno\nsettlegroupno\t结算组号\tbms_sa_settle_dtlqry_v.settlegroupno\tnull\tno\nsettletypeid\t结算方式\tbms_sa_settle_dtlqry_v.settletypeid\tnull\tno\ngatheringatonce\t现收金额\tbms_sa_settle_dtlqry_v.gatheringatonce\tnull\tno\ncertid\t传票ID\tbms_sa_settle_dtlqry_v.certid\tnull\tno\ncertno\t传票号\tbms_sa_settle_dtlqry_v.certno\tnull\tno\ncertusestatus\t传票状态\tbms_sa_settle_dtlqry_v.certusestatus\tnull\tno\nusestatus\t使用状态\tbms_sa_settle_dtlqry_v.usestatus\tnull\tno\ninitflag\t初始标志\tbms_sa_settle_dtlqry_v.initflag\tnull\tno\nsasettledtlid\t结算细单ID\tbms_sa_settle_dtlqry_v.sasettledtlid\tnull\tno\ninvlistid\t发票清单ID\tbms_sa_settle_dtlqry_v.invlistid\tnull\tno\ninvlistfirstno\t清单轨号\tbms_sa_settle_dtlqry_v.invlistfirstno\tnull\tno\ninvlistno\t清单号\tbms_sa_settle_dtlqry_v.invlistno\tnull\tno\nprintno\t打印号\tbms_sa_settle_dtlqry_v.printno\tnull\tno\nprintline\t打印行号\tbms_sa_settle_dtlqry_v.printline\tnull\tno\ngoodsid\t货品标识号\tbms_sa_settle_dtlqry_v.goodsid\tnull\tno\nopcode\t货品操作码\tbms_sa_settle_dtlqry_v.opcode\tnull\tno\ngoodsno\t货品分类码\tbms_sa_settle_dtlqry_v.goodsno\tnull\tno\ngoodsname\t货品名称\tbms_sa_settle_dtlqry_v.goodsname\tnull\tno\ngoodstype\t货品规格\tbms_sa_settle_dtlqry_v.goodstype\tnull\tno\nprodarea\t产地\tbms_sa_settle_dtlqry_v.prodarea\tnull\tno\ngoodsunit\t基本单位\tbms_sa_settle_dtlqry_v.goodsunit\tnull\tno\ngoodsqty\t结算数量\tbms_sa_settle_dtlqry_v.goodsqty\tnull\tno\npacksizenum\t件数\tpacksizenum\tnull\tno\ngoodsqty1\t计价单位数量\tbms_sa_settle_dtlqry_v.goodsqty1\tnull\tno\ngoodsunit1\t计价单位\tbms_sa_settle_dtlqry_v.goodsunit1\tnull\tno\nunitprice\tunitprice_t\tbms_sa_settle_dtlqry_v.unitprice\tnull\tno\ntotal_line\ttotal_line_t\tbms_sa_settle_dtlqry_v.total_line\tnull\tno\ntaxrate\t税率\tbms_sa_settle_dtlqry_v.taxrate\tnull\tno\ntaxmoney\t税额\tbms_sa_settle_dtlqry_v.taxmoney\tnull\tno\nnotaxmoney\t价额\tbms_sa_settle_dtlqry_v.notaxmoney\tnull\tno\nsalerid\t业务员标识号\tbms_sa_settle_dtlqry_v.salerid\tnull\tno\nsalername\t业务员姓名\tbms_sa_settle_dtlqry_v.salername\tnull\tno\nsalesdeptid\t销售部门标识号\tbms_sa_settle_dtlqry_v.salesdeptid\tnull\tno\nsalesdeptname\t业务部门\tbms_sa_settle_dtlqry_v.salesdeptname\tnull\tno\nskflag\t记存货帐标志\tbms_sa_settle_dtlqry_v.skflag\tnull\tno\ncostingmoney\t销售成本\tbms_sa_settle_dtlqry_v.costingmoney\tnull\tno\ncostalter\t摊成本调整金额\tbms_sa_settle_dtlqry_v.costalter\tnull\tno\npresentcost\t摊赠样成本\tbms_sa_settle_dtlqry_v.presentcost\tnull\tno\ndtlmemo\t细目备注\tbms_sa_settle_dtlqry_v.dtlmemo\tnull\tno\nproxyflag\t托收标志\tbms_sa_settle_dtlqry_v.proxyflag\tnull\tno\nrecfinflag\t收款完成标志\tbms_sa_settle_dtlqry_v.recfinflag\tnull\tno\nshoulesettlemoney\t应结金额\tbms_sa_settle_dtlqry_v.shoulesettlemoney\tnull\tno\ninvid\t发票标识号\tbms_sa_settle_dtlqry_v.invid\tnull\tno\ninvfirstno\t发票轨号\tbms_sa_settle_dtlqry_v.invfirstno\tnull\tno\ninvno\t发票号\tbms_sa_settle_dtlqry_v.invno\tnull\tno\ninvtype_a\t发票类型\tbms_sa_settle_dtlqry_v.invtype_a\tnull\tno\ninvdtlid\t发票明细标识号\tbms_sa_settle_dtlqry_v.invdtlid\tnull\tno\ntotalrecqty\t累计收款数量\tbms_sa_settle_dtlqry_v.totalrecqty\tnull\tno\ntotalrecmoney\t累计收款金额\tbms_sa_settle_dtlqry_v.totalrecmoney\tnull\tno\nothersettleflag\t其它应收标志\tbms_sa_settle_dtlqry_v.othersettleflag\tnull\tno\nsadiscountmoney\t销售折扣金额\tbms_sa_settle_dtlqry_v.sadiscountmoney\tnull\tno\ncorrectflag\t冲调标志\tbms_sa_settle_dtlqry_v.correctflag\tnull\tno\ncorrectcplid\t冲调单据标识号\tbms_sa_settle_dtlqry_v.correctcplid\tnull\tno\nskcertid\t存货传票标识号\tbms_sa_settle_dtlqry_v.skcertid\tnull\tno\nskcertno\t存货传票号\tbms_sa_settle_dtlqry_v.skcertno\tnull\tno\nskcertusestatus\t存货传票状态\tbms_sa_settle_dtlqry_v.skcertusestatus\tnull\tno\nrecingqty\t期票未收款数量\tbms_sa_settle_dtlqry_v.recingqty\tnull\tno\nrecingmoney\t期票未收款金额\tbms_sa_settle_dtlqry_v.recingmoney\tnull\tno\nentryid\t独立核算单元号\tbms_sa_settle_dtlqry_v.entryid\tnull\tno\nentryname\t独立核算单元\tbms_sa_settle_dtlqry_v.entryname\tnull\tno\ncustomno\t客户编码\tbms_sa_settle_dtlqry_v.customno\tnull\tno\nskcertcredate\t存货传票日期\tbms_sa_settle_dtlqry_v.skcertcredate\tnull\tno\ncertcredate\t传票日期\tbms_sa_settle_dtlqry_v.certcredate\tnull\tno\nenglishshort\t币种缩写\tbms_sa_settle_dtlqry_v.englishshort\tnull\tno\nfmid\t币种ID\tbms_sa_settle_dtlqry_v.fmid\tnull\tno\nfmname\t币种名称\tbms_sa_settle_dtlqry_v.fmname\tnull\tno\ndtlzxcolumn1\tDtlzxcolumn1_t\tbms_sa_settle_dtlqry_v.dtlzxcolumn1\tnull\tno\ndtlzxcolumn2\tDtlzxcolumn2_t\tbms_sa_settle_dtlqry_v.dtlzxcolumn2\tnull\tno\ndtlzxcolumn3\t行号\tbms_sa_settle_dtlqry_v.dtlzxcolumn3\tnull\tno\ndtlzxcolumn4\tDtlzxcolumn4_t\tbms_sa_settle_dtlqry_v.dtlzxcolumn4\tnull\tno\ndtlzxcolumn52\t票面价\tbms_sa_settle_dtlqry_v.dtlzxcolumn52\tnull\tno\ndtlzxcolumn5\tDtlzxcolumn5_t\tdtlzxcolumn5\tnull\tno\ndtlzxcolumn6\tDtlzxcolumn6_t\tbms_sa_settle_dtlqry_v.dtlzxcolumn6\tnull\tno\ndtlzxcolumn7\tDtlzxcolumn7_t\tbms_sa_settle_dtlqry_v.dtlzxcolumn7\tnull\tno\ndtlzxcolumn8\tDtlzxcolumn8_t\tbms_sa_settle_dtlqry_v.dtlzxcolumn8\tnull\tno\ndtlzxcolumn9\tDtlzxcolumn9_9\tbms_sa_settle_dtlqry_v.dtlzxcolumn9\tnull\tno\ndtlzxcolumn10\tDtlzxcolumn10_t\tbms_sa_settle_dtlqry_v.dtlzxcolumn10\tnull\tno\ndoczxcolumn1\t行号\tbms_sa_settle_dtlqry_v.doczxcolumn1\tnull\tno\ndoczxcolumn2\t行号\tbms_sa_settle_dtlqry_v.doczxcolumn2\tnull\tno\ndoczxcolumn3\tDoczxcolumn3_t\tbms_sa_settle_dtlqry_v.doczxcolumn3\tnull\tno\ndoczxcolumn4\tDoczxcolumn4_t\tbms_sa_settle_dtlqry_v.doczxcolumn4\tnull\tno\ndoczxcolumn5\tDoczxcolumn5_t\tbms_sa_settle_dtlqry_v.doczxcolumn5\tnull\tno\ndoczxcolumn6\tDoczxcolumn6_t\tbms_sa_settle_dtlqry_v.doczxcolumn6\tnull\tno\ndoczxcolumn7\tDoczxcolumn7_t\tbms_sa_settle_dtlqry_v.doczxcolumn7\tnull\tno\ndoczxcolumn8\tDoczxcolumn8_t\tbms_sa_settle_dtlqry_v.doczxcolumn8\tnull\tno\ndoczxcolumn9\tDoczxcolumn9_t\tbms_sa_settle_dtlqry_v.doczxcolumn9\tnull\tno\ndoczxcolumn10\tDoczxcolumn10_t\tbms_sa_settle_dtlqry_v.doczxcolumn10\tnull\tno\nconfirmdate\t确定时间\tbms_sa_settle_dtlqry_v.confirmdate\tnull\tno\nconfirmmanid\t确定人ID\tbms_sa_settle_dtlqry_v.confirmmanid\tnull\tno\nconfirmmanname\t确定人姓名\tbms_sa_settle_dtlqry_v.confirmmanname\tnull\tno\nfprq\tfprq_t\tbms_sa_settle_dtlqry_v.fprq\tnull\tno\nyskts\t收款天数期限\tbms_sa_settle_dtlqry_v.yskts\tnull\tno\ncqts\t超期天数\tbms_sa_settle_dtlqry_v.cqts\tnull\tno\nearliestlackdays\t默认最早欠款天数\tbms_sa_settle_dtlqry_v.earliestlackdays\tnull\tno\nnoid15\t厂牌ID\tbms_sa_settle_dtlqry_v.noid15\tnull\tno\nnoname15\t厂牌\tbms_sa_settle_dtlqry_v.noname15\tnull\tno\nno13\t功效属性一级\tbms_sa_settle_dtlqry_v.no13\tnull\tno\nexchange\t汇率\tbms_sa_settle_dtlqry_v.exchange\tnull\tno\ndelivermethod\t送货方式\tdelivermethod\tnull\tno\ntargetposaddr\t送货地址\ttargetposaddr\tnull\tno\nprotocolid\t折扣协议ID\tbms_sa_settle_dtlqry_v.protocolid\tnull\tno\nratime\t传票记帐日期\tbms_sa_settle_dtlqry_v.ratime\tnull\tno\nlxdate\t流向日期\tbms_sa_settle_dtlqry_v.lxdate\tnull\tno\ncnoname17\t规划分类\tbms_sa_settle_dtlqry_v.cnoname17\tnull\tno\ncnoid17\tcnoid17_t\tbms_sa_settle_dtlqry_v.cnoid17\tnull\tno\nplatformid\t货品平台ID\tplatformid\tnull\tno\nrealcustomname\t实际客户名称\tbms_sa_settle_dtlqry_v.realcustomname\tnull\tno\nnbpzh\t内部凭证号\tbms_sa_settle_dtlqry_v.nbpzh\tnull\tno\nno07\t处方属性一级\tbms_sa_settle_dtlqry_v.no07\tnull\tno\ndzsettleid\t大众结算单ID\tbms_sa_settle_dtlqry_v.dzsettleid\tnull\tno\ndzinvno\t大众发票号\tbms_sa_settle_dtlqry_v.dzinvno\tnull\tno\n\n-- 下面关键表的注释\n\nCREATE TABLE BMS_SA_SETTLE_DOC\n(\n    SASETTLEID NUMBER(10) PRIMARY KEY NOT NULL,\n    CREDATE DATE,\n    SA_MODE NUMBER(1),\n    CUSTOMID NUMBER(10),\n    CUSTOMNAME VARCHAR2(60),\n    TOTAL NUMBER(12,2),\n    INPUTMANID NUMBER(10),\n    DTL_LINES NUMBER(5),\n    MEMO VARCHAR2(200),\n    SETTLEGROUPNO VARCHAR2(10),\n    SETTLETYPEID NUMBER(3),\n    GATHERINGATONCE NUMBER(12,2),\n    CERTID NUMBER(10),\n    USESTATUS NUMBER(1),\n    INVTYPE NUMBER(2),\n    INITFLAG NUMBER(1),\n    ENTRYID NUMBER(10),\n    TOTALREC NUMBER(12,2),\n    FMID NUMBER(10),\n    EXCHANGE NUMBER(20,12),\n    ZXCOLUMN1 VARCHAR2(50),\n    ZXCOLUMN2 VARCHAR2(50),\n    ZXCOLUMN3 VARCHAR2(50),\n    ZXCOLUMN4 VARCHAR2(50),\n    ZXCOLUMN5 VARCHAR2(50),\n    ZXCOLUMN6 VARCHAR2(50),\n    ZXCOLUMN7 VARCHAR2(50),\n    ZXCOLUMN8 VARCHAR2(50),\n    ZXCOLUMN9 VARCHAR2(50),\n    ZXCOLUMN10 VARCHAR2(50),\n    CONFIRMDATE DATE,\n    CONFIRMMANID NUMBER(10),\n    ZXCOLUMN11 VARCHAR2(50),\n    ZXCOLUMN12 VARCHAR2(50),\n    ZXCOLUMN13 VARCHAR2(50),\n    ZXCOLUMN14 VARCHAR2(50),\n    ZXCOLUMN15 VARCHAR2(50),\n    ZXCOLUMN16 VARCHAR2(50),\n    ZXCOLUMN17 VARCHAR2(50),\n    ZXCOLUMN18 VARCHAR2(50),\n    ZXCOLUMN19 VARCHAR2(50),\n    ZXCOLUMN20 VARCHAR2(50),\n    CONSTRAINT BMS_SASET_CUSTOMID_FK FOREIGN KEY (CUSTOMID) REFERENCES PUB_CUSTOMER (CUSTOMID),\n    CONSTRAINT BMS_SASET_DOC_ENTRYID FOREIGN KEY (ENTRYID) REFERENCES PUB_ENTRY (ENTRYID)\n);\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.SASETTLEID IS '销售结算单标识号';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.CREDATE IS '日期';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.SA_MODE IS '\"1-\t普通销售2-\t先配后结3-\t发出销售4-\t委托销售\"';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.CUSTOMID IS '客户标识号';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.CUSTOMNAME IS '客户名称';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.TOTAL IS '总金额';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.INPUTMANID IS '录入员标识号';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.DTL_LINES IS '细目笔数';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.MEMO IS '备注';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.SETTLEGROUPNO IS '结算组号';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.SETTLETYPEID IS '结算方式 详见PUB_SETTLETYPE_DDL字典表';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.GATHERINGATONCE IS '大众商场现收金额';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.CERTID IS '传票标识号';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.USESTATUS IS '\"使用状态0-\t作废1-\t临时2-\t确定\"';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.INVTYPE IS '1-增值税发票 2-普通发票';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.INITFLAG IS '初始标志';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.ENTRYID IS '核算单元ID';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.TOTALREC IS '累计收款金额';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.FMID IS '外币ID';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.EXCHANGE IS '汇率';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN1 IS '专项字段';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN2 IS '大众商场开票标志';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN3 IS '专项字段';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN4 IS '记录大众商场开票结算时医保刷卡金额';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN5 IS '记录大众商场开票结算时银联卡刷卡金额';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN6 IS '记录大众商场开票结算时现金金额';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN7 IS '记录大众商场开票结算时医保品种总金额';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN8 IS '专项字段';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN9 IS '清单打印标志';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN10 IS '已打印时间序列号(年月日时)';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.CONFIRMDATE IS '确定时间';\nCOMMENT ON COLUMN BMS_SA_SETTLE_DOC.CONFIRMMANID IS '确定人ID';\nCREATE INDEX BMS_SASETDOC_CREDATE_IDX ON BMS_SA_SETTLE_DOC (CREDATE);\nCREATE INDEX BMS_SASET_CUSTOMID_IDX ON BMS_SA_SETTLE_DOC (CUSTOMID);\nCREATE INDEX SA_SET_DOC_CERTID_IDX ON BMS_SA_SETTLE_DOC (CERTID);\n","slug":"bms数据库-还回","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","_id":"ciye45jfx000f7v0oxn25y9rm","title":"","comments":1,"layout":"post","photos":[],"link":"","content":"<p>SELECT  BMS_SA_SETTLE_DTLQRY_V.SASETTLEID,  DECODE(BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN8, NULL,         BMS_SA_SETTLE_DTLQRY_V.CREDATE, BMS_SA_SETTLE_DTLQRY_V.CONFIRMDATE)                                                                                            CREDATE,  BMS_SA_SETTLE_DTLQRY_V.SA_MODE,  BMS_SA_SETTLE_DTLQRY_V.CUSTOMID,  BMS_SA_SETTLE_DTLQRY_V.INVTYPE,  BMS_SA_SETTLE_DTLQRY_V.CUSTOMOPCODE,  BMS_SA_SETTLE_DTLQRY_V.CUSTOMNAME,  (SELECT sum(nvl(t.zxcolumn5 * t.goodsqty,                  t.total_line))   FROM bms_sa_settle_dtl t   WHERE t.sasettleid =         BMS_SA_SETTLE_DTLQRY_V.SASETTLEID)                                                 TOTAL,  BMS_SA_SETTLE_DTLQRY_V.INPUTMANID,  BMS_SA_SETTLE_DTLQRY_V.INPUTMANNAME,  BMS_SA_SETTLE_DTLQRY_V.DTL_LINES,  BMS_SA_SETTLE_DTLQRY_V.MEMO,  BMS_SA_SETTLE_DTLQRY_V.SETTLEGROUPNO,  BMS_SA_SETTLE_DTLQRY_V.SETTLETYPEID,  BMS_SA_SETTLE_DTLQRY_V.GATHERINGATONCE,  BMS_SA_SETTLE_DTLQRY_V.CERTID,  BMS_SA_SETTLE_DTLQRY_V.CERTNO,  BMS_SA_SETTLE_DTLQRY_V.CERTUSESTATUS,  BMS_SA_SETTLE_DTLQRY_V.USESTATUS,  BMS_SA_SETTLE_DTLQRY_V.INITFLAG,  BMS_SA_SETTLE_DTLQRY_V.SASETTLEDTLID,  BMS_SA_SETTLE_DTLQRY_V.INVLISTID,  BMS_SA_SETTLE_DTLQRY_V.INVLISTFIRSTNO,  BMS_SA_SETTLE_DTLQRY_V.INVLISTNO,  BMS_SA_SETTLE_DTLQRY_V.PRINTNO,  BMS_SA_SETTLE_DTLQRY_V.PRINTLINE,  BMS_SA_SETTLE_DTLQRY_V.GOODSID,  BMS_SA_SETTLE_DTLQRY_V.OPCODE,  BMS_SA_SETTLE_DTLQRY_V.GOODSNO,  BMS_SA_SETTLE_DTLQRY_V.GOODSNAME,  BMS_SA_SETTLE_DTLQRY_V.GOODSTYPE,  BMS_SA_SETTLE_DTLQRY_V.PRODAREA,  BMS_SA_SETTLE_DTLQRY_V.GOODSUNIT,  BMS_SA_SETTLE_DTLQRY_V.GOODSQTY,  ceil(abs(BMS_SA_SETTLE_DTLQRY_V.GOODSQTY) / (SELECT packsize                                               FROM                                                 BMS_SA_DOCTOSET A, BMS_SA_DTL B, PUB_GOODS_DETAIL C                                               WHERE a.sadtlid =                                                     b.salesdtlid AND b.goodsdtlid = c.goodsdtlid AND                                                     a.sasettledtlid =                                                     BMS_SA_SETTLE_DTLQRY_V.SASETTLEDTLID)) packsizenum,  BMS_SA_SETTLE_DTLQRY_V.GOODSQTY1,  BMS_SA_SETTLE_DTLQRY_V.GOODSUNIT1,  BMS_SA_SETTLE_DTLQRY_V.UNITPRICE,  BMS_SA_SETTLE_DTLQRY_V.TOTAL_LINE,  BMS_SA_SETTLE_DTLQRY_V.TAXRATE,  BMS_SA_SETTLE_DTLQRY_V.TAXMONEY,  BMS_SA_SETTLE_DTLQRY_V.NOTAXMONEY,  BMS_SA_SETTLE_DTLQRY_V.SALERID,  BMS_SA_SETTLE_DTLQRY_V.SALERNAME,  BMS_SA_SETTLE_DTLQRY_V.SALESDEPTID,  BMS_SA_SETTLE_DTLQRY_V.SALESDEPTNAME,  BMS_SA_SETTLE_DTLQRY_V.SKFLAG,  BMS_SA_SETTLE_DTLQRY_V.COSTINGMONEY,  BMS_SA_SETTLE_DTLQRY_V.COSTALTER,  BMS_SA_SETTLE_DTLQRY_V.PRESENTCOST,  BMS_SA_SETTLE_DTLQRY_V.DTLMEMO,  BMS_SA_SETTLE_DTLQRY_V.PROXYFLAG,  BMS_SA_SETTLE_DTLQRY_V.RECFINFLAG,  BMS_SA_SETTLE_DTLQRY_V.SHOULESETTLEMONEY,  BMS_SA_SETTLE_DTLQRY_V.INVID,  BMS_SA_SETTLE_DTLQRY_V.INVFIRSTNO,  BMS_SA_SETTLE_DTLQRY_V.INVNO,  BMS_SA_SETTLE_DTLQRY_V.INVTYPE_A,  BMS_SA_SETTLE_DTLQRY_V.INVDTLID,  BMS_SA_SETTLE_DTLQRY_V.TOTALRECQTY,  BMS_SA_SETTLE_DTLQRY_V.TOTALRECMONEY,  BMS_SA_SETTLE_DTLQRY_V.OTHERSETTLEFLAG,  BMS_SA_SETTLE_DTLQRY_V.SADISCOUNTMONEY,  BMS_SA_SETTLE_DTLQRY_V.CORRECTFLAG,  BMS_SA_SETTLE_DTLQRY_V.CORRECTCPLID,  BMS_SA_SETTLE_DTLQRY_V.SKCERTID,  BMS_SA_SETTLE_DTLQRY_V.SKCERTNO,  BMS_SA_SETTLE_DTLQRY_V.SKCERTUSESTATUS,  BMS_SA_SETTLE_DTLQRY_V.RECINGQTY,  BMS_SA_SETTLE_DTLQRY_V.RECINGMONEY,  BMS_SA_SETTLE_DTLQRY_V.ENTRYID,  BMS_SA_SETTLE_DTLQRY_V.ENTRYNAME,  BMS_SA_SETTLE_DTLQRY_V.CUSTOMNO,  BMS_SA_SETTLE_DTLQRY_V.SKCERTCREDATE,  BMS_SA_SETTLE_DTLQRY_V.CERTCREDATE,  BMS_SA_SETTLE_DTLQRY_V.ENGLISHSHORT,  BMS_SA_SETTLE_DTLQRY_V.FMID,  BMS_SA_SETTLE_DTLQRY_V.FMNAME,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN1,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN2,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN3,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN4,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN52                                                      DTLZXCOLUMN52,  to_number(BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN5)                                            DTLZXCOLUMN5,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN6,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN7,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN8,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN9,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN10,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN1,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN2,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN3,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN4,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN5,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN6,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN7,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN8,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN9,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN10,  BMS_SA_SETTLE_DTLQRY_V.CONFIRMDATE,  BMS_SA_SETTLE_DTLQRY_V.CONFIRMMANID,  BMS_SA_SETTLE_DTLQRY_V.CONFIRMMANNAME,  BMS_SA_SETTLE_DTLQRY_V.FPRQ,  BMS_SA_SETTLE_DTLQRY_V.YSKTS,  BMS_SA_SETTLE_DTLQRY_V.CQTS,  BMS_SA_SETTLE_DTLQRY_V.EARLIESTLACKDAYS,  BMS_SA_SETTLE_DTLQRY_V.NOID15,  BMS_SA_SETTLE_DTLQRY_V.NONAME15,  BMS_SA_SETTLE_DTLQRY_V.NO13,  bms_sa_settle_dtlqry_v.exchange,  pf_sasettranflag1(sasettledtlid)                                                          DELIVERMETHOD,  pf_sasetTARGETPOSADDR1(sasettledtlid)                                                     TARGETPOSADDR,  protocolid,  ratime,  BMS_SA_SETTLE_DTLQRY_V.LXDATE,  BMS_SA_SETTLE_DTLQRY_V.CNONAME17,  BMS_SA_SETTLE_DTLQRY_V.CNOID17,  PF_GET_PLATFORMID(BMS_SA_SETTLE_DTLQRY_V.GOODSID)                                         platformid,  BMS_SA_SETTLE_DTLQRY_V.realcustomname,  BMS_SA_SETTLE_DTLQRY_V.NBPZH,  BMS_SA_SETTLE_DTLQRY_V.NO07,  BMS_SA_SETTLE_DTLQRY_V.DZSETTLEID,  BMS_SA_SETTLE_DTLQRY_V.DZINVNOFROM BMS_SA_SETTLE_DTLQRY_VWHERE 1 = 1;</p>\n<p>sasettleid    结算总单ID    bms_sa_settle_dtlqry_v.sasettleid    null    no<br>credate    结算日期    credate    null    no<br>sa_mode    销售模式    bms_sa_settle_dtlqry_v.sa_mode    null    no<br>customid    客户标识号    bms_sa_settle_dtlqry_v.customid    null    no<br>invtype    合同类型    bms_sa_settle_dtlqry_v.invtype    null    no<br>customopcode    客户操作码    bms_sa_settle_dtlqry_v.customopcode    null    no<br>customname    客户名称    bms_sa_settle_dtlqry_v.customname    null    no<br>total    结算总单金额    total    null    no<br>inputmanid    录入员标识号    bms_sa_settle_dtlqry_v.inputmanid    null    no<br>inputmanname    录入人    bms_sa_settle_dtlqry_v.inputmanname    null    no<br>dtl_lines    细目笔数    bms_sa_settle_dtlqry_v.dtl_lines    null    no<br>memo    备注    bms_sa_settle_dtlqry_v.memo    null    no<br>settlegroupno    结算组号    bms_sa_settle_dtlqry_v.settlegroupno    null    no<br>settletypeid    结算方式    bms_sa_settle_dtlqry_v.settletypeid    null    no<br>gatheringatonce    现收金额    bms_sa_settle_dtlqry_v.gatheringatonce    null    no<br>certid    传票ID    bms_sa_settle_dtlqry_v.certid    null    no<br>certno    传票号    bms_sa_settle_dtlqry_v.certno    null    no<br>certusestatus    传票状态    bms_sa_settle_dtlqry_v.certusestatus    null    no<br>usestatus    使用状态    bms_sa_settle_dtlqry_v.usestatus    null    no<br>initflag    初始标志    bms_sa_settle_dtlqry_v.initflag    null    no<br>sasettledtlid    结算细单ID    bms_sa_settle_dtlqry_v.sasettledtlid    null    no<br>invlistid    发票清单ID    bms_sa_settle_dtlqry_v.invlistid    null    no<br>invlistfirstno    清单轨号    bms_sa_settle_dtlqry_v.invlistfirstno    null    no<br>invlistno    清单号    bms_sa_settle_dtlqry_v.invlistno    null    no<br>printno    打印号    bms_sa_settle_dtlqry_v.printno    null    no<br>printline    打印行号    bms_sa_settle_dtlqry_v.printline    null    no<br>goodsid    货品标识号    bms_sa_settle_dtlqry_v.goodsid    null    no<br>opcode    货品操作码    bms_sa_settle_dtlqry_v.opcode    null    no<br>goodsno    货品分类码    bms_sa_settle_dtlqry_v.goodsno    null    no<br>goodsname    货品名称    bms_sa_settle_dtlqry_v.goodsname    null    no<br>goodstype    货品规格    bms_sa_settle_dtlqry_v.goodstype    null    no<br>prodarea    产地    bms_sa_settle_dtlqry_v.prodarea    null    no<br>goodsunit    基本单位    bms_sa_settle_dtlqry_v.goodsunit    null    no<br>goodsqty    结算数量    bms_sa_settle_dtlqry_v.goodsqty    null    no<br>packsizenum    件数    packsizenum    null    no<br>goodsqty1    计价单位数量    bms_sa_settle_dtlqry_v.goodsqty1    null    no<br>goodsunit1    计价单位    bms_sa_settle_dtlqry_v.goodsunit1    null    no<br>unitprice    unitprice_t    bms_sa_settle_dtlqry_v.unitprice    null    no<br>total_line    total_line_t    bms_sa_settle_dtlqry_v.total_line    null    no<br>taxrate    税率    bms_sa_settle_dtlqry_v.taxrate    null    no<br>taxmoney    税额    bms_sa_settle_dtlqry_v.taxmoney    null    no<br>notaxmoney    价额    bms_sa_settle_dtlqry_v.notaxmoney    null    no<br>salerid    业务员标识号    bms_sa_settle_dtlqry_v.salerid    null    no<br>salername    业务员姓名    bms_sa_settle_dtlqry_v.salername    null    no<br>salesdeptid    销售部门标识号    bms_sa_settle_dtlqry_v.salesdeptid    null    no<br>salesdeptname    业务部门    bms_sa_settle_dtlqry_v.salesdeptname    null    no<br>skflag    记存货帐标志    bms_sa_settle_dtlqry_v.skflag    null    no<br>costingmoney    销售成本    bms_sa_settle_dtlqry_v.costingmoney    null    no<br>costalter    摊成本调整金额    bms_sa_settle_dtlqry_v.costalter    null    no<br>presentcost    摊赠样成本    bms_sa_settle_dtlqry_v.presentcost    null    no<br>dtlmemo    细目备注    bms_sa_settle_dtlqry_v.dtlmemo    null    no<br>proxyflag    托收标志    bms_sa_settle_dtlqry_v.proxyflag    null    no<br>recfinflag    收款完成标志    bms_sa_settle_dtlqry_v.recfinflag    null    no<br>shoulesettlemoney    应结金额    bms_sa_settle_dtlqry_v.shoulesettlemoney    null    no<br>invid    发票标识号    bms_sa_settle_dtlqry_v.invid    null    no<br>invfirstno    发票轨号    bms_sa_settle_dtlqry_v.invfirstno    null    no<br>invno    发票号    bms_sa_settle_dtlqry_v.invno    null    no<br>invtype_a    发票类型    bms_sa_settle_dtlqry_v.invtype_a    null    no<br>invdtlid    发票明细标识号    bms_sa_settle_dtlqry_v.invdtlid    null    no<br>totalrecqty    累计收款数量    bms_sa_settle_dtlqry_v.totalrecqty    null    no<br>totalrecmoney    累计收款金额    bms_sa_settle_dtlqry_v.totalrecmoney    null    no<br>othersettleflag    其它应收标志    bms_sa_settle_dtlqry_v.othersettleflag    null    no<br>sadiscountmoney    销售折扣金额    bms_sa_settle_dtlqry_v.sadiscountmoney    null    no<br>correctflag    冲调标志    bms_sa_settle_dtlqry_v.correctflag    null    no<br>correctcplid    冲调单据标识号    bms_sa_settle_dtlqry_v.correctcplid    null    no<br>skcertid    存货传票标识号    bms_sa_settle_dtlqry_v.skcertid    null    no<br>skcertno    存货传票号    bms_sa_settle_dtlqry_v.skcertno    null    no<br>skcertusestatus    存货传票状态    bms_sa_settle_dtlqry_v.skcertusestatus    null    no<br>recingqty    期票未收款数量    bms_sa_settle_dtlqry_v.recingqty    null    no<br>recingmoney    期票未收款金额    bms_sa_settle_dtlqry_v.recingmoney    null    no<br>entryid    独立核算单元号    bms_sa_settle_dtlqry_v.entryid    null    no<br>entryname    独立核算单元    bms_sa_settle_dtlqry_v.entryname    null    no<br>customno    客户编码    bms_sa_settle_dtlqry_v.customno    null    no<br>skcertcredate    存货传票日期    bms_sa_settle_dtlqry_v.skcertcredate    null    no<br>certcredate    传票日期    bms_sa_settle_dtlqry_v.certcredate    null    no<br>englishshort    币种缩写    bms_sa_settle_dtlqry_v.englishshort    null    no<br>fmid    币种ID    bms_sa_settle_dtlqry_v.fmid    null    no<br>fmname    币种名称    bms_sa_settle_dtlqry_v.fmname    null    no<br>dtlzxcolumn1    Dtlzxcolumn1_t    bms_sa_settle_dtlqry_v.dtlzxcolumn1    null    no<br>dtlzxcolumn2    Dtlzxcolumn2_t    bms_sa_settle_dtlqry_v.dtlzxcolumn2    null    no<br>dtlzxcolumn3    行号    bms_sa_settle_dtlqry_v.dtlzxcolumn3    null    no<br>dtlzxcolumn4    Dtlzxcolumn4_t    bms_sa_settle_dtlqry_v.dtlzxcolumn4    null    no<br>dtlzxcolumn52    票面价    bms_sa_settle_dtlqry_v.dtlzxcolumn52    null    no<br>dtlzxcolumn5    Dtlzxcolumn5_t    dtlzxcolumn5    null    no<br>dtlzxcolumn6    Dtlzxcolumn6_t    bms_sa_settle_dtlqry_v.dtlzxcolumn6    null    no<br>dtlzxcolumn7    Dtlzxcolumn7_t    bms_sa_settle_dtlqry_v.dtlzxcolumn7    null    no<br>dtlzxcolumn8    Dtlzxcolumn8_t    bms_sa_settle_dtlqry_v.dtlzxcolumn8    null    no<br>dtlzxcolumn9    Dtlzxcolumn9_9    bms_sa_settle_dtlqry_v.dtlzxcolumn9    null    no<br>dtlzxcolumn10    Dtlzxcolumn10_t    bms_sa_settle_dtlqry_v.dtlzxcolumn10    null    no<br>doczxcolumn1    行号    bms_sa_settle_dtlqry_v.doczxcolumn1    null    no<br>doczxcolumn2    行号    bms_sa_settle_dtlqry_v.doczxcolumn2    null    no<br>doczxcolumn3    Doczxcolumn3_t    bms_sa_settle_dtlqry_v.doczxcolumn3    null    no<br>doczxcolumn4    Doczxcolumn4_t    bms_sa_settle_dtlqry_v.doczxcolumn4    null    no<br>doczxcolumn5    Doczxcolumn5_t    bms_sa_settle_dtlqry_v.doczxcolumn5    null    no<br>doczxcolumn6    Doczxcolumn6_t    bms_sa_settle_dtlqry_v.doczxcolumn6    null    no<br>doczxcolumn7    Doczxcolumn7_t    bms_sa_settle_dtlqry_v.doczxcolumn7    null    no<br>doczxcolumn8    Doczxcolumn8_t    bms_sa_settle_dtlqry_v.doczxcolumn8    null    no<br>doczxcolumn9    Doczxcolumn9_t    bms_sa_settle_dtlqry_v.doczxcolumn9    null    no<br>doczxcolumn10    Doczxcolumn10_t    bms_sa_settle_dtlqry_v.doczxcolumn10    null    no<br>confirmdate    确定时间    bms_sa_settle_dtlqry_v.confirmdate    null    no<br>confirmmanid    确定人ID    bms_sa_settle_dtlqry_v.confirmmanid    null    no<br>confirmmanname    确定人姓名    bms_sa_settle_dtlqry_v.confirmmanname    null    no<br>fprq    fprq_t    bms_sa_settle_dtlqry_v.fprq    null    no<br>yskts    收款天数期限    bms_sa_settle_dtlqry_v.yskts    null    no<br>cqts    超期天数    bms_sa_settle_dtlqry_v.cqts    null    no<br>earliestlackdays    默认最早欠款天数    bms_sa_settle_dtlqry_v.earliestlackdays    null    no<br>noid15    厂牌ID    bms_sa_settle_dtlqry_v.noid15    null    no<br>noname15    厂牌    bms_sa_settle_dtlqry_v.noname15    null    no<br>no13    功效属性一级    bms_sa_settle_dtlqry_v.no13    null    no<br>exchange    汇率    bms_sa_settle_dtlqry_v.exchange    null    no<br>delivermethod    送货方式    delivermethod    null    no<br>targetposaddr    送货地址    targetposaddr    null    no<br>protocolid    折扣协议ID    bms_sa_settle_dtlqry_v.protocolid    null    no<br>ratime    传票记帐日期    bms_sa_settle_dtlqry_v.ratime    null    no<br>lxdate    流向日期    bms_sa_settle_dtlqry_v.lxdate    null    no<br>cnoname17    规划分类    bms_sa_settle_dtlqry_v.cnoname17    null    no<br>cnoid17    cnoid17_t    bms_sa_settle_dtlqry_v.cnoid17    null    no<br>platformid    货品平台ID    platformid    null    no<br>realcustomname    实际客户名称    bms_sa_settle_dtlqry_v.realcustomname    null    no<br>nbpzh    内部凭证号    bms_sa_settle_dtlqry_v.nbpzh    null    no<br>no07    处方属性一级    bms_sa_settle_dtlqry_v.no07    null    no<br>dzsettleid    大众结算单ID    bms_sa_settle_dtlqry_v.dzsettleid    null    no<br>dzinvno    大众发票号    bms_sa_settle_dtlqry_v.dzinvno    null    no</p>\n<p>– 下面关键表的注释</p>\n<p>CREATE TABLE BMS_SA_SETTLE_DOC<br>(<br>    SASETTLEID NUMBER(10) PRIMARY KEY NOT NULL,<br>    CREDATE DATE,<br>    SA_MODE NUMBER(1),<br>    CUSTOMID NUMBER(10),<br>    CUSTOMNAME VARCHAR2(60),<br>    TOTAL NUMBER(12,2),<br>    INPUTMANID NUMBER(10),<br>    DTL_LINES NUMBER(5),<br>    MEMO VARCHAR2(200),<br>    SETTLEGROUPNO VARCHAR2(10),<br>    SETTLETYPEID NUMBER(3),<br>    GATHERINGATONCE NUMBER(12,2),<br>    CERTID NUMBER(10),<br>    USESTATUS NUMBER(1),<br>    INVTYPE NUMBER(2),<br>    INITFLAG NUMBER(1),<br>    ENTRYID NUMBER(10),<br>    TOTALREC NUMBER(12,2),<br>    FMID NUMBER(10),<br>    EXCHANGE NUMBER(20,12),<br>    ZXCOLUMN1 VARCHAR2(50),<br>    ZXCOLUMN2 VARCHAR2(50),<br>    ZXCOLUMN3 VARCHAR2(50),<br>    ZXCOLUMN4 VARCHAR2(50),<br>    ZXCOLUMN5 VARCHAR2(50),<br>    ZXCOLUMN6 VARCHAR2(50),<br>    ZXCOLUMN7 VARCHAR2(50),<br>    ZXCOLUMN8 VARCHAR2(50),<br>    ZXCOLUMN9 VARCHAR2(50),<br>    ZXCOLUMN10 VARCHAR2(50),<br>    CONFIRMDATE DATE,<br>    CONFIRMMANID NUMBER(10),<br>    ZXCOLUMN11 VARCHAR2(50),<br>    ZXCOLUMN12 VARCHAR2(50),<br>    ZXCOLUMN13 VARCHAR2(50),<br>    ZXCOLUMN14 VARCHAR2(50),<br>    ZXCOLUMN15 VARCHAR2(50),<br>    ZXCOLUMN16 VARCHAR2(50),<br>    ZXCOLUMN17 VARCHAR2(50),<br>    ZXCOLUMN18 VARCHAR2(50),<br>    ZXCOLUMN19 VARCHAR2(50),<br>    ZXCOLUMN20 VARCHAR2(50),<br>    CONSTRAINT BMS_SASET_CUSTOMID_FK FOREIGN KEY (CUSTOMID) REFERENCES PUB_CUSTOMER (CUSTOMID),<br>    CONSTRAINT BMS_SASET_DOC_ENTRYID FOREIGN KEY (ENTRYID) REFERENCES PUB_ENTRY (ENTRYID)<br>);<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.SASETTLEID IS ‘销售结算单标识号’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.CREDATE IS ‘日期’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.SA_MODE IS ‘“1-    普通销售2-    先配后结3-    发出销售4-    委托销售”‘;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.CUSTOMID IS ‘客户标识号’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.CUSTOMNAME IS ‘客户名称’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.TOTAL IS ‘总金额’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.INPUTMANID IS ‘录入员标识号’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.DTL_LINES IS ‘细目笔数’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.MEMO IS ‘备注’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.SETTLEGROUPNO IS ‘结算组号’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.SETTLETYPEID IS ‘结算方式 详见PUB_SETTLETYPE_DDL字典表’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.GATHERINGATONCE IS ‘大众商场现收金额’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.CERTID IS ‘传票标识号’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.USESTATUS IS ‘“使用状态0-    作废1-    临时2-    确定”‘;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.INVTYPE IS ‘1-增值税发票 2-普通发票’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.INITFLAG IS ‘初始标志’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.ENTRYID IS ‘核算单元ID’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.TOTALREC IS ‘累计收款金额’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.FMID IS ‘外币ID’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.EXCHANGE IS ‘汇率’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN1 IS ‘专项字段’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN2 IS ‘大众商场开票标志’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN3 IS ‘专项字段’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN4 IS ‘记录大众商场开票结算时医保刷卡金额’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN5 IS ‘记录大众商场开票结算时银联卡刷卡金额’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN6 IS ‘记录大众商场开票结算时现金金额’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN7 IS ‘记录大众商场开票结算时医保品种总金额’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN8 IS ‘专项字段’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN9 IS ‘清单打印标志’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN10 IS ‘已打印时间序列号(年月日时)’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.CONFIRMDATE IS ‘确定时间’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.CONFIRMMANID IS ‘确定人ID’;<br>CREATE INDEX BMS_SASETDOC_CREDATE_IDX ON BMS_SA_SETTLE_DOC (CREDATE);<br>CREATE INDEX BMS_SASET_CUSTOMID_IDX ON BMS_SA_SETTLE_DOC (CUSTOMID);<br>CREATE INDEX SA_SET_DOC_CERTID_IDX ON BMS_SA_SETTLE_DOC (CERTID);</p>\n","excerpt":"","more":"<p>SELECT  BMS_SA_SETTLE_DTLQRY_V.SASETTLEID,  DECODE(BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN8, NULL,         BMS_SA_SETTLE_DTLQRY_V.CREDATE, BMS_SA_SETTLE_DTLQRY_V.CONFIRMDATE)                                                                                            CREDATE,  BMS_SA_SETTLE_DTLQRY_V.SA_MODE,  BMS_SA_SETTLE_DTLQRY_V.CUSTOMID,  BMS_SA_SETTLE_DTLQRY_V.INVTYPE,  BMS_SA_SETTLE_DTLQRY_V.CUSTOMOPCODE,  BMS_SA_SETTLE_DTLQRY_V.CUSTOMNAME,  (SELECT sum(nvl(t.zxcolumn5 * t.goodsqty,                  t.total_line))   FROM bms_sa_settle_dtl t   WHERE t.sasettleid =         BMS_SA_SETTLE_DTLQRY_V.SASETTLEID)                                                 TOTAL,  BMS_SA_SETTLE_DTLQRY_V.INPUTMANID,  BMS_SA_SETTLE_DTLQRY_V.INPUTMANNAME,  BMS_SA_SETTLE_DTLQRY_V.DTL_LINES,  BMS_SA_SETTLE_DTLQRY_V.MEMO,  BMS_SA_SETTLE_DTLQRY_V.SETTLEGROUPNO,  BMS_SA_SETTLE_DTLQRY_V.SETTLETYPEID,  BMS_SA_SETTLE_DTLQRY_V.GATHERINGATONCE,  BMS_SA_SETTLE_DTLQRY_V.CERTID,  BMS_SA_SETTLE_DTLQRY_V.CERTNO,  BMS_SA_SETTLE_DTLQRY_V.CERTUSESTATUS,  BMS_SA_SETTLE_DTLQRY_V.USESTATUS,  BMS_SA_SETTLE_DTLQRY_V.INITFLAG,  BMS_SA_SETTLE_DTLQRY_V.SASETTLEDTLID,  BMS_SA_SETTLE_DTLQRY_V.INVLISTID,  BMS_SA_SETTLE_DTLQRY_V.INVLISTFIRSTNO,  BMS_SA_SETTLE_DTLQRY_V.INVLISTNO,  BMS_SA_SETTLE_DTLQRY_V.PRINTNO,  BMS_SA_SETTLE_DTLQRY_V.PRINTLINE,  BMS_SA_SETTLE_DTLQRY_V.GOODSID,  BMS_SA_SETTLE_DTLQRY_V.OPCODE,  BMS_SA_SETTLE_DTLQRY_V.GOODSNO,  BMS_SA_SETTLE_DTLQRY_V.GOODSNAME,  BMS_SA_SETTLE_DTLQRY_V.GOODSTYPE,  BMS_SA_SETTLE_DTLQRY_V.PRODAREA,  BMS_SA_SETTLE_DTLQRY_V.GOODSUNIT,  BMS_SA_SETTLE_DTLQRY_V.GOODSQTY,  ceil(abs(BMS_SA_SETTLE_DTLQRY_V.GOODSQTY) / (SELECT packsize                                               FROM                                                 BMS_SA_DOCTOSET A, BMS_SA_DTL B, PUB_GOODS_DETAIL C                                               WHERE a.sadtlid =                                                     b.salesdtlid AND b.goodsdtlid = c.goodsdtlid AND                                                     a.sasettledtlid =                                                     BMS_SA_SETTLE_DTLQRY_V.SASETTLEDTLID)) packsizenum,  BMS_SA_SETTLE_DTLQRY_V.GOODSQTY1,  BMS_SA_SETTLE_DTLQRY_V.GOODSUNIT1,  BMS_SA_SETTLE_DTLQRY_V.UNITPRICE,  BMS_SA_SETTLE_DTLQRY_V.TOTAL_LINE,  BMS_SA_SETTLE_DTLQRY_V.TAXRATE,  BMS_SA_SETTLE_DTLQRY_V.TAXMONEY,  BMS_SA_SETTLE_DTLQRY_V.NOTAXMONEY,  BMS_SA_SETTLE_DTLQRY_V.SALERID,  BMS_SA_SETTLE_DTLQRY_V.SALERNAME,  BMS_SA_SETTLE_DTLQRY_V.SALESDEPTID,  BMS_SA_SETTLE_DTLQRY_V.SALESDEPTNAME,  BMS_SA_SETTLE_DTLQRY_V.SKFLAG,  BMS_SA_SETTLE_DTLQRY_V.COSTINGMONEY,  BMS_SA_SETTLE_DTLQRY_V.COSTALTER,  BMS_SA_SETTLE_DTLQRY_V.PRESENTCOST,  BMS_SA_SETTLE_DTLQRY_V.DTLMEMO,  BMS_SA_SETTLE_DTLQRY_V.PROXYFLAG,  BMS_SA_SETTLE_DTLQRY_V.RECFINFLAG,  BMS_SA_SETTLE_DTLQRY_V.SHOULESETTLEMONEY,  BMS_SA_SETTLE_DTLQRY_V.INVID,  BMS_SA_SETTLE_DTLQRY_V.INVFIRSTNO,  BMS_SA_SETTLE_DTLQRY_V.INVNO,  BMS_SA_SETTLE_DTLQRY_V.INVTYPE_A,  BMS_SA_SETTLE_DTLQRY_V.INVDTLID,  BMS_SA_SETTLE_DTLQRY_V.TOTALRECQTY,  BMS_SA_SETTLE_DTLQRY_V.TOTALRECMONEY,  BMS_SA_SETTLE_DTLQRY_V.OTHERSETTLEFLAG,  BMS_SA_SETTLE_DTLQRY_V.SADISCOUNTMONEY,  BMS_SA_SETTLE_DTLQRY_V.CORRECTFLAG,  BMS_SA_SETTLE_DTLQRY_V.CORRECTCPLID,  BMS_SA_SETTLE_DTLQRY_V.SKCERTID,  BMS_SA_SETTLE_DTLQRY_V.SKCERTNO,  BMS_SA_SETTLE_DTLQRY_V.SKCERTUSESTATUS,  BMS_SA_SETTLE_DTLQRY_V.RECINGQTY,  BMS_SA_SETTLE_DTLQRY_V.RECINGMONEY,  BMS_SA_SETTLE_DTLQRY_V.ENTRYID,  BMS_SA_SETTLE_DTLQRY_V.ENTRYNAME,  BMS_SA_SETTLE_DTLQRY_V.CUSTOMNO,  BMS_SA_SETTLE_DTLQRY_V.SKCERTCREDATE,  BMS_SA_SETTLE_DTLQRY_V.CERTCREDATE,  BMS_SA_SETTLE_DTLQRY_V.ENGLISHSHORT,  BMS_SA_SETTLE_DTLQRY_V.FMID,  BMS_SA_SETTLE_DTLQRY_V.FMNAME,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN1,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN2,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN3,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN4,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN52                                                      DTLZXCOLUMN52,  to_number(BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN5)                                            DTLZXCOLUMN5,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN6,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN7,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN8,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN9,  BMS_SA_SETTLE_DTLQRY_V.DTLZXCOLUMN10,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN1,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN2,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN3,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN4,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN5,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN6,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN7,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN8,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN9,  BMS_SA_SETTLE_DTLQRY_V.DOCZXCOLUMN10,  BMS_SA_SETTLE_DTLQRY_V.CONFIRMDATE,  BMS_SA_SETTLE_DTLQRY_V.CONFIRMMANID,  BMS_SA_SETTLE_DTLQRY_V.CONFIRMMANNAME,  BMS_SA_SETTLE_DTLQRY_V.FPRQ,  BMS_SA_SETTLE_DTLQRY_V.YSKTS,  BMS_SA_SETTLE_DTLQRY_V.CQTS,  BMS_SA_SETTLE_DTLQRY_V.EARLIESTLACKDAYS,  BMS_SA_SETTLE_DTLQRY_V.NOID15,  BMS_SA_SETTLE_DTLQRY_V.NONAME15,  BMS_SA_SETTLE_DTLQRY_V.NO13,  bms_sa_settle_dtlqry_v.exchange,  pf_sasettranflag1(sasettledtlid)                                                          DELIVERMETHOD,  pf_sasetTARGETPOSADDR1(sasettledtlid)                                                     TARGETPOSADDR,  protocolid,  ratime,  BMS_SA_SETTLE_DTLQRY_V.LXDATE,  BMS_SA_SETTLE_DTLQRY_V.CNONAME17,  BMS_SA_SETTLE_DTLQRY_V.CNOID17,  PF_GET_PLATFORMID(BMS_SA_SETTLE_DTLQRY_V.GOODSID)                                         platformid,  BMS_SA_SETTLE_DTLQRY_V.realcustomname,  BMS_SA_SETTLE_DTLQRY_V.NBPZH,  BMS_SA_SETTLE_DTLQRY_V.NO07,  BMS_SA_SETTLE_DTLQRY_V.DZSETTLEID,  BMS_SA_SETTLE_DTLQRY_V.DZINVNOFROM BMS_SA_SETTLE_DTLQRY_VWHERE 1 = 1;</p>\n<p>sasettleid    结算总单ID    bms_sa_settle_dtlqry_v.sasettleid    null    no<br>credate    结算日期    credate    null    no<br>sa_mode    销售模式    bms_sa_settle_dtlqry_v.sa_mode    null    no<br>customid    客户标识号    bms_sa_settle_dtlqry_v.customid    null    no<br>invtype    合同类型    bms_sa_settle_dtlqry_v.invtype    null    no<br>customopcode    客户操作码    bms_sa_settle_dtlqry_v.customopcode    null    no<br>customname    客户名称    bms_sa_settle_dtlqry_v.customname    null    no<br>total    结算总单金额    total    null    no<br>inputmanid    录入员标识号    bms_sa_settle_dtlqry_v.inputmanid    null    no<br>inputmanname    录入人    bms_sa_settle_dtlqry_v.inputmanname    null    no<br>dtl_lines    细目笔数    bms_sa_settle_dtlqry_v.dtl_lines    null    no<br>memo    备注    bms_sa_settle_dtlqry_v.memo    null    no<br>settlegroupno    结算组号    bms_sa_settle_dtlqry_v.settlegroupno    null    no<br>settletypeid    结算方式    bms_sa_settle_dtlqry_v.settletypeid    null    no<br>gatheringatonce    现收金额    bms_sa_settle_dtlqry_v.gatheringatonce    null    no<br>certid    传票ID    bms_sa_settle_dtlqry_v.certid    null    no<br>certno    传票号    bms_sa_settle_dtlqry_v.certno    null    no<br>certusestatus    传票状态    bms_sa_settle_dtlqry_v.certusestatus    null    no<br>usestatus    使用状态    bms_sa_settle_dtlqry_v.usestatus    null    no<br>initflag    初始标志    bms_sa_settle_dtlqry_v.initflag    null    no<br>sasettledtlid    结算细单ID    bms_sa_settle_dtlqry_v.sasettledtlid    null    no<br>invlistid    发票清单ID    bms_sa_settle_dtlqry_v.invlistid    null    no<br>invlistfirstno    清单轨号    bms_sa_settle_dtlqry_v.invlistfirstno    null    no<br>invlistno    清单号    bms_sa_settle_dtlqry_v.invlistno    null    no<br>printno    打印号    bms_sa_settle_dtlqry_v.printno    null    no<br>printline    打印行号    bms_sa_settle_dtlqry_v.printline    null    no<br>goodsid    货品标识号    bms_sa_settle_dtlqry_v.goodsid    null    no<br>opcode    货品操作码    bms_sa_settle_dtlqry_v.opcode    null    no<br>goodsno    货品分类码    bms_sa_settle_dtlqry_v.goodsno    null    no<br>goodsname    货品名称    bms_sa_settle_dtlqry_v.goodsname    null    no<br>goodstype    货品规格    bms_sa_settle_dtlqry_v.goodstype    null    no<br>prodarea    产地    bms_sa_settle_dtlqry_v.prodarea    null    no<br>goodsunit    基本单位    bms_sa_settle_dtlqry_v.goodsunit    null    no<br>goodsqty    结算数量    bms_sa_settle_dtlqry_v.goodsqty    null    no<br>packsizenum    件数    packsizenum    null    no<br>goodsqty1    计价单位数量    bms_sa_settle_dtlqry_v.goodsqty1    null    no<br>goodsunit1    计价单位    bms_sa_settle_dtlqry_v.goodsunit1    null    no<br>unitprice    unitprice_t    bms_sa_settle_dtlqry_v.unitprice    null    no<br>total_line    total_line_t    bms_sa_settle_dtlqry_v.total_line    null    no<br>taxrate    税率    bms_sa_settle_dtlqry_v.taxrate    null    no<br>taxmoney    税额    bms_sa_settle_dtlqry_v.taxmoney    null    no<br>notaxmoney    价额    bms_sa_settle_dtlqry_v.notaxmoney    null    no<br>salerid    业务员标识号    bms_sa_settle_dtlqry_v.salerid    null    no<br>salername    业务员姓名    bms_sa_settle_dtlqry_v.salername    null    no<br>salesdeptid    销售部门标识号    bms_sa_settle_dtlqry_v.salesdeptid    null    no<br>salesdeptname    业务部门    bms_sa_settle_dtlqry_v.salesdeptname    null    no<br>skflag    记存货帐标志    bms_sa_settle_dtlqry_v.skflag    null    no<br>costingmoney    销售成本    bms_sa_settle_dtlqry_v.costingmoney    null    no<br>costalter    摊成本调整金额    bms_sa_settle_dtlqry_v.costalter    null    no<br>presentcost    摊赠样成本    bms_sa_settle_dtlqry_v.presentcost    null    no<br>dtlmemo    细目备注    bms_sa_settle_dtlqry_v.dtlmemo    null    no<br>proxyflag    托收标志    bms_sa_settle_dtlqry_v.proxyflag    null    no<br>recfinflag    收款完成标志    bms_sa_settle_dtlqry_v.recfinflag    null    no<br>shoulesettlemoney    应结金额    bms_sa_settle_dtlqry_v.shoulesettlemoney    null    no<br>invid    发票标识号    bms_sa_settle_dtlqry_v.invid    null    no<br>invfirstno    发票轨号    bms_sa_settle_dtlqry_v.invfirstno    null    no<br>invno    发票号    bms_sa_settle_dtlqry_v.invno    null    no<br>invtype_a    发票类型    bms_sa_settle_dtlqry_v.invtype_a    null    no<br>invdtlid    发票明细标识号    bms_sa_settle_dtlqry_v.invdtlid    null    no<br>totalrecqty    累计收款数量    bms_sa_settle_dtlqry_v.totalrecqty    null    no<br>totalrecmoney    累计收款金额    bms_sa_settle_dtlqry_v.totalrecmoney    null    no<br>othersettleflag    其它应收标志    bms_sa_settle_dtlqry_v.othersettleflag    null    no<br>sadiscountmoney    销售折扣金额    bms_sa_settle_dtlqry_v.sadiscountmoney    null    no<br>correctflag    冲调标志    bms_sa_settle_dtlqry_v.correctflag    null    no<br>correctcplid    冲调单据标识号    bms_sa_settle_dtlqry_v.correctcplid    null    no<br>skcertid    存货传票标识号    bms_sa_settle_dtlqry_v.skcertid    null    no<br>skcertno    存货传票号    bms_sa_settle_dtlqry_v.skcertno    null    no<br>skcertusestatus    存货传票状态    bms_sa_settle_dtlqry_v.skcertusestatus    null    no<br>recingqty    期票未收款数量    bms_sa_settle_dtlqry_v.recingqty    null    no<br>recingmoney    期票未收款金额    bms_sa_settle_dtlqry_v.recingmoney    null    no<br>entryid    独立核算单元号    bms_sa_settle_dtlqry_v.entryid    null    no<br>entryname    独立核算单元    bms_sa_settle_dtlqry_v.entryname    null    no<br>customno    客户编码    bms_sa_settle_dtlqry_v.customno    null    no<br>skcertcredate    存货传票日期    bms_sa_settle_dtlqry_v.skcertcredate    null    no<br>certcredate    传票日期    bms_sa_settle_dtlqry_v.certcredate    null    no<br>englishshort    币种缩写    bms_sa_settle_dtlqry_v.englishshort    null    no<br>fmid    币种ID    bms_sa_settle_dtlqry_v.fmid    null    no<br>fmname    币种名称    bms_sa_settle_dtlqry_v.fmname    null    no<br>dtlzxcolumn1    Dtlzxcolumn1_t    bms_sa_settle_dtlqry_v.dtlzxcolumn1    null    no<br>dtlzxcolumn2    Dtlzxcolumn2_t    bms_sa_settle_dtlqry_v.dtlzxcolumn2    null    no<br>dtlzxcolumn3    行号    bms_sa_settle_dtlqry_v.dtlzxcolumn3    null    no<br>dtlzxcolumn4    Dtlzxcolumn4_t    bms_sa_settle_dtlqry_v.dtlzxcolumn4    null    no<br>dtlzxcolumn52    票面价    bms_sa_settle_dtlqry_v.dtlzxcolumn52    null    no<br>dtlzxcolumn5    Dtlzxcolumn5_t    dtlzxcolumn5    null    no<br>dtlzxcolumn6    Dtlzxcolumn6_t    bms_sa_settle_dtlqry_v.dtlzxcolumn6    null    no<br>dtlzxcolumn7    Dtlzxcolumn7_t    bms_sa_settle_dtlqry_v.dtlzxcolumn7    null    no<br>dtlzxcolumn8    Dtlzxcolumn8_t    bms_sa_settle_dtlqry_v.dtlzxcolumn8    null    no<br>dtlzxcolumn9    Dtlzxcolumn9_9    bms_sa_settle_dtlqry_v.dtlzxcolumn9    null    no<br>dtlzxcolumn10    Dtlzxcolumn10_t    bms_sa_settle_dtlqry_v.dtlzxcolumn10    null    no<br>doczxcolumn1    行号    bms_sa_settle_dtlqry_v.doczxcolumn1    null    no<br>doczxcolumn2    行号    bms_sa_settle_dtlqry_v.doczxcolumn2    null    no<br>doczxcolumn3    Doczxcolumn3_t    bms_sa_settle_dtlqry_v.doczxcolumn3    null    no<br>doczxcolumn4    Doczxcolumn4_t    bms_sa_settle_dtlqry_v.doczxcolumn4    null    no<br>doczxcolumn5    Doczxcolumn5_t    bms_sa_settle_dtlqry_v.doczxcolumn5    null    no<br>doczxcolumn6    Doczxcolumn6_t    bms_sa_settle_dtlqry_v.doczxcolumn6    null    no<br>doczxcolumn7    Doczxcolumn7_t    bms_sa_settle_dtlqry_v.doczxcolumn7    null    no<br>doczxcolumn8    Doczxcolumn8_t    bms_sa_settle_dtlqry_v.doczxcolumn8    null    no<br>doczxcolumn9    Doczxcolumn9_t    bms_sa_settle_dtlqry_v.doczxcolumn9    null    no<br>doczxcolumn10    Doczxcolumn10_t    bms_sa_settle_dtlqry_v.doczxcolumn10    null    no<br>confirmdate    确定时间    bms_sa_settle_dtlqry_v.confirmdate    null    no<br>confirmmanid    确定人ID    bms_sa_settle_dtlqry_v.confirmmanid    null    no<br>confirmmanname    确定人姓名    bms_sa_settle_dtlqry_v.confirmmanname    null    no<br>fprq    fprq_t    bms_sa_settle_dtlqry_v.fprq    null    no<br>yskts    收款天数期限    bms_sa_settle_dtlqry_v.yskts    null    no<br>cqts    超期天数    bms_sa_settle_dtlqry_v.cqts    null    no<br>earliestlackdays    默认最早欠款天数    bms_sa_settle_dtlqry_v.earliestlackdays    null    no<br>noid15    厂牌ID    bms_sa_settle_dtlqry_v.noid15    null    no<br>noname15    厂牌    bms_sa_settle_dtlqry_v.noname15    null    no<br>no13    功效属性一级    bms_sa_settle_dtlqry_v.no13    null    no<br>exchange    汇率    bms_sa_settle_dtlqry_v.exchange    null    no<br>delivermethod    送货方式    delivermethod    null    no<br>targetposaddr    送货地址    targetposaddr    null    no<br>protocolid    折扣协议ID    bms_sa_settle_dtlqry_v.protocolid    null    no<br>ratime    传票记帐日期    bms_sa_settle_dtlqry_v.ratime    null    no<br>lxdate    流向日期    bms_sa_settle_dtlqry_v.lxdate    null    no<br>cnoname17    规划分类    bms_sa_settle_dtlqry_v.cnoname17    null    no<br>cnoid17    cnoid17_t    bms_sa_settle_dtlqry_v.cnoid17    null    no<br>platformid    货品平台ID    platformid    null    no<br>realcustomname    实际客户名称    bms_sa_settle_dtlqry_v.realcustomname    null    no<br>nbpzh    内部凭证号    bms_sa_settle_dtlqry_v.nbpzh    null    no<br>no07    处方属性一级    bms_sa_settle_dtlqry_v.no07    null    no<br>dzsettleid    大众结算单ID    bms_sa_settle_dtlqry_v.dzsettleid    null    no<br>dzinvno    大众发票号    bms_sa_settle_dtlqry_v.dzinvno    null    no</p>\n<p>– 下面关键表的注释</p>\n<p>CREATE TABLE BMS_SA_SETTLE_DOC<br>(<br>    SASETTLEID NUMBER(10) PRIMARY KEY NOT NULL,<br>    CREDATE DATE,<br>    SA_MODE NUMBER(1),<br>    CUSTOMID NUMBER(10),<br>    CUSTOMNAME VARCHAR2(60),<br>    TOTAL NUMBER(12,2),<br>    INPUTMANID NUMBER(10),<br>    DTL_LINES NUMBER(5),<br>    MEMO VARCHAR2(200),<br>    SETTLEGROUPNO VARCHAR2(10),<br>    SETTLETYPEID NUMBER(3),<br>    GATHERINGATONCE NUMBER(12,2),<br>    CERTID NUMBER(10),<br>    USESTATUS NUMBER(1),<br>    INVTYPE NUMBER(2),<br>    INITFLAG NUMBER(1),<br>    ENTRYID NUMBER(10),<br>    TOTALREC NUMBER(12,2),<br>    FMID NUMBER(10),<br>    EXCHANGE NUMBER(20,12),<br>    ZXCOLUMN1 VARCHAR2(50),<br>    ZXCOLUMN2 VARCHAR2(50),<br>    ZXCOLUMN3 VARCHAR2(50),<br>    ZXCOLUMN4 VARCHAR2(50),<br>    ZXCOLUMN5 VARCHAR2(50),<br>    ZXCOLUMN6 VARCHAR2(50),<br>    ZXCOLUMN7 VARCHAR2(50),<br>    ZXCOLUMN8 VARCHAR2(50),<br>    ZXCOLUMN9 VARCHAR2(50),<br>    ZXCOLUMN10 VARCHAR2(50),<br>    CONFIRMDATE DATE,<br>    CONFIRMMANID NUMBER(10),<br>    ZXCOLUMN11 VARCHAR2(50),<br>    ZXCOLUMN12 VARCHAR2(50),<br>    ZXCOLUMN13 VARCHAR2(50),<br>    ZXCOLUMN14 VARCHAR2(50),<br>    ZXCOLUMN15 VARCHAR2(50),<br>    ZXCOLUMN16 VARCHAR2(50),<br>    ZXCOLUMN17 VARCHAR2(50),<br>    ZXCOLUMN18 VARCHAR2(50),<br>    ZXCOLUMN19 VARCHAR2(50),<br>    ZXCOLUMN20 VARCHAR2(50),<br>    CONSTRAINT BMS_SASET_CUSTOMID_FK FOREIGN KEY (CUSTOMID) REFERENCES PUB_CUSTOMER (CUSTOMID),<br>    CONSTRAINT BMS_SASET_DOC_ENTRYID FOREIGN KEY (ENTRYID) REFERENCES PUB_ENTRY (ENTRYID)<br>);<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.SASETTLEID IS ‘销售结算单标识号’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.CREDATE IS ‘日期’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.SA_MODE IS ‘“1-    普通销售2-    先配后结3-    发出销售4-    委托销售”‘;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.CUSTOMID IS ‘客户标识号’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.CUSTOMNAME IS ‘客户名称’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.TOTAL IS ‘总金额’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.INPUTMANID IS ‘录入员标识号’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.DTL_LINES IS ‘细目笔数’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.MEMO IS ‘备注’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.SETTLEGROUPNO IS ‘结算组号’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.SETTLETYPEID IS ‘结算方式 详见PUB_SETTLETYPE_DDL字典表’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.GATHERINGATONCE IS ‘大众商场现收金额’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.CERTID IS ‘传票标识号’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.USESTATUS IS ‘“使用状态0-    作废1-    临时2-    确定”‘;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.INVTYPE IS ‘1-增值税发票 2-普通发票’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.INITFLAG IS ‘初始标志’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.ENTRYID IS ‘核算单元ID’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.TOTALREC IS ‘累计收款金额’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.FMID IS ‘外币ID’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.EXCHANGE IS ‘汇率’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN1 IS ‘专项字段’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN2 IS ‘大众商场开票标志’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN3 IS ‘专项字段’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN4 IS ‘记录大众商场开票结算时医保刷卡金额’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN5 IS ‘记录大众商场开票结算时银联卡刷卡金额’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN6 IS ‘记录大众商场开票结算时现金金额’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN7 IS ‘记录大众商场开票结算时医保品种总金额’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN8 IS ‘专项字段’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN9 IS ‘清单打印标志’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.ZXCOLUMN10 IS ‘已打印时间序列号(年月日时)’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.CONFIRMDATE IS ‘确定时间’;<br>COMMENT ON COLUMN BMS_SA_SETTLE_DOC.CONFIRMMANID IS ‘确定人ID’;<br>CREATE INDEX BMS_SASETDOC_CREDATE_IDX ON BMS_SA_SETTLE_DOC (CREDATE);<br>CREATE INDEX BMS_SASET_CUSTOMID_IDX ON BMS_SA_SETTLE_DOC (CUSTOMID);<br>CREATE INDEX SA_SET_DOC_CERTID_IDX ON BMS_SA_SETTLE_DOC (CERTID);</p>\n"},{"_content":"SELECT\n  \"BMS_ST_LD_OVERSK_V\".\"STLDID\",\n  \"BMS_ST_LD_OVERSK_V\".\"CREDATE\",\n  \"BMS_ST_LD_OVERSK_V\".\"INPUTMANID\",\n  \"BMS_ST_LD_OVERSK_V\".\"INPUTMANNAME\",\n  \"BMS_ST_LD_OVERSK_V\".\"DEALWITHMANNAME\",\n  \"BMS_ST_LD_OVERSK_V\".\"SIGNMANNAME\",\n  \"BMS_ST_LD_OVERSK_V\".\"BACKDATE\",\n  \"BMS_ST_LD_OVERSK_V\".\"COMPANYID\",\n  \"BMS_ST_LD_OVERSK_V\".\"COMPANYNAME\",\n  \"BMS_ST_LD_OVERSK_V\".\"COMPANYOPCODE\",\n  \"BMS_ST_LD_OVERSK_V\".\"EMPLOYEENAME\",\n  \"BMS_ST_LD_OVERSK_V\".\"DELIVERMETHOD\",\n  \"BMS_ST_LD_OVERSK_V\".\"USESTATUS\",\n  \"BMS_ST_LD_OVERSK_V\".\"MEMO\",\n  \"BMS_ST_LD_OVERSK_V\".\"LDTYPE\",\n  \"BMS_ST_LD_OVERSK_V\".\"OUTSTORAGEID\",\n  \"BMS_ST_LD_OVERSK_V\".\"OPCODE\",\n  \"BMS_ST_LD_OVERSK_V\".\"STORAGENAME\",\n  \"BMS_ST_LD_OVERSK_V\".\"STORAGENO\",\n  \"BMS_ST_LD_OVERSK_V\".\"TARGETDATE\",\n  \"BMS_ST_LD_OVERSK_V\".\"LDREASON\",\n  \"BMS_ST_LD_OVERSK_V\".\"CONFIRMFLAG\",\n  \"BMS_ST_LD_OVERSK_V\".\"RELEASEFLAG\",\n  \"BMS_ST_LD_OVERSK_V\".\"URGENFLAG\"\nFROM \"BMS_ST_LD_OVERSK_V\"\nWHERE \"BMS_ST_LD_OVERSK_V\".\"LDTYPE\" = 3\nORDER BY \"BMS_ST_LD_OVERSK_V\".\"CREDATE\" DESC ,\n  \"BMS_ST_LD_OVERSK_V\".\"STLDID\" ASC\n\nquerylist\n\nedit\n\nstldid\t借出总单ID\tbms_st_ld_oversk_v.stldid\tnull\tyes\n\ncredate\t录入日期\tbms_st_ld_oversk_v.credate\tnull\tyes\ninputmanid\t录入人ID\tbms_st_ld_oversk_v.inputmanid\tnull\tyes\ninputmanname\t录入人\tbms_st_ld_oversk_v.inputmanname\tnull\tno\ndealwithmanname\t发货人\tbms_st_ld_oversk_v.dealwithmanname\tnull\tyes\nsignmanname\t货物交接人\tbms_st_ld_oversk_v.signmanname\tnull\tyes\nbackdate\t预计还货日期\tbms_st_ld_oversk_v.backdate\tnull\tyes\ncompanyid\t借货单位ID\tbms_st_ld_oversk_v.companyid\tnull\tyes\ncompanyname\t借货单位\tbms_st_ld_oversk_v.companyname\tnull\tyes\ncompanyopcode\t借货单位操作码\tbms_st_ld_oversk_v.companyopcode\tnull\tno\nemployeename\t对方收货人\tbms_st_ld_oversk_v.employeename\tnull\tyes\ndelivermethod\t运输方式\tbms_st_ld_oversk_v.delivermethod\tnull\tyes\n\nINSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (188, 'DELIVERMETHOD', '0', '自提', null);\nINSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (189, 'DELIVERMETHOD', '1', '送货', null);\nINSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (190, 'DELIVERMETHOD', '2', '不发货', null);\n\nusestatus\t状态\tbms_st_ld_oversk_v.usestatus\tnull\tyes\nmemo\t备注\tbms_st_ld_oversk_v.memo\tnull\tyes\nldtype\t借货类型\tbms_st_ld_oversk_v.ldtype\tnull\tyes\n\n1-借入;2-还出;3-借出;4-还回;\n\nINSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (191, 'LDTYPE', '1', '借入', null);\nINSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (192, 'LDTYPE', '2', '还出', null);\nINSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (193, 'LDTYPE', '3', '借出', null);\nINSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (194, 'LDTYPE', '4', '还出', null);\n\n\noutstorageid\t出库保管帐标识号\tbms_st_ld_oversk_v.outstorageid\tnull\tyes\nopcode\t出库保管帐操作码\tbms_st_ld_oversk_v.opcode\tnull\tno\nstoragename\t出库保管帐\tbms_st_ld_oversk_v.storagename\tnull\tno\nstorageno\t保管帐分类编码\tbms_st_ld_oversk_v.storageno\tnull\tno\ntargetdate\t运输日期\tbms_st_ld_oversk_v.targetdate\tnull\tyes\nldreason\t借出原因\tbms_st_ld_oversk_v.ldreason\tnull\tyes\n\nSYS_DATADICTIONARY\n\nINSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (183, 'LDREASON', '1', '推销积压货品', null);\nINSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (184, 'LDREASON', '2', '班后急需求助', null);\nINSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (185, 'LDREASON', '3', '价格原因', null);\nINSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (186, 'LDREASON', '4', '日常急需急救', null);\nINSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (187, 'LDREASON', '5', '换货', null);\n\nconfirmflag\t单据确认标志\tbms_st_ld_oversk_v.confirmflag\tnull\tyes\nreleaseflag\t单据释放标志\tbms_st_ld_oversk_v.releaseflag\tnull\tyes\nurgenflag\t加急标志\tbms_st_ld_oversk_v.urgenflag\tnull\tyes\n\n\nINSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('stldid', '借出总单ID', NULL, 'edit', NULL, NULL, NULL, 'I', '15', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('inputmanid', '录入人ID', NULL, 'edit', NULL, NULL, NULL, 'I', '20', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('inputmanname', '录入人', NULL, 'edit', NULL, NULL, NULL, 'S', '15', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('dealwithmanname', '发货人', NULL, 'edit', NULL, NULL, NULL, 'S', '15', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('signmanname', '货物交接人', NULL, 'edit', NULL, NULL, NULL, 'S', '15', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('backdate', '预计还货日期', NULL, 'edit', NULL, NULL, NULL, 'D', '0', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('companyid', '借货单位ID', NULL, 'edit', NULL, NULL, NULL, 'I', '15', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('companyname', '借货单位', NULL, 'edit', NULL, NULL, NULL, 'S', '200', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('companyopcode', '借货单位操作码', NULL, 'edit', NULL, NULL, NULL, 'I', '25', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('employeename', '对方收货人', NULL, 'edit', NULL, NULL, NULL, 'S', '25', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('delivermethod', '运输方式', NULL, 'querylist', 'DELIVERMETHOD', NULL, NULL, 'I', '15', NULL);\n\nINSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('ldtype', '借货类型', NULL, 'querylist', 'LDTYPE', NULL, NULL, 'I', '8', NULL);\n\nINSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('outstorageid', '出库保管帐标识号', NULL, 'edit', NULL, NULL, NULL, 'I', '15', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('opcode', '出库保管帐操作码', NULL, 'edit', NULL, NULL, NULL, 'S', '50', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('storagename', '出库保管帐', NULL, 'edit', NULL, NULL, NULL, 'S', '100', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('storageno', '保管帐分类编码', NULL, 'edit', NULL, NULL, NULL, 'S', '50', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('ldreason', '借出原因', NULL, 'querylist', 'LDREASON', NULL, NULL, 'I', '10', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('confirmflag', '单据确认标志', NULL, 'querylist', 'YESNO', NULL, NULL, 'I', '4', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('releaseflag', '单据释放标志', NULL, 'querylist', 'YESNO', NULL, NULL, 'I', '4', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('urgenflag', '加急标志', NULL, 'edit', NULL, NULL, NULL, 'I', '4', NULL);\n","source":"_posts/bms数据库---借出.md","raw":"SELECT\n  \"BMS_ST_LD_OVERSK_V\".\"STLDID\",\n  \"BMS_ST_LD_OVERSK_V\".\"CREDATE\",\n  \"BMS_ST_LD_OVERSK_V\".\"INPUTMANID\",\n  \"BMS_ST_LD_OVERSK_V\".\"INPUTMANNAME\",\n  \"BMS_ST_LD_OVERSK_V\".\"DEALWITHMANNAME\",\n  \"BMS_ST_LD_OVERSK_V\".\"SIGNMANNAME\",\n  \"BMS_ST_LD_OVERSK_V\".\"BACKDATE\",\n  \"BMS_ST_LD_OVERSK_V\".\"COMPANYID\",\n  \"BMS_ST_LD_OVERSK_V\".\"COMPANYNAME\",\n  \"BMS_ST_LD_OVERSK_V\".\"COMPANYOPCODE\",\n  \"BMS_ST_LD_OVERSK_V\".\"EMPLOYEENAME\",\n  \"BMS_ST_LD_OVERSK_V\".\"DELIVERMETHOD\",\n  \"BMS_ST_LD_OVERSK_V\".\"USESTATUS\",\n  \"BMS_ST_LD_OVERSK_V\".\"MEMO\",\n  \"BMS_ST_LD_OVERSK_V\".\"LDTYPE\",\n  \"BMS_ST_LD_OVERSK_V\".\"OUTSTORAGEID\",\n  \"BMS_ST_LD_OVERSK_V\".\"OPCODE\",\n  \"BMS_ST_LD_OVERSK_V\".\"STORAGENAME\",\n  \"BMS_ST_LD_OVERSK_V\".\"STORAGENO\",\n  \"BMS_ST_LD_OVERSK_V\".\"TARGETDATE\",\n  \"BMS_ST_LD_OVERSK_V\".\"LDREASON\",\n  \"BMS_ST_LD_OVERSK_V\".\"CONFIRMFLAG\",\n  \"BMS_ST_LD_OVERSK_V\".\"RELEASEFLAG\",\n  \"BMS_ST_LD_OVERSK_V\".\"URGENFLAG\"\nFROM \"BMS_ST_LD_OVERSK_V\"\nWHERE \"BMS_ST_LD_OVERSK_V\".\"LDTYPE\" = 3\nORDER BY \"BMS_ST_LD_OVERSK_V\".\"CREDATE\" DESC ,\n  \"BMS_ST_LD_OVERSK_V\".\"STLDID\" ASC\n\nquerylist\n\nedit\n\nstldid\t借出总单ID\tbms_st_ld_oversk_v.stldid\tnull\tyes\n\ncredate\t录入日期\tbms_st_ld_oversk_v.credate\tnull\tyes\ninputmanid\t录入人ID\tbms_st_ld_oversk_v.inputmanid\tnull\tyes\ninputmanname\t录入人\tbms_st_ld_oversk_v.inputmanname\tnull\tno\ndealwithmanname\t发货人\tbms_st_ld_oversk_v.dealwithmanname\tnull\tyes\nsignmanname\t货物交接人\tbms_st_ld_oversk_v.signmanname\tnull\tyes\nbackdate\t预计还货日期\tbms_st_ld_oversk_v.backdate\tnull\tyes\ncompanyid\t借货单位ID\tbms_st_ld_oversk_v.companyid\tnull\tyes\ncompanyname\t借货单位\tbms_st_ld_oversk_v.companyname\tnull\tyes\ncompanyopcode\t借货单位操作码\tbms_st_ld_oversk_v.companyopcode\tnull\tno\nemployeename\t对方收货人\tbms_st_ld_oversk_v.employeename\tnull\tyes\ndelivermethod\t运输方式\tbms_st_ld_oversk_v.delivermethod\tnull\tyes\n\nINSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (188, 'DELIVERMETHOD', '0', '自提', null);\nINSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (189, 'DELIVERMETHOD', '1', '送货', null);\nINSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (190, 'DELIVERMETHOD', '2', '不发货', null);\n\nusestatus\t状态\tbms_st_ld_oversk_v.usestatus\tnull\tyes\nmemo\t备注\tbms_st_ld_oversk_v.memo\tnull\tyes\nldtype\t借货类型\tbms_st_ld_oversk_v.ldtype\tnull\tyes\n\n1-借入;2-还出;3-借出;4-还回;\n\nINSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (191, 'LDTYPE', '1', '借入', null);\nINSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (192, 'LDTYPE', '2', '还出', null);\nINSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (193, 'LDTYPE', '3', '借出', null);\nINSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (194, 'LDTYPE', '4', '还出', null);\n\n\noutstorageid\t出库保管帐标识号\tbms_st_ld_oversk_v.outstorageid\tnull\tyes\nopcode\t出库保管帐操作码\tbms_st_ld_oversk_v.opcode\tnull\tno\nstoragename\t出库保管帐\tbms_st_ld_oversk_v.storagename\tnull\tno\nstorageno\t保管帐分类编码\tbms_st_ld_oversk_v.storageno\tnull\tno\ntargetdate\t运输日期\tbms_st_ld_oversk_v.targetdate\tnull\tyes\nldreason\t借出原因\tbms_st_ld_oversk_v.ldreason\tnull\tyes\n\nSYS_DATADICTIONARY\n\nINSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (183, 'LDREASON', '1', '推销积压货品', null);\nINSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (184, 'LDREASON', '2', '班后急需求助', null);\nINSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (185, 'LDREASON', '3', '价格原因', null);\nINSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (186, 'LDREASON', '4', '日常急需急救', null);\nINSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (187, 'LDREASON', '5', '换货', null);\n\nconfirmflag\t单据确认标志\tbms_st_ld_oversk_v.confirmflag\tnull\tyes\nreleaseflag\t单据释放标志\tbms_st_ld_oversk_v.releaseflag\tnull\tyes\nurgenflag\t加急标志\tbms_st_ld_oversk_v.urgenflag\tnull\tyes\n\n\nINSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('stldid', '借出总单ID', NULL, 'edit', NULL, NULL, NULL, 'I', '15', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('inputmanid', '录入人ID', NULL, 'edit', NULL, NULL, NULL, 'I', '20', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('inputmanname', '录入人', NULL, 'edit', NULL, NULL, NULL, 'S', '15', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('dealwithmanname', '发货人', NULL, 'edit', NULL, NULL, NULL, 'S', '15', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('signmanname', '货物交接人', NULL, 'edit', NULL, NULL, NULL, 'S', '15', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('backdate', '预计还货日期', NULL, 'edit', NULL, NULL, NULL, 'D', '0', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('companyid', '借货单位ID', NULL, 'edit', NULL, NULL, NULL, 'I', '15', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('companyname', '借货单位', NULL, 'edit', NULL, NULL, NULL, 'S', '200', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('companyopcode', '借货单位操作码', NULL, 'edit', NULL, NULL, NULL, 'I', '25', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('employeename', '对方收货人', NULL, 'edit', NULL, NULL, NULL, 'S', '25', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('delivermethod', '运输方式', NULL, 'querylist', 'DELIVERMETHOD', NULL, NULL, 'I', '15', NULL);\n\nINSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('ldtype', '借货类型', NULL, 'querylist', 'LDTYPE', NULL, NULL, 'I', '8', NULL);\n\nINSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('outstorageid', '出库保管帐标识号', NULL, 'edit', NULL, NULL, NULL, 'I', '15', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('opcode', '出库保管帐操作码', NULL, 'edit', NULL, NULL, NULL, 'S', '50', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('storagename', '出库保管帐', NULL, 'edit', NULL, NULL, NULL, 'S', '100', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('storageno', '保管帐分类编码', NULL, 'edit', NULL, NULL, NULL, 'S', '50', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('ldreason', '借出原因', NULL, 'querylist', 'LDREASON', NULL, NULL, 'I', '10', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('confirmflag', '单据确认标志', NULL, 'querylist', 'YESNO', NULL, NULL, 'I', '4', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('releaseflag', '单据释放标志', NULL, 'querylist', 'YESNO', NULL, NULL, 'I', '4', NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES ('urgenflag', '加急标志', NULL, 'edit', NULL, NULL, NULL, 'I', '4', NULL);\n","slug":"bms数据库---借出","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","_id":"ciye45jg3000g7v0oxrccwdy1","title":"","comments":1,"layout":"post","photos":[],"link":"","content":"<p>SELECT<br>  “BMS_ST_LD_OVERSK_V”.”STLDID”,<br>  “BMS_ST_LD_OVERSK_V”.”CREDATE”,<br>  “BMS_ST_LD_OVERSK_V”.”INPUTMANID”,<br>  “BMS_ST_LD_OVERSK_V”.”INPUTMANNAME”,<br>  “BMS_ST_LD_OVERSK_V”.”DEALWITHMANNAME”,<br>  “BMS_ST_LD_OVERSK_V”.”SIGNMANNAME”,<br>  “BMS_ST_LD_OVERSK_V”.”BACKDATE”,<br>  “BMS_ST_LD_OVERSK_V”.”COMPANYID”,<br>  “BMS_ST_LD_OVERSK_V”.”COMPANYNAME”,<br>  “BMS_ST_LD_OVERSK_V”.”COMPANYOPCODE”,<br>  “BMS_ST_LD_OVERSK_V”.”EMPLOYEENAME”,<br>  “BMS_ST_LD_OVERSK_V”.”DELIVERMETHOD”,<br>  “BMS_ST_LD_OVERSK_V”.”USESTATUS”,<br>  “BMS_ST_LD_OVERSK_V”.”MEMO”,<br>  “BMS_ST_LD_OVERSK_V”.”LDTYPE”,<br>  “BMS_ST_LD_OVERSK_V”.”OUTSTORAGEID”,<br>  “BMS_ST_LD_OVERSK_V”.”OPCODE”,<br>  “BMS_ST_LD_OVERSK_V”.”STORAGENAME”,<br>  “BMS_ST_LD_OVERSK_V”.”STORAGENO”,<br>  “BMS_ST_LD_OVERSK_V”.”TARGETDATE”,<br>  “BMS_ST_LD_OVERSK_V”.”LDREASON”,<br>  “BMS_ST_LD_OVERSK_V”.”CONFIRMFLAG”,<br>  “BMS_ST_LD_OVERSK_V”.”RELEASEFLAG”,<br>  “BMS_ST_LD_OVERSK_V”.”URGENFLAG”<br>FROM “BMS_ST_LD_OVERSK_V”<br>WHERE “BMS_ST_LD_OVERSK_V”.”LDTYPE” = 3<br>ORDER BY “BMS_ST_LD_OVERSK_V”.”CREDATE” DESC ,<br>  “BMS_ST_LD_OVERSK_V”.”STLDID” ASC</p>\n<p>querylist</p>\n<p>edit</p>\n<p>stldid    借出总单ID    bms_st_ld_oversk_v.stldid    null    yes</p>\n<p>credate    录入日期    bms_st_ld_oversk_v.credate    null    yes<br>inputmanid    录入人ID    bms_st_ld_oversk_v.inputmanid    null    yes<br>inputmanname    录入人    bms_st_ld_oversk_v.inputmanname    null    no<br>dealwithmanname    发货人    bms_st_ld_oversk_v.dealwithmanname    null    yes<br>signmanname    货物交接人    bms_st_ld_oversk_v.signmanname    null    yes<br>backdate    预计还货日期    bms_st_ld_oversk_v.backdate    null    yes<br>companyid    借货单位ID    bms_st_ld_oversk_v.companyid    null    yes<br>companyname    借货单位    bms_st_ld_oversk_v.companyname    null    yes<br>companyopcode    借货单位操作码    bms_st_ld_oversk_v.companyopcode    null    no<br>employeename    对方收货人    bms_st_ld_oversk_v.employeename    null    yes<br>delivermethod    运输方式    bms_st_ld_oversk_v.delivermethod    null    yes</p>\n<p>INSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (188, ‘DELIVERMETHOD’, ‘0’, ‘自提’, null);<br>INSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (189, ‘DELIVERMETHOD’, ‘1’, ‘送货’, null);<br>INSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (190, ‘DELIVERMETHOD’, ‘2’, ‘不发货’, null);</p>\n<p>usestatus    状态    bms_st_ld_oversk_v.usestatus    null    yes<br>memo    备注    bms_st_ld_oversk_v.memo    null    yes<br>ldtype    借货类型    bms_st_ld_oversk_v.ldtype    null    yes</p>\n<p>1-借入;2-还出;3-借出;4-还回;</p>\n<p>INSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (191, ‘LDTYPE’, ‘1’, ‘借入’, null);<br>INSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (192, ‘LDTYPE’, ‘2’, ‘还出’, null);<br>INSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (193, ‘LDTYPE’, ‘3’, ‘借出’, null);<br>INSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (194, ‘LDTYPE’, ‘4’, ‘还出’, null);</p>\n<p>outstorageid    出库保管帐标识号    bms_st_ld_oversk_v.outstorageid    null    yes<br>opcode    出库保管帐操作码    bms_st_ld_oversk_v.opcode    null    no<br>storagename    出库保管帐    bms_st_ld_oversk_v.storagename    null    no<br>storageno    保管帐分类编码    bms_st_ld_oversk_v.storageno    null    no<br>targetdate    运输日期    bms_st_ld_oversk_v.targetdate    null    yes<br>ldreason    借出原因    bms_st_ld_oversk_v.ldreason    null    yes</p>\n<p>SYS_DATADICTIONARY</p>\n<p>INSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (183, ‘LDREASON’, ‘1’, ‘推销积压货品’, null);<br>INSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (184, ‘LDREASON’, ‘2’, ‘班后急需求助’, null);<br>INSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (185, ‘LDREASON’, ‘3’, ‘价格原因’, null);<br>INSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (186, ‘LDREASON’, ‘4’, ‘日常急需急救’, null);<br>INSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (187, ‘LDREASON’, ‘5’, ‘换货’, null);</p>\n<p>confirmflag    单据确认标志    bms_st_ld_oversk_v.confirmflag    null    yes<br>releaseflag    单据释放标志    bms_st_ld_oversk_v.releaseflag    null    yes<br>urgenflag    加急标志    bms_st_ld_oversk_v.urgenflag    null    yes</p>\n<p>INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘stldid’, ‘借出总单ID’, NULL, ‘edit’, NULL, NULL, NULL, ‘I’, ‘15’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘inputmanid’, ‘录入人ID’, NULL, ‘edit’, NULL, NULL, NULL, ‘I’, ‘20’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘inputmanname’, ‘录入人’, NULL, ‘edit’, NULL, NULL, NULL, ‘S’, ‘15’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘dealwithmanname’, ‘发货人’, NULL, ‘edit’, NULL, NULL, NULL, ‘S’, ‘15’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘signmanname’, ‘货物交接人’, NULL, ‘edit’, NULL, NULL, NULL, ‘S’, ‘15’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘backdate’, ‘预计还货日期’, NULL, ‘edit’, NULL, NULL, NULL, ‘D’, ‘0’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘companyid’, ‘借货单位ID’, NULL, ‘edit’, NULL, NULL, NULL, ‘I’, ‘15’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘companyname’, ‘借货单位’, NULL, ‘edit’, NULL, NULL, NULL, ‘S’, ‘200’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘companyopcode’, ‘借货单位操作码’, NULL, ‘edit’, NULL, NULL, NULL, ‘I’, ‘25’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘employeename’, ‘对方收货人’, NULL, ‘edit’, NULL, NULL, NULL, ‘S’, ‘25’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘delivermethod’, ‘运输方式’, NULL, ‘querylist’, ‘DELIVERMETHOD’, NULL, NULL, ‘I’, ‘15’, NULL);</p>\n<p>INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘ldtype’, ‘借货类型’, NULL, ‘querylist’, ‘LDTYPE’, NULL, NULL, ‘I’, ‘8’, NULL);</p>\n<p>INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘outstorageid’, ‘出库保管帐标识号’, NULL, ‘edit’, NULL, NULL, NULL, ‘I’, ‘15’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘opcode’, ‘出库保管帐操作码’, NULL, ‘edit’, NULL, NULL, NULL, ‘S’, ‘50’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘storagename’, ‘出库保管帐’, NULL, ‘edit’, NULL, NULL, NULL, ‘S’, ‘100’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘storageno’, ‘保管帐分类编码’, NULL, ‘edit’, NULL, NULL, NULL, ‘S’, ‘50’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘ldreason’, ‘借出原因’, NULL, ‘querylist’, ‘LDREASON’, NULL, NULL, ‘I’, ‘10’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘confirmflag’, ‘单据确认标志’, NULL, ‘querylist’, ‘YESNO’, NULL, NULL, ‘I’, ‘4’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘releaseflag’, ‘单据释放标志’, NULL, ‘querylist’, ‘YESNO’, NULL, NULL, ‘I’, ‘4’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘urgenflag’, ‘加急标志’, NULL, ‘edit’, NULL, NULL, NULL, ‘I’, ‘4’, NULL);</p>\n","excerpt":"","more":"<p>SELECT<br>  “BMS_ST_LD_OVERSK_V”.”STLDID”,<br>  “BMS_ST_LD_OVERSK_V”.”CREDATE”,<br>  “BMS_ST_LD_OVERSK_V”.”INPUTMANID”,<br>  “BMS_ST_LD_OVERSK_V”.”INPUTMANNAME”,<br>  “BMS_ST_LD_OVERSK_V”.”DEALWITHMANNAME”,<br>  “BMS_ST_LD_OVERSK_V”.”SIGNMANNAME”,<br>  “BMS_ST_LD_OVERSK_V”.”BACKDATE”,<br>  “BMS_ST_LD_OVERSK_V”.”COMPANYID”,<br>  “BMS_ST_LD_OVERSK_V”.”COMPANYNAME”,<br>  “BMS_ST_LD_OVERSK_V”.”COMPANYOPCODE”,<br>  “BMS_ST_LD_OVERSK_V”.”EMPLOYEENAME”,<br>  “BMS_ST_LD_OVERSK_V”.”DELIVERMETHOD”,<br>  “BMS_ST_LD_OVERSK_V”.”USESTATUS”,<br>  “BMS_ST_LD_OVERSK_V”.”MEMO”,<br>  “BMS_ST_LD_OVERSK_V”.”LDTYPE”,<br>  “BMS_ST_LD_OVERSK_V”.”OUTSTORAGEID”,<br>  “BMS_ST_LD_OVERSK_V”.”OPCODE”,<br>  “BMS_ST_LD_OVERSK_V”.”STORAGENAME”,<br>  “BMS_ST_LD_OVERSK_V”.”STORAGENO”,<br>  “BMS_ST_LD_OVERSK_V”.”TARGETDATE”,<br>  “BMS_ST_LD_OVERSK_V”.”LDREASON”,<br>  “BMS_ST_LD_OVERSK_V”.”CONFIRMFLAG”,<br>  “BMS_ST_LD_OVERSK_V”.”RELEASEFLAG”,<br>  “BMS_ST_LD_OVERSK_V”.”URGENFLAG”<br>FROM “BMS_ST_LD_OVERSK_V”<br>WHERE “BMS_ST_LD_OVERSK_V”.”LDTYPE” = 3<br>ORDER BY “BMS_ST_LD_OVERSK_V”.”CREDATE” DESC ,<br>  “BMS_ST_LD_OVERSK_V”.”STLDID” ASC</p>\n<p>querylist</p>\n<p>edit</p>\n<p>stldid    借出总单ID    bms_st_ld_oversk_v.stldid    null    yes</p>\n<p>credate    录入日期    bms_st_ld_oversk_v.credate    null    yes<br>inputmanid    录入人ID    bms_st_ld_oversk_v.inputmanid    null    yes<br>inputmanname    录入人    bms_st_ld_oversk_v.inputmanname    null    no<br>dealwithmanname    发货人    bms_st_ld_oversk_v.dealwithmanname    null    yes<br>signmanname    货物交接人    bms_st_ld_oversk_v.signmanname    null    yes<br>backdate    预计还货日期    bms_st_ld_oversk_v.backdate    null    yes<br>companyid    借货单位ID    bms_st_ld_oversk_v.companyid    null    yes<br>companyname    借货单位    bms_st_ld_oversk_v.companyname    null    yes<br>companyopcode    借货单位操作码    bms_st_ld_oversk_v.companyopcode    null    no<br>employeename    对方收货人    bms_st_ld_oversk_v.employeename    null    yes<br>delivermethod    运输方式    bms_st_ld_oversk_v.delivermethod    null    yes</p>\n<p>INSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (188, ‘DELIVERMETHOD’, ‘0’, ‘自提’, null);<br>INSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (189, ‘DELIVERMETHOD’, ‘1’, ‘送货’, null);<br>INSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (190, ‘DELIVERMETHOD’, ‘2’, ‘不发货’, null);</p>\n<p>usestatus    状态    bms_st_ld_oversk_v.usestatus    null    yes<br>memo    备注    bms_st_ld_oversk_v.memo    null    yes<br>ldtype    借货类型    bms_st_ld_oversk_v.ldtype    null    yes</p>\n<p>1-借入;2-还出;3-借出;4-还回;</p>\n<p>INSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (191, ‘LDTYPE’, ‘1’, ‘借入’, null);<br>INSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (192, ‘LDTYPE’, ‘2’, ‘还出’, null);<br>INSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (193, ‘LDTYPE’, ‘3’, ‘借出’, null);<br>INSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (194, ‘LDTYPE’, ‘4’, ‘还出’, null);</p>\n<p>outstorageid    出库保管帐标识号    bms_st_ld_oversk_v.outstorageid    null    yes<br>opcode    出库保管帐操作码    bms_st_ld_oversk_v.opcode    null    no<br>storagename    出库保管帐    bms_st_ld_oversk_v.storagename    null    no<br>storageno    保管帐分类编码    bms_st_ld_oversk_v.storageno    null    no<br>targetdate    运输日期    bms_st_ld_oversk_v.targetdate    null    yes<br>ldreason    借出原因    bms_st_ld_oversk_v.ldreason    null    yes</p>\n<p>SYS_DATADICTIONARY</p>\n<p>INSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (183, ‘LDREASON’, ‘1’, ‘推销积压货品’, null);<br>INSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (184, ‘LDREASON’, ‘2’, ‘班后急需求助’, null);<br>INSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (185, ‘LDREASON’, ‘3’, ‘价格原因’, null);<br>INSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (186, ‘LDREASON’, ‘4’, ‘日常急需急救’, null);<br>INSERT INTO PC.SYS_DATADICTIONARY (DATA_DICT_ID, DD_KEY, DD_ID, DD_VALUE, DD_DESC) VALUES (187, ‘LDREASON’, ‘5’, ‘换货’, null);</p>\n<p>confirmflag    单据确认标志    bms_st_ld_oversk_v.confirmflag    null    yes<br>releaseflag    单据释放标志    bms_st_ld_oversk_v.releaseflag    null    yes<br>urgenflag    加急标志    bms_st_ld_oversk_v.urgenflag    null    yes</p>\n<p>INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘stldid’, ‘借出总单ID’, NULL, ‘edit’, NULL, NULL, NULL, ‘I’, ‘15’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘inputmanid’, ‘录入人ID’, NULL, ‘edit’, NULL, NULL, NULL, ‘I’, ‘20’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘inputmanname’, ‘录入人’, NULL, ‘edit’, NULL, NULL, NULL, ‘S’, ‘15’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘dealwithmanname’, ‘发货人’, NULL, ‘edit’, NULL, NULL, NULL, ‘S’, ‘15’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘signmanname’, ‘货物交接人’, NULL, ‘edit’, NULL, NULL, NULL, ‘S’, ‘15’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘backdate’, ‘预计还货日期’, NULL, ‘edit’, NULL, NULL, NULL, ‘D’, ‘0’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘companyid’, ‘借货单位ID’, NULL, ‘edit’, NULL, NULL, NULL, ‘I’, ‘15’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘companyname’, ‘借货单位’, NULL, ‘edit’, NULL, NULL, NULL, ‘S’, ‘200’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘companyopcode’, ‘借货单位操作码’, NULL, ‘edit’, NULL, NULL, NULL, ‘I’, ‘25’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘employeename’, ‘对方收货人’, NULL, ‘edit’, NULL, NULL, NULL, ‘S’, ‘25’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘delivermethod’, ‘运输方式’, NULL, ‘querylist’, ‘DELIVERMETHOD’, NULL, NULL, ‘I’, ‘15’, NULL);</p>\n<p>INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘ldtype’, ‘借货类型’, NULL, ‘querylist’, ‘LDTYPE’, NULL, NULL, ‘I’, ‘8’, NULL);</p>\n<p>INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘outstorageid’, ‘出库保管帐标识号’, NULL, ‘edit’, NULL, NULL, NULL, ‘I’, ‘15’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘opcode’, ‘出库保管帐操作码’, NULL, ‘edit’, NULL, NULL, NULL, ‘S’, ‘50’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘storagename’, ‘出库保管帐’, NULL, ‘edit’, NULL, NULL, NULL, ‘S’, ‘100’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘storageno’, ‘保管帐分类编码’, NULL, ‘edit’, NULL, NULL, NULL, ‘S’, ‘50’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘ldreason’, ‘借出原因’, NULL, ‘querylist’, ‘LDREASON’, NULL, NULL, ‘I’, ‘10’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘confirmflag’, ‘单据确认标志’, NULL, ‘querylist’, ‘YESNO’, NULL, NULL, ‘I’, ‘4’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘releaseflag’, ‘单据释放标志’, NULL, ‘querylist’, ‘YESNO’, NULL, NULL, ‘I’, ‘4’, NULL);INSERT INTO PC.SYS_DATAITEMCFG (DTCODE, DTNAME, DTMEMO, DISPTYPECFG, DISPTYPEKEY, SEQUENCE, QUERYSQL, VALIDATATYPECFG, MAXLENGTH, NUMBERPRECISION)VALUES (‘urgenflag’, ‘加急标志’, NULL, ‘edit’, NULL, NULL, NULL, ‘I’, ‘4’, NULL);</p>\n"},{"_content":"> Jersey\n\n```\n\n使用URI\n支持MIME类型的响应数据，包括JSON/XML/JPEG等\n使用HTTP GET/POST/DELETE/PUT（对应查找、新增、删除、修改）\n###JSR 311(JAX-RS)和Jersey Jersey是JSR 311的Java实现，可以快速的实现RESTful Web Service。Jersey的最新版本为2.6。其主要包含三个部分：\n\n核心服务器（Core Server）：通过提供JSR 311 中标准化的注释和API 标准化，您可以用直观的方式开发RESTful Web 服务\n核心客户端（Core Client）：Jersey 客户端API 帮助您与REST 服务轻松通信。\n集成（Integration）：Jersey 还提供可以轻松集成Spring、Guice、Apache Abdera 的库。\n\n```\n\n> 依赖包\n\n```\n\ncommons-beanutils.jar\ncommons-lang.jar\ncommons-logging.jar\nezmorph-1.0.2.jar\njavax.servlet.api.jar\njavax.ws.rs-api : 处理媒体类型等\njson-lib.jar\n\n```\n\n> 常用注解\n\n```\n\n@Path 定义资源的相对URI\n@GET 意味着以下方法可以响应HTTP GET方法\n@Produces 响应的MIME类型\n\n@Path(\"/users/{username}\")\n这个例子中，{username}即为用户输入的数据，例如用户输入Weiwei，则URL定位到 http://example.com/users/Weiwei\n对应的组件:\n    public String getUser(@PathParam(\"username\") String userName) {\n        ...\n    }\n一个@Path的内容是否以\"/\"开头都没有区别，同样是否以\"/\"结尾也没有什么区别\n@Path 位于方法上便是 子资源 分两种方式:\n\n\n@Produces(\"text/plain\")\n指定了资源所产生和发送给 客户端的MIME类型，这里指定了类型为纯文本类型。\n@Produces 会覆盖类层面的@Produces\n@Produces({\"application/xml\", \"application/json\"})\npublic String doGetAsXmlOrJson() {\n    ...\n}\n\n@Consumes({\"application/xml\", \"application/json\"})\n指定所消费的类型的格式，这里指定为XML和JSON，即可以 接收 这种类型格式的文件作为输入。\n\n所有媒体类型(*/*)byte[]\njava.lang.String\njava.io.Reader (inbound only)\njava.io.File\njavax.activation.DataSource\njavax.ws.rs.core.StreamingOutput (outbound only)\n\nXML 媒体类型 (text/xml, application/xml and application/...+xml)\njavax.xml.transform.Source\njavax.xml.bind.JAXBElement\n应用了 JAXB 类的应用 (使用了 @XmlRootElement 或者 @XmlType 的类型)\n\nForm 表单内容(application/x-www-form-urlencoded)\nMultivaluedMap\n\n纯文本 (text/plain)java.lang.Boolean\njava.lang.Character\njava.lang.Number\n\n@FormParam稍有特殊，因为它提取信息，先是请求所表示的MIME媒体类型为 application/x-www-form-urlencoded\n，并且符合指定的 HTML 编码的形式，正如这里所描述的。此参数提取对于 HTML 表单请求是非常有用的\n@FormParam 注释是特别的，仅可利用资源和子资源的方法。这是因为它从请求实体中提取信息\n\n@MatrixParam 从 URL 路径提取信息. \n\n@HeaderParam 从 HTTP 头部提取信息。 \n\n@CookieParam从关联在 HTTP 头部的 cookies 里提取信息。\n\n@BeanParam 用法  , 相当于把参数放进去 \n\npublic class MyBeanParam {\n    @PathParam(\"p\")\n    private String pathParam;\n\n    @MatrixParam(\"m\")\n    @Encoded\n    @DefaultValue(\"default\")\n    private String matrixParam;\n\n    @HeaderParam(\"header\")\n    private String headerParam;\n\n    private String queryParam;\n\n    public MyBeanParam(@QueryParam(\"q\") String queryParam) {\n    this.queryParam = queryParam;\n    }\n\n    public String getPathParam() {\n    return pathParam;\n    }\n    ...\n}\n\n\n@POST\npublic void post(@BeanParam MyBeanParam beanParam, String entity) {\n    final String pathParam = beanParam.getPathParam(); // contains injected path parameter \"p\"\n    ...\n}\n\n\n\n@Singleton \n资源将是单例模式，不受请求范围管理,子资源定位方法返回一个类，这意味着运行时将托管资源的实例及其生命周期。相反，如果方法返回的是实例，那么注释将没有效果，返回的实例将被使用。\n\n@Path(\"/item\")\npublic class ItemResource {\n    @Path(\"content\")\n    public Class<ItemContentSingletonResource> getItemContentResource() {\n        return ItemContentSingletonResource.class;\n    }\n}\n\n@Singleton\npublic class ItemContentSingletonResource {\n    // this class is managed in the singleton life cycle\n}\n\n\n```\n\n> 注入规则\n\n```\n\n@Path(\"{id:\\\\d+}\")\npublic class InjectedResource {\n    // 注入到属性\n    @DefaultValue(\"q\") @QueryParam(\"p\")\n    private String p;\n\n    // 注入到构造函数参数\n    public InjectedResource(@PathParam(\"id\") int id) { ... }\n\n    // 注入到资源参数\n    @GET\n    public String get(@Context UriInfo ui) { ... }\n\n    // 注入子资源方法参数\n    @Path(\"sub-id\")\n    @GET\n    public String get(@PathParam(\"sub-id\") String id) { ... }\n\n    // 注入子资源方法参数定位器方法参数\n    @Path(\"sub-id\")\n    public SubResource getSubResource(@PathParam(\"sub-id\") String id) { ... }\n\n    // 注入 bean setter 方法\n    @HeaderParam(\"X-header\")\n    public void setHeader(String header) { ... }\n}\n\n\n@Path(\"resource\")\npublic static class SummaryOfInjectionsResource {\n    @QueryParam(\"query\")\n    String param; // injection into a class field 注入类的属性\n\n\n    @GET\n    public String get(@QueryParam(\"query\") String methodQueryParam) {\n        // injection into a resource method parameter 注入资源的方法参数\n        return \"query param: \" + param;\n    }\n\n    @Path(\"sub-resource-locator\")\n    public Class<SubResource> subResourceLocator(@QueryParam(\"query\") String subResourceQueryParam) {\n        // injection into a sub resource locator parameter注入子资源定位器参数\n        return SubResource.class;\n    }\n\n    public SummaryOfInjectionsResource(@QueryParam(\"query\") String constructorQueryParam) {\n        // injection into a constructor parameter注入构造器的参数\n    }\n\n\n    @Context\n    public void setRequest(Request request) {\n        // injection into a setter method注入setter方法\n        System.out.println(request != null);\n    }\n}\n\npublic static class SubResource {\n    @GET\n    public String get() {\n        return \"sub resource\";\n    }\n}\n\n```\n\n# 应用的部署和运行时的环境\n\n> ResourceConfig 简化组件的注册,如扫描根资源、类提供者提供的路径或一组包名的集合。所有 JAX-RS 组件类都会手动注册或者扫描期间找到的类都会自动添加到 getClasses 所返回的类的集合中,另外部署时可参考[Servlet容器模型（二）部署描述文件](http://blog.csdn.net/cl05300629/article/details/9339205)\n\n```\n\npublic class MyApplication extends ResourceConfig {\n    public MyApplication() {\n        register(org.glassfish.jersey.server.filter.UriConnegFilter.class);\n        register(org.glassfish.jersey.server.validation.ValidationFeature.class);\n        register(org.glassfish.jersey.server.spring.SpringComponentProvider.class);\n        register(org.glassfish.jersey.grizzly2.httpserver.GrizzlyHttpContainerProvider.class);\n        property(ServerProperties.METAINF_SERVICES_LOOKUP_DISABLE, true);\n    }\n}\n\n    <servlet>\n        <servlet-name>Jersey Web Application</servlet-name>\n        <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>\n        <init-param>\n            <param-name>javax.ws.rs.Application</param-name>\n            <param-value>com.gzmpc.pc.MainApp</param-value>\n        </init-param>\n        <load-on-startup>1</load-on-startup>\n    </servlet>\n\n\n<Servlet>元素\n\n1、<servlet-name>元素：必须选，定义servlet名称，在DD文件中应该唯一，可通过servletConfig的getServletName()方法检索；\n\n2、<servlet-class>元素：制定servlet完整名称，需带包\n\nWEB-INF目录中的classes目录和lib目录中JAR文件会被自动添加到容器的类路径中，不需设置类路径\n\n3、<init-param>元素：向servlet传递初始化参数，每个<int-param>有仅有一组<param-name>和<param-value>子元素，可通过ServletConfig接口的getInitParameter()方法检索初始化参数；\n\n4、<load-on-startup>元素：一般的servlet是在被请求时由容器装入内存，这只一个正数则在启动时载入该servlet，值小的优先装入，负数或者没有指定，容器将根据需要决定何时装入servlet\n\n\n\n```\n\n\n> [使用 Spring Data JPA 简化 JPA 开发](http://www.cnblogs.com/eggbucket/archive/2012/10/16/2726302.html)\n\n\n> [MIME类型大全](http://www.cnblogs.com/zhongcj/archive/2008/11/03/1325293.html)\n","source":"_posts/jersey-2-x-记录.md","raw":"> Jersey\n\n```\n\n使用URI\n支持MIME类型的响应数据，包括JSON/XML/JPEG等\n使用HTTP GET/POST/DELETE/PUT（对应查找、新增、删除、修改）\n###JSR 311(JAX-RS)和Jersey Jersey是JSR 311的Java实现，可以快速的实现RESTful Web Service。Jersey的最新版本为2.6。其主要包含三个部分：\n\n核心服务器（Core Server）：通过提供JSR 311 中标准化的注释和API 标准化，您可以用直观的方式开发RESTful Web 服务\n核心客户端（Core Client）：Jersey 客户端API 帮助您与REST 服务轻松通信。\n集成（Integration）：Jersey 还提供可以轻松集成Spring、Guice、Apache Abdera 的库。\n\n```\n\n> 依赖包\n\n```\n\ncommons-beanutils.jar\ncommons-lang.jar\ncommons-logging.jar\nezmorph-1.0.2.jar\njavax.servlet.api.jar\njavax.ws.rs-api : 处理媒体类型等\njson-lib.jar\n\n```\n\n> 常用注解\n\n```\n\n@Path 定义资源的相对URI\n@GET 意味着以下方法可以响应HTTP GET方法\n@Produces 响应的MIME类型\n\n@Path(\"/users/{username}\")\n这个例子中，{username}即为用户输入的数据，例如用户输入Weiwei，则URL定位到 http://example.com/users/Weiwei\n对应的组件:\n    public String getUser(@PathParam(\"username\") String userName) {\n        ...\n    }\n一个@Path的内容是否以\"/\"开头都没有区别，同样是否以\"/\"结尾也没有什么区别\n@Path 位于方法上便是 子资源 分两种方式:\n\n\n@Produces(\"text/plain\")\n指定了资源所产生和发送给 客户端的MIME类型，这里指定了类型为纯文本类型。\n@Produces 会覆盖类层面的@Produces\n@Produces({\"application/xml\", \"application/json\"})\npublic String doGetAsXmlOrJson() {\n    ...\n}\n\n@Consumes({\"application/xml\", \"application/json\"})\n指定所消费的类型的格式，这里指定为XML和JSON，即可以 接收 这种类型格式的文件作为输入。\n\n所有媒体类型(*/*)byte[]\njava.lang.String\njava.io.Reader (inbound only)\njava.io.File\njavax.activation.DataSource\njavax.ws.rs.core.StreamingOutput (outbound only)\n\nXML 媒体类型 (text/xml, application/xml and application/...+xml)\njavax.xml.transform.Source\njavax.xml.bind.JAXBElement\n应用了 JAXB 类的应用 (使用了 @XmlRootElement 或者 @XmlType 的类型)\n\nForm 表单内容(application/x-www-form-urlencoded)\nMultivaluedMap\n\n纯文本 (text/plain)java.lang.Boolean\njava.lang.Character\njava.lang.Number\n\n@FormParam稍有特殊，因为它提取信息，先是请求所表示的MIME媒体类型为 application/x-www-form-urlencoded\n，并且符合指定的 HTML 编码的形式，正如这里所描述的。此参数提取对于 HTML 表单请求是非常有用的\n@FormParam 注释是特别的，仅可利用资源和子资源的方法。这是因为它从请求实体中提取信息\n\n@MatrixParam 从 URL 路径提取信息. \n\n@HeaderParam 从 HTTP 头部提取信息。 \n\n@CookieParam从关联在 HTTP 头部的 cookies 里提取信息。\n\n@BeanParam 用法  , 相当于把参数放进去 \n\npublic class MyBeanParam {\n    @PathParam(\"p\")\n    private String pathParam;\n\n    @MatrixParam(\"m\")\n    @Encoded\n    @DefaultValue(\"default\")\n    private String matrixParam;\n\n    @HeaderParam(\"header\")\n    private String headerParam;\n\n    private String queryParam;\n\n    public MyBeanParam(@QueryParam(\"q\") String queryParam) {\n    this.queryParam = queryParam;\n    }\n\n    public String getPathParam() {\n    return pathParam;\n    }\n    ...\n}\n\n\n@POST\npublic void post(@BeanParam MyBeanParam beanParam, String entity) {\n    final String pathParam = beanParam.getPathParam(); // contains injected path parameter \"p\"\n    ...\n}\n\n\n\n@Singleton \n资源将是单例模式，不受请求范围管理,子资源定位方法返回一个类，这意味着运行时将托管资源的实例及其生命周期。相反，如果方法返回的是实例，那么注释将没有效果，返回的实例将被使用。\n\n@Path(\"/item\")\npublic class ItemResource {\n    @Path(\"content\")\n    public Class<ItemContentSingletonResource> getItemContentResource() {\n        return ItemContentSingletonResource.class;\n    }\n}\n\n@Singleton\npublic class ItemContentSingletonResource {\n    // this class is managed in the singleton life cycle\n}\n\n\n```\n\n> 注入规则\n\n```\n\n@Path(\"{id:\\\\d+}\")\npublic class InjectedResource {\n    // 注入到属性\n    @DefaultValue(\"q\") @QueryParam(\"p\")\n    private String p;\n\n    // 注入到构造函数参数\n    public InjectedResource(@PathParam(\"id\") int id) { ... }\n\n    // 注入到资源参数\n    @GET\n    public String get(@Context UriInfo ui) { ... }\n\n    // 注入子资源方法参数\n    @Path(\"sub-id\")\n    @GET\n    public String get(@PathParam(\"sub-id\") String id) { ... }\n\n    // 注入子资源方法参数定位器方法参数\n    @Path(\"sub-id\")\n    public SubResource getSubResource(@PathParam(\"sub-id\") String id) { ... }\n\n    // 注入 bean setter 方法\n    @HeaderParam(\"X-header\")\n    public void setHeader(String header) { ... }\n}\n\n\n@Path(\"resource\")\npublic static class SummaryOfInjectionsResource {\n    @QueryParam(\"query\")\n    String param; // injection into a class field 注入类的属性\n\n\n    @GET\n    public String get(@QueryParam(\"query\") String methodQueryParam) {\n        // injection into a resource method parameter 注入资源的方法参数\n        return \"query param: \" + param;\n    }\n\n    @Path(\"sub-resource-locator\")\n    public Class<SubResource> subResourceLocator(@QueryParam(\"query\") String subResourceQueryParam) {\n        // injection into a sub resource locator parameter注入子资源定位器参数\n        return SubResource.class;\n    }\n\n    public SummaryOfInjectionsResource(@QueryParam(\"query\") String constructorQueryParam) {\n        // injection into a constructor parameter注入构造器的参数\n    }\n\n\n    @Context\n    public void setRequest(Request request) {\n        // injection into a setter method注入setter方法\n        System.out.println(request != null);\n    }\n}\n\npublic static class SubResource {\n    @GET\n    public String get() {\n        return \"sub resource\";\n    }\n}\n\n```\n\n# 应用的部署和运行时的环境\n\n> ResourceConfig 简化组件的注册,如扫描根资源、类提供者提供的路径或一组包名的集合。所有 JAX-RS 组件类都会手动注册或者扫描期间找到的类都会自动添加到 getClasses 所返回的类的集合中,另外部署时可参考[Servlet容器模型（二）部署描述文件](http://blog.csdn.net/cl05300629/article/details/9339205)\n\n```\n\npublic class MyApplication extends ResourceConfig {\n    public MyApplication() {\n        register(org.glassfish.jersey.server.filter.UriConnegFilter.class);\n        register(org.glassfish.jersey.server.validation.ValidationFeature.class);\n        register(org.glassfish.jersey.server.spring.SpringComponentProvider.class);\n        register(org.glassfish.jersey.grizzly2.httpserver.GrizzlyHttpContainerProvider.class);\n        property(ServerProperties.METAINF_SERVICES_LOOKUP_DISABLE, true);\n    }\n}\n\n    <servlet>\n        <servlet-name>Jersey Web Application</servlet-name>\n        <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>\n        <init-param>\n            <param-name>javax.ws.rs.Application</param-name>\n            <param-value>com.gzmpc.pc.MainApp</param-value>\n        </init-param>\n        <load-on-startup>1</load-on-startup>\n    </servlet>\n\n\n<Servlet>元素\n\n1、<servlet-name>元素：必须选，定义servlet名称，在DD文件中应该唯一，可通过servletConfig的getServletName()方法检索；\n\n2、<servlet-class>元素：制定servlet完整名称，需带包\n\nWEB-INF目录中的classes目录和lib目录中JAR文件会被自动添加到容器的类路径中，不需设置类路径\n\n3、<init-param>元素：向servlet传递初始化参数，每个<int-param>有仅有一组<param-name>和<param-value>子元素，可通过ServletConfig接口的getInitParameter()方法检索初始化参数；\n\n4、<load-on-startup>元素：一般的servlet是在被请求时由容器装入内存，这只一个正数则在启动时载入该servlet，值小的优先装入，负数或者没有指定，容器将根据需要决定何时装入servlet\n\n\n\n```\n\n\n> [使用 Spring Data JPA 简化 JPA 开发](http://www.cnblogs.com/eggbucket/archive/2012/10/16/2726302.html)\n\n\n> [MIME类型大全](http://www.cnblogs.com/zhongcj/archive/2008/11/03/1325293.html)\n","slug":"jersey-2-x-记录","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","_id":"ciye45jg5000h7v0o8ki5eclu","title":"","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>Jersey</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">使用URI</div><div class=\"line\">支持MIME类型的响应数据，包括JSON/XML/JPEG等</div><div class=\"line\">使用HTTP GET/POST/DELETE/PUT（对应查找、新增、删除、修改）</div><div class=\"line\">###JSR 311(JAX-RS)和Jersey Jersey是JSR 311的Java实现，可以快速的实现RESTful Web Service。Jersey的最新版本为2.6。其主要包含三个部分：</div><div class=\"line\"></div><div class=\"line\">核心服务器（Core Server）：通过提供JSR 311 中标准化的注释和API 标准化，您可以用直观的方式开发RESTful Web 服务</div><div class=\"line\">核心客户端（Core Client）：Jersey 客户端API 帮助您与REST 服务轻松通信。</div><div class=\"line\">集成（Integration）：Jersey 还提供可以轻松集成Spring、Guice、Apache Abdera 的库。</div></pre></td></tr></table></figure>\n<blockquote>\n<p>依赖包</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">commons-beanutils.jar</div><div class=\"line\">commons-lang.jar</div><div class=\"line\">commons-logging.jar</div><div class=\"line\">ezmorph-1.0.2.jar</div><div class=\"line\">javax.servlet.api.jar</div><div class=\"line\">javax.ws.rs-api : 处理媒体类型等</div><div class=\"line\">json-lib.jar</div></pre></td></tr></table></figure>\n<blockquote>\n<p>常用注解</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">@Path 定义资源的相对URI</div><div class=\"line\">@GET 意味着以下方法可以响应HTTP GET方法</div><div class=\"line\">@Produces 响应的MIME类型</div><div class=\"line\"></div><div class=\"line\">@Path(&quot;/users/&#123;username&#125;&quot;)</div><div class=\"line\">这个例子中，&#123;username&#125;即为用户输入的数据，例如用户输入Weiwei，则URL定位到 http://example.com/users/Weiwei</div><div class=\"line\">对应的组件:</div><div class=\"line\">    public String getUser(@PathParam(&quot;username&quot;) String userName) &#123;</div><div class=\"line\">        ...</div><div class=\"line\">    &#125;</div><div class=\"line\">一个@Path的内容是否以&quot;/&quot;开头都没有区别，同样是否以&quot;/&quot;结尾也没有什么区别</div><div class=\"line\">@Path 位于方法上便是 子资源 分两种方式:</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">@Produces(&quot;text/plain&quot;)</div><div class=\"line\">指定了资源所产生和发送给 客户端的MIME类型，这里指定了类型为纯文本类型。</div><div class=\"line\">@Produces 会覆盖类层面的@Produces</div><div class=\"line\">@Produces(&#123;&quot;application/xml&quot;, &quot;application/json&quot;&#125;)</div><div class=\"line\">public String doGetAsXmlOrJson() &#123;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@Consumes(&#123;&quot;application/xml&quot;, &quot;application/json&quot;&#125;)</div><div class=\"line\">指定所消费的类型的格式，这里指定为XML和JSON，即可以 接收 这种类型格式的文件作为输入。</div><div class=\"line\"></div><div class=\"line\">所有媒体类型(*/*)byte[]</div><div class=\"line\">java.lang.String</div><div class=\"line\">java.io.Reader (inbound only)</div><div class=\"line\">java.io.File</div><div class=\"line\">javax.activation.DataSource</div><div class=\"line\">javax.ws.rs.core.StreamingOutput (outbound only)</div><div class=\"line\"></div><div class=\"line\">XML 媒体类型 (text/xml, application/xml and application/...+xml)</div><div class=\"line\">javax.xml.transform.Source</div><div class=\"line\">javax.xml.bind.JAXBElement</div><div class=\"line\">应用了 JAXB 类的应用 (使用了 @XmlRootElement 或者 @XmlType 的类型)</div><div class=\"line\"></div><div class=\"line\">Form 表单内容(application/x-www-form-urlencoded)</div><div class=\"line\">MultivaluedMap</div><div class=\"line\"></div><div class=\"line\">纯文本 (text/plain)java.lang.Boolean</div><div class=\"line\">java.lang.Character</div><div class=\"line\">java.lang.Number</div><div class=\"line\"></div><div class=\"line\">@FormParam稍有特殊，因为它提取信息，先是请求所表示的MIME媒体类型为 application/x-www-form-urlencoded</div><div class=\"line\">，并且符合指定的 HTML 编码的形式，正如这里所描述的。此参数提取对于 HTML 表单请求是非常有用的</div><div class=\"line\">@FormParam 注释是特别的，仅可利用资源和子资源的方法。这是因为它从请求实体中提取信息</div><div class=\"line\"></div><div class=\"line\">@MatrixParam 从 URL 路径提取信息. </div><div class=\"line\"></div><div class=\"line\">@HeaderParam 从 HTTP 头部提取信息。 </div><div class=\"line\"></div><div class=\"line\">@CookieParam从关联在 HTTP 头部的 cookies 里提取信息。</div><div class=\"line\"></div><div class=\"line\">@BeanParam 用法  , 相当于把参数放进去 </div><div class=\"line\"></div><div class=\"line\">public class MyBeanParam &#123;</div><div class=\"line\">    @PathParam(&quot;p&quot;)</div><div class=\"line\">    private String pathParam;</div><div class=\"line\"></div><div class=\"line\">    @MatrixParam(&quot;m&quot;)</div><div class=\"line\">    @Encoded</div><div class=\"line\">    @DefaultValue(&quot;default&quot;)</div><div class=\"line\">    private String matrixParam;</div><div class=\"line\"></div><div class=\"line\">    @HeaderParam(&quot;header&quot;)</div><div class=\"line\">    private String headerParam;</div><div class=\"line\"></div><div class=\"line\">    private String queryParam;</div><div class=\"line\"></div><div class=\"line\">    public MyBeanParam(@QueryParam(&quot;q&quot;) String queryParam) &#123;</div><div class=\"line\">    this.queryParam = queryParam;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    public String getPathParam() &#123;</div><div class=\"line\">    return pathParam;</div><div class=\"line\">    &#125;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">@POST</div><div class=\"line\">public void post(@BeanParam MyBeanParam beanParam, String entity) &#123;</div><div class=\"line\">    final String pathParam = beanParam.getPathParam(); // contains injected path parameter &quot;p&quot;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">@Singleton </div><div class=\"line\">资源将是单例模式，不受请求范围管理,子资源定位方法返回一个类，这意味着运行时将托管资源的实例及其生命周期。相反，如果方法返回的是实例，那么注释将没有效果，返回的实例将被使用。</div><div class=\"line\"></div><div class=\"line\">@Path(&quot;/item&quot;)</div><div class=\"line\">public class ItemResource &#123;</div><div class=\"line\">    @Path(&quot;content&quot;)</div><div class=\"line\">    public Class&lt;ItemContentSingletonResource&gt; getItemContentResource() &#123;</div><div class=\"line\">        return ItemContentSingletonResource.class;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@Singleton</div><div class=\"line\">public class ItemContentSingletonResource &#123;</div><div class=\"line\">    // this class is managed in the singleton life cycle</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>注入规则</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">@Path(&quot;&#123;id:\\\\d+&#125;&quot;)</div><div class=\"line\">public class InjectedResource &#123;</div><div class=\"line\">    // 注入到属性</div><div class=\"line\">    @DefaultValue(&quot;q&quot;) @QueryParam(&quot;p&quot;)</div><div class=\"line\">    private String p;</div><div class=\"line\"></div><div class=\"line\">    // 注入到构造函数参数</div><div class=\"line\">    public InjectedResource(@PathParam(&quot;id&quot;) int id) &#123; ... &#125;</div><div class=\"line\"></div><div class=\"line\">    // 注入到资源参数</div><div class=\"line\">    @GET</div><div class=\"line\">    public String get(@Context UriInfo ui) &#123; ... &#125;</div><div class=\"line\"></div><div class=\"line\">    // 注入子资源方法参数</div><div class=\"line\">    @Path(&quot;sub-id&quot;)</div><div class=\"line\">    @GET</div><div class=\"line\">    public String get(@PathParam(&quot;sub-id&quot;) String id) &#123; ... &#125;</div><div class=\"line\"></div><div class=\"line\">    // 注入子资源方法参数定位器方法参数</div><div class=\"line\">    @Path(&quot;sub-id&quot;)</div><div class=\"line\">    public SubResource getSubResource(@PathParam(&quot;sub-id&quot;) String id) &#123; ... &#125;</div><div class=\"line\"></div><div class=\"line\">    // 注入 bean setter 方法</div><div class=\"line\">    @HeaderParam(&quot;X-header&quot;)</div><div class=\"line\">    public void setHeader(String header) &#123; ... &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">@Path(&quot;resource&quot;)</div><div class=\"line\">public static class SummaryOfInjectionsResource &#123;</div><div class=\"line\">    @QueryParam(&quot;query&quot;)</div><div class=\"line\">    String param; // injection into a class field 注入类的属性</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    @GET</div><div class=\"line\">    public String get(@QueryParam(&quot;query&quot;) String methodQueryParam) &#123;</div><div class=\"line\">        // injection into a resource method parameter 注入资源的方法参数</div><div class=\"line\">        return &quot;query param: &quot; + param;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    @Path(&quot;sub-resource-locator&quot;)</div><div class=\"line\">    public Class&lt;SubResource&gt; subResourceLocator(@QueryParam(&quot;query&quot;) String subResourceQueryParam) &#123;</div><div class=\"line\">        // injection into a sub resource locator parameter注入子资源定位器参数</div><div class=\"line\">        return SubResource.class;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    public SummaryOfInjectionsResource(@QueryParam(&quot;query&quot;) String constructorQueryParam) &#123;</div><div class=\"line\">        // injection into a constructor parameter注入构造器的参数</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    @Context</div><div class=\"line\">    public void setRequest(Request request) &#123;</div><div class=\"line\">        // injection into a setter method注入setter方法</div><div class=\"line\">        System.out.println(request != null);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public static class SubResource &#123;</div><div class=\"line\">    @GET</div><div class=\"line\">    public String get() &#123;</div><div class=\"line\">        return &quot;sub resource&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"应用的部署和运行时的环境\"><a href=\"#应用的部署和运行时的环境\" class=\"headerlink\" title=\"应用的部署和运行时的环境\"></a>应用的部署和运行时的环境</h1><blockquote>\n<p>ResourceConfig 简化组件的注册,如扫描根资源、类提供者提供的路径或一组包名的集合。所有 JAX-RS 组件类都会手动注册或者扫描期间找到的类都会自动添加到 getClasses 所返回的类的集合中,另外部署时可参考<a href=\"http://blog.csdn.net/cl05300629/article/details/9339205\" target=\"_blank\" rel=\"external\">Servlet容器模型（二）部署描述文件</a></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">public class MyApplication extends ResourceConfig &#123;</div><div class=\"line\">    public MyApplication() &#123;</div><div class=\"line\">        register(org.glassfish.jersey.server.filter.UriConnegFilter.class);</div><div class=\"line\">        register(org.glassfish.jersey.server.validation.ValidationFeature.class);</div><div class=\"line\">        register(org.glassfish.jersey.server.spring.SpringComponentProvider.class);</div><div class=\"line\">        register(org.glassfish.jersey.grizzly2.httpserver.GrizzlyHttpContainerProvider.class);</div><div class=\"line\">        property(ServerProperties.METAINF_SERVICES_LOOKUP_DISABLE, true);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">    &lt;servlet&gt;</div><div class=\"line\">        &lt;servlet-name&gt;Jersey Web Application&lt;/servlet-name&gt;</div><div class=\"line\">        &lt;servlet-class&gt;org.glassfish.jersey.servlet.ServletContainer&lt;/servlet-class&gt;</div><div class=\"line\">        &lt;init-param&gt;</div><div class=\"line\">            &lt;param-name&gt;javax.ws.rs.Application&lt;/param-name&gt;</div><div class=\"line\">            &lt;param-value&gt;com.gzmpc.pc.MainApp&lt;/param-value&gt;</div><div class=\"line\">        &lt;/init-param&gt;</div><div class=\"line\">        &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;</div><div class=\"line\">    &lt;/servlet&gt;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&lt;Servlet&gt;元素</div><div class=\"line\"></div><div class=\"line\">1、&lt;servlet-name&gt;元素：必须选，定义servlet名称，在DD文件中应该唯一，可通过servletConfig的getServletName()方法检索；</div><div class=\"line\"></div><div class=\"line\">2、&lt;servlet-class&gt;元素：制定servlet完整名称，需带包</div><div class=\"line\"></div><div class=\"line\">WEB-INF目录中的classes目录和lib目录中JAR文件会被自动添加到容器的类路径中，不需设置类路径</div><div class=\"line\"></div><div class=\"line\">3、&lt;init-param&gt;元素：向servlet传递初始化参数，每个&lt;int-param&gt;有仅有一组&lt;param-name&gt;和&lt;param-value&gt;子元素，可通过ServletConfig接口的getInitParameter()方法检索初始化参数；</div><div class=\"line\"></div><div class=\"line\">4、&lt;load-on-startup&gt;元素：一般的servlet是在被请求时由容器装入内存，这只一个正数则在启动时载入该servlet，值小的优先装入，负数或者没有指定，容器将根据需要决定何时装入servlet</div></pre></td></tr></table></figure>\n<blockquote>\n<p><a href=\"http://www.cnblogs.com/eggbucket/archive/2012/10/16/2726302.html\" target=\"_blank\" rel=\"external\">使用 Spring Data JPA 简化 JPA 开发</a></p>\n<p><a href=\"http://www.cnblogs.com/zhongcj/archive/2008/11/03/1325293.html\" target=\"_blank\" rel=\"external\">MIME类型大全</a></p>\n</blockquote>\n","excerpt":"","more":"<blockquote>\n<p>Jersey</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">使用URI</div><div class=\"line\">支持MIME类型的响应数据，包括JSON/XML/JPEG等</div><div class=\"line\">使用HTTP GET/POST/DELETE/PUT（对应查找、新增、删除、修改）</div><div class=\"line\">###JSR 311(JAX-RS)和Jersey Jersey是JSR 311的Java实现，可以快速的实现RESTful Web Service。Jersey的最新版本为2.6。其主要包含三个部分：</div><div class=\"line\"></div><div class=\"line\">核心服务器（Core Server）：通过提供JSR 311 中标准化的注释和API 标准化，您可以用直观的方式开发RESTful Web 服务</div><div class=\"line\">核心客户端（Core Client）：Jersey 客户端API 帮助您与REST 服务轻松通信。</div><div class=\"line\">集成（Integration）：Jersey 还提供可以轻松集成Spring、Guice、Apache Abdera 的库。</div></pre></td></tr></table></figure>\n<blockquote>\n<p>依赖包</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">commons-beanutils.jar</div><div class=\"line\">commons-lang.jar</div><div class=\"line\">commons-logging.jar</div><div class=\"line\">ezmorph-1.0.2.jar</div><div class=\"line\">javax.servlet.api.jar</div><div class=\"line\">javax.ws.rs-api : 处理媒体类型等</div><div class=\"line\">json-lib.jar</div></pre></td></tr></table></figure>\n<blockquote>\n<p>常用注解</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">@Path 定义资源的相对URI</div><div class=\"line\">@GET 意味着以下方法可以响应HTTP GET方法</div><div class=\"line\">@Produces 响应的MIME类型</div><div class=\"line\"></div><div class=\"line\">@Path(&quot;/users/&#123;username&#125;&quot;)</div><div class=\"line\">这个例子中，&#123;username&#125;即为用户输入的数据，例如用户输入Weiwei，则URL定位到 http://example.com/users/Weiwei</div><div class=\"line\">对应的组件:</div><div class=\"line\">    public String getUser(@PathParam(&quot;username&quot;) String userName) &#123;</div><div class=\"line\">        ...</div><div class=\"line\">    &#125;</div><div class=\"line\">一个@Path的内容是否以&quot;/&quot;开头都没有区别，同样是否以&quot;/&quot;结尾也没有什么区别</div><div class=\"line\">@Path 位于方法上便是 子资源 分两种方式:</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">@Produces(&quot;text/plain&quot;)</div><div class=\"line\">指定了资源所产生和发送给 客户端的MIME类型，这里指定了类型为纯文本类型。</div><div class=\"line\">@Produces 会覆盖类层面的@Produces</div><div class=\"line\">@Produces(&#123;&quot;application/xml&quot;, &quot;application/json&quot;&#125;)</div><div class=\"line\">public String doGetAsXmlOrJson() &#123;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@Consumes(&#123;&quot;application/xml&quot;, &quot;application/json&quot;&#125;)</div><div class=\"line\">指定所消费的类型的格式，这里指定为XML和JSON，即可以 接收 这种类型格式的文件作为输入。</div><div class=\"line\"></div><div class=\"line\">所有媒体类型(*/*)byte[]</div><div class=\"line\">java.lang.String</div><div class=\"line\">java.io.Reader (inbound only)</div><div class=\"line\">java.io.File</div><div class=\"line\">javax.activation.DataSource</div><div class=\"line\">javax.ws.rs.core.StreamingOutput (outbound only)</div><div class=\"line\"></div><div class=\"line\">XML 媒体类型 (text/xml, application/xml and application/...+xml)</div><div class=\"line\">javax.xml.transform.Source</div><div class=\"line\">javax.xml.bind.JAXBElement</div><div class=\"line\">应用了 JAXB 类的应用 (使用了 @XmlRootElement 或者 @XmlType 的类型)</div><div class=\"line\"></div><div class=\"line\">Form 表单内容(application/x-www-form-urlencoded)</div><div class=\"line\">MultivaluedMap</div><div class=\"line\"></div><div class=\"line\">纯文本 (text/plain)java.lang.Boolean</div><div class=\"line\">java.lang.Character</div><div class=\"line\">java.lang.Number</div><div class=\"line\"></div><div class=\"line\">@FormParam稍有特殊，因为它提取信息，先是请求所表示的MIME媒体类型为 application/x-www-form-urlencoded</div><div class=\"line\">，并且符合指定的 HTML 编码的形式，正如这里所描述的。此参数提取对于 HTML 表单请求是非常有用的</div><div class=\"line\">@FormParam 注释是特别的，仅可利用资源和子资源的方法。这是因为它从请求实体中提取信息</div><div class=\"line\"></div><div class=\"line\">@MatrixParam 从 URL 路径提取信息. </div><div class=\"line\"></div><div class=\"line\">@HeaderParam 从 HTTP 头部提取信息。 </div><div class=\"line\"></div><div class=\"line\">@CookieParam从关联在 HTTP 头部的 cookies 里提取信息。</div><div class=\"line\"></div><div class=\"line\">@BeanParam 用法  , 相当于把参数放进去 </div><div class=\"line\"></div><div class=\"line\">public class MyBeanParam &#123;</div><div class=\"line\">    @PathParam(&quot;p&quot;)</div><div class=\"line\">    private String pathParam;</div><div class=\"line\"></div><div class=\"line\">    @MatrixParam(&quot;m&quot;)</div><div class=\"line\">    @Encoded</div><div class=\"line\">    @DefaultValue(&quot;default&quot;)</div><div class=\"line\">    private String matrixParam;</div><div class=\"line\"></div><div class=\"line\">    @HeaderParam(&quot;header&quot;)</div><div class=\"line\">    private String headerParam;</div><div class=\"line\"></div><div class=\"line\">    private String queryParam;</div><div class=\"line\"></div><div class=\"line\">    public MyBeanParam(@QueryParam(&quot;q&quot;) String queryParam) &#123;</div><div class=\"line\">    this.queryParam = queryParam;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    public String getPathParam() &#123;</div><div class=\"line\">    return pathParam;</div><div class=\"line\">    &#125;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">@POST</div><div class=\"line\">public void post(@BeanParam MyBeanParam beanParam, String entity) &#123;</div><div class=\"line\">    final String pathParam = beanParam.getPathParam(); // contains injected path parameter &quot;p&quot;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">@Singleton </div><div class=\"line\">资源将是单例模式，不受请求范围管理,子资源定位方法返回一个类，这意味着运行时将托管资源的实例及其生命周期。相反，如果方法返回的是实例，那么注释将没有效果，返回的实例将被使用。</div><div class=\"line\"></div><div class=\"line\">@Path(&quot;/item&quot;)</div><div class=\"line\">public class ItemResource &#123;</div><div class=\"line\">    @Path(&quot;content&quot;)</div><div class=\"line\">    public Class&lt;ItemContentSingletonResource&gt; getItemContentResource() &#123;</div><div class=\"line\">        return ItemContentSingletonResource.class;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@Singleton</div><div class=\"line\">public class ItemContentSingletonResource &#123;</div><div class=\"line\">    // this class is managed in the singleton life cycle</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>注入规则</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">@Path(&quot;&#123;id:\\\\d+&#125;&quot;)</div><div class=\"line\">public class InjectedResource &#123;</div><div class=\"line\">    // 注入到属性</div><div class=\"line\">    @DefaultValue(&quot;q&quot;) @QueryParam(&quot;p&quot;)</div><div class=\"line\">    private String p;</div><div class=\"line\"></div><div class=\"line\">    // 注入到构造函数参数</div><div class=\"line\">    public InjectedResource(@PathParam(&quot;id&quot;) int id) &#123; ... &#125;</div><div class=\"line\"></div><div class=\"line\">    // 注入到资源参数</div><div class=\"line\">    @GET</div><div class=\"line\">    public String get(@Context UriInfo ui) &#123; ... &#125;</div><div class=\"line\"></div><div class=\"line\">    // 注入子资源方法参数</div><div class=\"line\">    @Path(&quot;sub-id&quot;)</div><div class=\"line\">    @GET</div><div class=\"line\">    public String get(@PathParam(&quot;sub-id&quot;) String id) &#123; ... &#125;</div><div class=\"line\"></div><div class=\"line\">    // 注入子资源方法参数定位器方法参数</div><div class=\"line\">    @Path(&quot;sub-id&quot;)</div><div class=\"line\">    public SubResource getSubResource(@PathParam(&quot;sub-id&quot;) String id) &#123; ... &#125;</div><div class=\"line\"></div><div class=\"line\">    // 注入 bean setter 方法</div><div class=\"line\">    @HeaderParam(&quot;X-header&quot;)</div><div class=\"line\">    public void setHeader(String header) &#123; ... &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">@Path(&quot;resource&quot;)</div><div class=\"line\">public static class SummaryOfInjectionsResource &#123;</div><div class=\"line\">    @QueryParam(&quot;query&quot;)</div><div class=\"line\">    String param; // injection into a class field 注入类的属性</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    @GET</div><div class=\"line\">    public String get(@QueryParam(&quot;query&quot;) String methodQueryParam) &#123;</div><div class=\"line\">        // injection into a resource method parameter 注入资源的方法参数</div><div class=\"line\">        return &quot;query param: &quot; + param;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    @Path(&quot;sub-resource-locator&quot;)</div><div class=\"line\">    public Class&lt;SubResource&gt; subResourceLocator(@QueryParam(&quot;query&quot;) String subResourceQueryParam) &#123;</div><div class=\"line\">        // injection into a sub resource locator parameter注入子资源定位器参数</div><div class=\"line\">        return SubResource.class;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    public SummaryOfInjectionsResource(@QueryParam(&quot;query&quot;) String constructorQueryParam) &#123;</div><div class=\"line\">        // injection into a constructor parameter注入构造器的参数</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    @Context</div><div class=\"line\">    public void setRequest(Request request) &#123;</div><div class=\"line\">        // injection into a setter method注入setter方法</div><div class=\"line\">        System.out.println(request != null);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public static class SubResource &#123;</div><div class=\"line\">    @GET</div><div class=\"line\">    public String get() &#123;</div><div class=\"line\">        return &quot;sub resource&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"应用的部署和运行时的环境\"><a href=\"#应用的部署和运行时的环境\" class=\"headerlink\" title=\"应用的部署和运行时的环境\"></a>应用的部署和运行时的环境</h1><blockquote>\n<p>ResourceConfig 简化组件的注册,如扫描根资源、类提供者提供的路径或一组包名的集合。所有 JAX-RS 组件类都会手动注册或者扫描期间找到的类都会自动添加到 getClasses 所返回的类的集合中,另外部署时可参考<a href=\"http://blog.csdn.net/cl05300629/article/details/9339205\">Servlet容器模型（二）部署描述文件</a></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">public class MyApplication extends ResourceConfig &#123;</div><div class=\"line\">    public MyApplication() &#123;</div><div class=\"line\">        register(org.glassfish.jersey.server.filter.UriConnegFilter.class);</div><div class=\"line\">        register(org.glassfish.jersey.server.validation.ValidationFeature.class);</div><div class=\"line\">        register(org.glassfish.jersey.server.spring.SpringComponentProvider.class);</div><div class=\"line\">        register(org.glassfish.jersey.grizzly2.httpserver.GrizzlyHttpContainerProvider.class);</div><div class=\"line\">        property(ServerProperties.METAINF_SERVICES_LOOKUP_DISABLE, true);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">    &lt;servlet&gt;</div><div class=\"line\">        &lt;servlet-name&gt;Jersey Web Application&lt;/servlet-name&gt;</div><div class=\"line\">        &lt;servlet-class&gt;org.glassfish.jersey.servlet.ServletContainer&lt;/servlet-class&gt;</div><div class=\"line\">        &lt;init-param&gt;</div><div class=\"line\">            &lt;param-name&gt;javax.ws.rs.Application&lt;/param-name&gt;</div><div class=\"line\">            &lt;param-value&gt;com.gzmpc.pc.MainApp&lt;/param-value&gt;</div><div class=\"line\">        &lt;/init-param&gt;</div><div class=\"line\">        &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;</div><div class=\"line\">    &lt;/servlet&gt;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&lt;Servlet&gt;元素</div><div class=\"line\"></div><div class=\"line\">1、&lt;servlet-name&gt;元素：必须选，定义servlet名称，在DD文件中应该唯一，可通过servletConfig的getServletName()方法检索；</div><div class=\"line\"></div><div class=\"line\">2、&lt;servlet-class&gt;元素：制定servlet完整名称，需带包</div><div class=\"line\"></div><div class=\"line\">WEB-INF目录中的classes目录和lib目录中JAR文件会被自动添加到容器的类路径中，不需设置类路径</div><div class=\"line\"></div><div class=\"line\">3、&lt;init-param&gt;元素：向servlet传递初始化参数，每个&lt;int-param&gt;有仅有一组&lt;param-name&gt;和&lt;param-value&gt;子元素，可通过ServletConfig接口的getInitParameter()方法检索初始化参数；</div><div class=\"line\"></div><div class=\"line\">4、&lt;load-on-startup&gt;元素：一般的servlet是在被请求时由容器装入内存，这只一个正数则在启动时载入该servlet，值小的优先装入，负数或者没有指定，容器将根据需要决定何时装入servlet</div></pre></td></tr></table></figure>\n<blockquote>\n<p><a href=\"http://www.cnblogs.com/eggbucket/archive/2012/10/16/2726302.html\">使用 Spring Data JPA 简化 JPA 开发</a></p>\n<p><a href=\"http://www.cnblogs.com/zhongcj/archive/2008/11/03/1325293.html\">MIME类型大全</a></p>\n</blockquote>\n"},{"_content":"# 感觉有点类似自定义指定\n\n<div ng-include=\"'myUsers_List.htm'\"></div>\n<div ng-include=\"'myUsers_Form.htm'\"></div>\n","source":"_posts/angular-包含.md","raw":"# 感觉有点类似自定义指定\n\n<div ng-include=\"'myUsers_List.htm'\"></div>\n<div ng-include=\"'myUsers_Form.htm'\"></div>\n","slug":"angular-包含","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ciye48hj10000ch0ocy4ii6cp","content":"<h1 id=\"感觉有点类似自定义指定\"><a href=\"#感觉有点类似自定义指定\" class=\"headerlink\" title=\"感觉有点类似自定义指定\"></a>感觉有点类似自定义指定</h1><div ng-include=\"'myUsers_List.htm'\"></div><br><div ng-include=\"'myUsers_Form.htm'\"></div>\n","excerpt":"","more":"<h1 id=\"感觉有点类似自定义指定\"><a href=\"#感觉有点类似自定义指定\" class=\"headerlink\" title=\"感觉有点类似自定义指定\"></a>感觉有点类似自定义指定</h1><div ng-include=\"'myUsers_List.htm'\"></div><br><div ng-include=\"'myUsers_Form.htm'\"></div>\n"},{"_content":"# input 的监听事件 ng-change\n\n<form ng-controller=\"StartUpController\">\n     Starting : <input ng-change=\"computeNeeded()\" ng-model=\"funding.startingEstimate\">\n     Recommendation: {{funding.needed}}\n</form>\n\n\n```\nfunction StartUpController($scope) {\n        $scope.funding = { startingEstimate : 0};\n\n        $scope.computeNeeded = function () {\n            $scope.funding.needed = $scope.funding.startingEstimate * 10;\n        }\n    }\n\n```\n\n\n# 检测数据是否变化\n\n```\n$scope.$watch('funding.startingEstimate', computeNeeded);\n```\n","source":"_posts/angular-表单输入.md","raw":"# input 的监听事件 ng-change\n\n<form ng-controller=\"StartUpController\">\n     Starting : <input ng-change=\"computeNeeded()\" ng-model=\"funding.startingEstimate\">\n     Recommendation: {{funding.needed}}\n</form>\n\n\n```\nfunction StartUpController($scope) {\n        $scope.funding = { startingEstimate : 0};\n\n        $scope.computeNeeded = function () {\n            $scope.funding.needed = $scope.funding.startingEstimate * 10;\n        }\n    }\n\n```\n\n\n# 检测数据是否变化\n\n```\n$scope.$watch('funding.startingEstimate', computeNeeded);\n```\n","slug":"angular-表单输入","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ciye48hj40001ch0ox0ed0jiy","content":"<h1 id=\"input-的监听事件-ng-change\"><a href=\"#input-的监听事件-ng-change\" class=\"headerlink\" title=\"input 的监听事件 ng-change\"></a>input 的监听事件 ng-change</h1><form ng-controller=\"StartUpController\"><br>     Starting : <input ng-change=\"computeNeeded()\" ng-model=\"funding.startingEstimate\"><br>     Recommendation: <br></form>\n\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">function StartUpController($scope) &#123;</div><div class=\"line\">        $scope.funding = &#123; startingEstimate : 0&#125;;</div><div class=\"line\"></div><div class=\"line\">        $scope.computeNeeded = function () &#123;</div><div class=\"line\">            $scope.funding.needed = $scope.funding.startingEstimate * 10;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h1 id=\"检测数据是否变化\"><a href=\"#检测数据是否变化\" class=\"headerlink\" title=\"检测数据是否变化\"></a>检测数据是否变化</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$scope.$watch(&apos;funding.startingEstimate&apos;, computeNeeded);</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"input-的监听事件-ng-change\"><a href=\"#input-的监听事件-ng-change\" class=\"headerlink\" title=\"input 的监听事件 ng-change\"></a>input 的监听事件 ng-change</h1><form ng-controller=\"StartUpController\"><br>     Starting : <input ng-change=\"computeNeeded()\" ng-model=\"funding.startingEstimate\"><br>     Recommendation: <br></form>\n\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">function StartUpController($scope) &#123;</div><div class=\"line\">        $scope.funding = &#123; startingEstimate : 0&#125;;</div><div class=\"line\"></div><div class=\"line\">        $scope.computeNeeded = function () &#123;</div><div class=\"line\">            $scope.funding.needed = $scope.funding.startingEstimate * 10;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h1 id=\"检测数据是否变化\"><a href=\"#检测数据是否变化\" class=\"headerlink\" title=\"检测数据是否变化\"></a>检测数据是否变化</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$scope.$watch(&apos;funding.startingEstimate&apos;, computeNeeded);</div></pre></td></tr></table></figure>\n"},{"_content":"# 必须 name 和 ng-controller \n# 另外模板中的name便是$scope的层叠组件\n\n例子一:\n\n```\n<form name=\"test_form\" ng-controller=\"TestCtrl\">\n  <input type=\"text\" name=\"a\" required ng-model=\"a\"  />\n  <span ng-click=\"see()\">{{ test_form.$valid }}</span>\n</form>\n\n\nangular.module('app', [], angular.noop)\n.controller('TestCtrl', function($scope){\n  $scope.see = function(){\n    console.log($scope.test_form);\n    console.log($scope.test_form.a);\n  }\n});\n```\n\nform 这个标签本身有一些动态类可以使用：\n\n```\nng-valid 当表单验证通过时的设置\nng-invalid 当表单验证失败时的设置\nng-pristine 表单的未被动之前拥有\nng-dirty 表单被动过之后拥有\n```\n\nform 对象的属性有：\n\n```\n$pristine 表单是否未被动过\n$dirty 表单是否被动过\n$valid 表单是否验证通过\n$invalid 表单是否验证失败\n$error 表单的验证错误\n```\n\n```\n<form name=\"test_form\" ng-controller=\"TestCtrl\">\n  <input type=\"text\" name=\"a\" required ng-model=\"a\"  />\n  <input type=\"text\" name=\"b\" required ng-model=\"b\" ng-minlength=\"2\" />\n  <span ng-click=\"see()\">{{ test_form.$error }}</span>\n</form>\n\n\nangular.module('app', [], angular.noop)\n.controller('TestCtrl', function($scope){\n  $scope.see = function(){\n    console.log($scope.test_form.$error);\n  }\n});\n```\n\ninput 控件的相关可用属性为：\n\n```\nname 名字\nng-model 绑定的数据\nrequired 是否必填\nng-required 是否必填\nng-minlength 最小长度\nng-maxlength 最大长度\nng-pattern 匹配模式\nng-change 值变化时的回调\n```\n\nselect \n\n```\n<form name=\"test_form\" ng-controller=\"TestCtrl\">\n  <input type=\"checkbox\" name=\"a\" ng-model=\"a\" ng-true-value=\"AA\" ng-false-value=\"BB\" />\n  <span>{{ a }}</span>\n</form>\n\nvar TestCtrl = function($scope){\n  $scope.a = 'AA';\n}\n```\n\nradio\n\n```\n<form name=\"test_form\" ng-controller=\"TestCtrl\">\n  <input type=\"radio\" name=\"a\" ng-model=\"a\" value=\"AA\" />\n  <input type=\"radio\" name=\"a\" ng-model=\"a\" value=\"BB\" />\n  <span>{{ a }}</span>\n</form>\n```\n","source":"_posts/angular-表单.md","raw":"# 必须 name 和 ng-controller \n# 另外模板中的name便是$scope的层叠组件\n\n例子一:\n\n```\n<form name=\"test_form\" ng-controller=\"TestCtrl\">\n  <input type=\"text\" name=\"a\" required ng-model=\"a\"  />\n  <span ng-click=\"see()\">{{ test_form.$valid }}</span>\n</form>\n\n\nangular.module('app', [], angular.noop)\n.controller('TestCtrl', function($scope){\n  $scope.see = function(){\n    console.log($scope.test_form);\n    console.log($scope.test_form.a);\n  }\n});\n```\n\nform 这个标签本身有一些动态类可以使用：\n\n```\nng-valid 当表单验证通过时的设置\nng-invalid 当表单验证失败时的设置\nng-pristine 表单的未被动之前拥有\nng-dirty 表单被动过之后拥有\n```\n\nform 对象的属性有：\n\n```\n$pristine 表单是否未被动过\n$dirty 表单是否被动过\n$valid 表单是否验证通过\n$invalid 表单是否验证失败\n$error 表单的验证错误\n```\n\n```\n<form name=\"test_form\" ng-controller=\"TestCtrl\">\n  <input type=\"text\" name=\"a\" required ng-model=\"a\"  />\n  <input type=\"text\" name=\"b\" required ng-model=\"b\" ng-minlength=\"2\" />\n  <span ng-click=\"see()\">{{ test_form.$error }}</span>\n</form>\n\n\nangular.module('app', [], angular.noop)\n.controller('TestCtrl', function($scope){\n  $scope.see = function(){\n    console.log($scope.test_form.$error);\n  }\n});\n```\n\ninput 控件的相关可用属性为：\n\n```\nname 名字\nng-model 绑定的数据\nrequired 是否必填\nng-required 是否必填\nng-minlength 最小长度\nng-maxlength 最大长度\nng-pattern 匹配模式\nng-change 值变化时的回调\n```\n\nselect \n\n```\n<form name=\"test_form\" ng-controller=\"TestCtrl\">\n  <input type=\"checkbox\" name=\"a\" ng-model=\"a\" ng-true-value=\"AA\" ng-false-value=\"BB\" />\n  <span>{{ a }}</span>\n</form>\n\nvar TestCtrl = function($scope){\n  $scope.a = 'AA';\n}\n```\n\nradio\n\n```\n<form name=\"test_form\" ng-controller=\"TestCtrl\">\n  <input type=\"radio\" name=\"a\" ng-model=\"a\" value=\"AA\" />\n  <input type=\"radio\" name=\"a\" ng-model=\"a\" value=\"BB\" />\n  <span>{{ a }}</span>\n</form>\n```\n","slug":"angular-表单","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ciye48hj90002ch0oufbptl2e","content":"<h1 id=\"必须-name-和-ng-controller\"><a href=\"#必须-name-和-ng-controller\" class=\"headerlink\" title=\"必须 name 和 ng-controller\"></a>必须 name 和 ng-controller</h1><h1 id=\"另外模板中的name便是-scope的层叠组件\"><a href=\"#另外模板中的name便是-scope的层叠组件\" class=\"headerlink\" title=\"另外模板中的name便是$scope的层叠组件\"></a>另外模板中的name便是$scope的层叠组件</h1><p>例子一:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;form name=&quot;test_form&quot; ng-controller=&quot;TestCtrl&quot;&gt;</div><div class=\"line\">  &lt;input type=&quot;text&quot; name=&quot;a&quot; required ng-model=&quot;a&quot;  /&gt;</div><div class=\"line\">  &lt;span ng-click=&quot;see()&quot;&gt;&#123;&#123; test_form.$valid &#125;&#125;&lt;/span&gt;</div><div class=\"line\">&lt;/form&gt;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">angular.module(&apos;app&apos;, [], angular.noop)</div><div class=\"line\">.controller(&apos;TestCtrl&apos;, function($scope)&#123;</div><div class=\"line\">  $scope.see = function()&#123;</div><div class=\"line\">    console.log($scope.test_form);</div><div class=\"line\">    console.log($scope.test_form.a);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>form 这个标签本身有一些动态类可以使用：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">ng-valid 当表单验证通过时的设置</div><div class=\"line\">ng-invalid 当表单验证失败时的设置</div><div class=\"line\">ng-pristine 表单的未被动之前拥有</div><div class=\"line\">ng-dirty 表单被动过之后拥有</div></pre></td></tr></table></figure>\n<p>form 对象的属性有：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$pristine 表单是否未被动过</div><div class=\"line\">$dirty 表单是否被动过</div><div class=\"line\">$valid 表单是否验证通过</div><div class=\"line\">$invalid 表单是否验证失败</div><div class=\"line\">$error 表单的验证错误</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;form name=&quot;test_form&quot; ng-controller=&quot;TestCtrl&quot;&gt;</div><div class=\"line\">  &lt;input type=&quot;text&quot; name=&quot;a&quot; required ng-model=&quot;a&quot;  /&gt;</div><div class=\"line\">  &lt;input type=&quot;text&quot; name=&quot;b&quot; required ng-model=&quot;b&quot; ng-minlength=&quot;2&quot; /&gt;</div><div class=\"line\">  &lt;span ng-click=&quot;see()&quot;&gt;&#123;&#123; test_form.$error &#125;&#125;&lt;/span&gt;</div><div class=\"line\">&lt;/form&gt;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">angular.module(&apos;app&apos;, [], angular.noop)</div><div class=\"line\">.controller(&apos;TestCtrl&apos;, function($scope)&#123;</div><div class=\"line\">  $scope.see = function()&#123;</div><div class=\"line\">    console.log($scope.test_form.$error);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>input 控件的相关可用属性为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">name 名字</div><div class=\"line\">ng-model 绑定的数据</div><div class=\"line\">required 是否必填</div><div class=\"line\">ng-required 是否必填</div><div class=\"line\">ng-minlength 最小长度</div><div class=\"line\">ng-maxlength 最大长度</div><div class=\"line\">ng-pattern 匹配模式</div><div class=\"line\">ng-change 值变化时的回调</div></pre></td></tr></table></figure>\n<p>select </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;form name=&quot;test_form&quot; ng-controller=&quot;TestCtrl&quot;&gt;</div><div class=\"line\">  &lt;input type=&quot;checkbox&quot; name=&quot;a&quot; ng-model=&quot;a&quot; ng-true-value=&quot;AA&quot; ng-false-value=&quot;BB&quot; /&gt;</div><div class=\"line\">  &lt;span&gt;&#123;&#123; a &#125;&#125;&lt;/span&gt;</div><div class=\"line\">&lt;/form&gt;</div><div class=\"line\"></div><div class=\"line\">var TestCtrl = function($scope)&#123;</div><div class=\"line\">  $scope.a = &apos;AA&apos;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>radio</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;form name=&quot;test_form&quot; ng-controller=&quot;TestCtrl&quot;&gt;</div><div class=\"line\">  &lt;input type=&quot;radio&quot; name=&quot;a&quot; ng-model=&quot;a&quot; value=&quot;AA&quot; /&gt;</div><div class=\"line\">  &lt;input type=&quot;radio&quot; name=&quot;a&quot; ng-model=&quot;a&quot; value=&quot;BB&quot; /&gt;</div><div class=\"line\">  &lt;span&gt;&#123;&#123; a &#125;&#125;&lt;/span&gt;</div><div class=\"line\">&lt;/form&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"必须-name-和-ng-controller\"><a href=\"#必须-name-和-ng-controller\" class=\"headerlink\" title=\"必须 name 和 ng-controller\"></a>必须 name 和 ng-controller</h1><h1 id=\"另外模板中的name便是-scope的层叠组件\"><a href=\"#另外模板中的name便是-scope的层叠组件\" class=\"headerlink\" title=\"另外模板中的name便是$scope的层叠组件\"></a>另外模板中的name便是$scope的层叠组件</h1><p>例子一:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;form name=&quot;test_form&quot; ng-controller=&quot;TestCtrl&quot;&gt;</div><div class=\"line\">  &lt;input type=&quot;text&quot; name=&quot;a&quot; required ng-model=&quot;a&quot;  /&gt;</div><div class=\"line\">  &lt;span ng-click=&quot;see()&quot;&gt;&#123;&#123; test_form.$valid &#125;&#125;&lt;/span&gt;</div><div class=\"line\">&lt;/form&gt;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">angular.module(&apos;app&apos;, [], angular.noop)</div><div class=\"line\">.controller(&apos;TestCtrl&apos;, function($scope)&#123;</div><div class=\"line\">  $scope.see = function()&#123;</div><div class=\"line\">    console.log($scope.test_form);</div><div class=\"line\">    console.log($scope.test_form.a);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>form 这个标签本身有一些动态类可以使用：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">ng-valid 当表单验证通过时的设置</div><div class=\"line\">ng-invalid 当表单验证失败时的设置</div><div class=\"line\">ng-pristine 表单的未被动之前拥有</div><div class=\"line\">ng-dirty 表单被动过之后拥有</div></pre></td></tr></table></figure>\n<p>form 对象的属性有：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$pristine 表单是否未被动过</div><div class=\"line\">$dirty 表单是否被动过</div><div class=\"line\">$valid 表单是否验证通过</div><div class=\"line\">$invalid 表单是否验证失败</div><div class=\"line\">$error 表单的验证错误</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;form name=&quot;test_form&quot; ng-controller=&quot;TestCtrl&quot;&gt;</div><div class=\"line\">  &lt;input type=&quot;text&quot; name=&quot;a&quot; required ng-model=&quot;a&quot;  /&gt;</div><div class=\"line\">  &lt;input type=&quot;text&quot; name=&quot;b&quot; required ng-model=&quot;b&quot; ng-minlength=&quot;2&quot; /&gt;</div><div class=\"line\">  &lt;span ng-click=&quot;see()&quot;&gt;&#123;&#123; test_form.$error &#125;&#125;&lt;/span&gt;</div><div class=\"line\">&lt;/form&gt;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">angular.module(&apos;app&apos;, [], angular.noop)</div><div class=\"line\">.controller(&apos;TestCtrl&apos;, function($scope)&#123;</div><div class=\"line\">  $scope.see = function()&#123;</div><div class=\"line\">    console.log($scope.test_form.$error);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>input 控件的相关可用属性为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">name 名字</div><div class=\"line\">ng-model 绑定的数据</div><div class=\"line\">required 是否必填</div><div class=\"line\">ng-required 是否必填</div><div class=\"line\">ng-minlength 最小长度</div><div class=\"line\">ng-maxlength 最大长度</div><div class=\"line\">ng-pattern 匹配模式</div><div class=\"line\">ng-change 值变化时的回调</div></pre></td></tr></table></figure>\n<p>select </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;form name=&quot;test_form&quot; ng-controller=&quot;TestCtrl&quot;&gt;</div><div class=\"line\">  &lt;input type=&quot;checkbox&quot; name=&quot;a&quot; ng-model=&quot;a&quot; ng-true-value=&quot;AA&quot; ng-false-value=&quot;BB&quot; /&gt;</div><div class=\"line\">  &lt;span&gt;&#123;&#123; a &#125;&#125;&lt;/span&gt;</div><div class=\"line\">&lt;/form&gt;</div><div class=\"line\"></div><div class=\"line\">var TestCtrl = function($scope)&#123;</div><div class=\"line\">  $scope.a = &apos;AA&apos;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>radio</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;form name=&quot;test_form&quot; ng-controller=&quot;TestCtrl&quot;&gt;</div><div class=\"line\">  &lt;input type=&quot;radio&quot; name=&quot;a&quot; ng-model=&quot;a&quot; value=&quot;AA&quot; /&gt;</div><div class=\"line\">  &lt;input type=&quot;radio&quot; name=&quot;a&quot; ng-model=&quot;a&quot; value=&quot;BB&quot; /&gt;</div><div class=\"line\">  &lt;span&gt;&#123;&#123; a &#125;&#125;&lt;/span&gt;</div><div class=\"line\">&lt;/form&gt;</div></pre></td></tr></table></figure>\n"},{"_content":"# 检测是否内嵌表达式=>watches,在digest循环中更新\n$interpolate\n<a ng-href=\"img/{{username}}.jpg\">Hello {{username}}!</a>\n\n# 优先返回对象而不是函数\n\n# 优先保留你自己的指令作为前缀\n\n## 模板扩展的指令:但是标签名是无效的\n\n对应的html:\n```\n<div my-customer></div>\n\n.directive('myCustomer', function() {\n    return {\n      template: 'Name: {{customer.name}} Address: {{customer.address}}'\n    };\n });\n ```\n\n若是大量的模板的:\n```\n<div my-customer></div>\n\n.directive('myCustomer', function() {\n    return {\n      restrict: 'E',\n      templateUrl: 'my-customer.html'\n    };\n });\n ```\n\n// my-customer.html\nName: {{customer.name}} Address: {{customer.address}}\n","source":"_posts/angular-创建自定义指令.md","raw":"# 检测是否内嵌表达式=>watches,在digest循环中更新\n$interpolate\n<a ng-href=\"img/{{username}}.jpg\">Hello {{username}}!</a>\n\n# 优先返回对象而不是函数\n\n# 优先保留你自己的指令作为前缀\n\n## 模板扩展的指令:但是标签名是无效的\n\n对应的html:\n```\n<div my-customer></div>\n\n.directive('myCustomer', function() {\n    return {\n      template: 'Name: {{customer.name}} Address: {{customer.address}}'\n    };\n });\n ```\n\n若是大量的模板的:\n```\n<div my-customer></div>\n\n.directive('myCustomer', function() {\n    return {\n      restrict: 'E',\n      templateUrl: 'my-customer.html'\n    };\n });\n ```\n\n// my-customer.html\nName: {{customer.name}} Address: {{customer.address}}\n","slug":"angular-创建自定义指令","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ciye48hjb0003ch0ohyjt3tro","content":"<h1 id=\"检测是否内嵌表达式-gt-watches-在digest循环中更新\"><a href=\"#检测是否内嵌表达式-gt-watches-在digest循环中更新\" class=\"headerlink\" title=\"检测是否内嵌表达式=&gt;watches,在digest循环中更新\"></a>检测是否内嵌表达式=&gt;watches,在digest循环中更新</h1><p>$interpolate<br><a ng-href=\"img/.jpg\">Hello !</a></p>\n<h1 id=\"优先返回对象而不是函数\"><a href=\"#优先返回对象而不是函数\" class=\"headerlink\" title=\"优先返回对象而不是函数\"></a>优先返回对象而不是函数</h1><h1 id=\"优先保留你自己的指令作为前缀\"><a href=\"#优先保留你自己的指令作为前缀\" class=\"headerlink\" title=\"优先保留你自己的指令作为前缀\"></a>优先保留你自己的指令作为前缀</h1><h2 id=\"模板扩展的指令-但是标签名是无效的\"><a href=\"#模板扩展的指令-但是标签名是无效的\" class=\"headerlink\" title=\"模板扩展的指令:但是标签名是无效的\"></a>模板扩展的指令:但是标签名是无效的</h2><p>对应的html:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div my-customer&gt;&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">.directive(&apos;myCustomer&apos;, function() &#123;</div><div class=\"line\">    return &#123;</div><div class=\"line\">      template: &apos;Name: &#123;&#123;customer.name&#125;&#125; Address: &#123;&#123;customer.address&#125;&#125;&apos;</div><div class=\"line\">    &#125;;</div><div class=\"line\"> &#125;);</div></pre></td></tr></table></figure></p>\n<p>若是大量的模板的:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div my-customer&gt;&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">.directive(&apos;myCustomer&apos;, function() &#123;</div><div class=\"line\">    return &#123;</div><div class=\"line\">      restrict: &apos;E&apos;,</div><div class=\"line\">      templateUrl: &apos;my-customer.html&apos;</div><div class=\"line\">    &#125;;</div><div class=\"line\"> &#125;);</div></pre></td></tr></table></figure></p>\n<p>// my-customer.html<br>Name:  Address: </p>\n","excerpt":"","more":"<h1 id=\"检测是否内嵌表达式-gt-watches-在digest循环中更新\"><a href=\"#检测是否内嵌表达式-gt-watches-在digest循环中更新\" class=\"headerlink\" title=\"检测是否内嵌表达式=&gt;watches,在digest循环中更新\"></a>检测是否内嵌表达式=&gt;watches,在digest循环中更新</h1><p>$interpolate<br><a ng-href=\"img/.jpg\">Hello !</a></p>\n<h1 id=\"优先返回对象而不是函数\"><a href=\"#优先返回对象而不是函数\" class=\"headerlink\" title=\"优先返回对象而不是函数\"></a>优先返回对象而不是函数</h1><h1 id=\"优先保留你自己的指令作为前缀\"><a href=\"#优先保留你自己的指令作为前缀\" class=\"headerlink\" title=\"优先保留你自己的指令作为前缀\"></a>优先保留你自己的指令作为前缀</h1><h2 id=\"模板扩展的指令-但是标签名是无效的\"><a href=\"#模板扩展的指令-但是标签名是无效的\" class=\"headerlink\" title=\"模板扩展的指令:但是标签名是无效的\"></a>模板扩展的指令:但是标签名是无效的</h2><p>对应的html:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div my-customer&gt;&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">.directive(&apos;myCustomer&apos;, function() &#123;</div><div class=\"line\">    return &#123;</div><div class=\"line\">      template: &apos;Name: &#123;&#123;customer.name&#125;&#125; Address: &#123;&#123;customer.address&#125;&#125;&apos;</div><div class=\"line\">    &#125;;</div><div class=\"line\"> &#125;);</div></pre></td></tr></table></figure></p>\n<p>若是大量的模板的:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div my-customer&gt;&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">.directive(&apos;myCustomer&apos;, function() &#123;</div><div class=\"line\">    return &#123;</div><div class=\"line\">      restrict: &apos;E&apos;,</div><div class=\"line\">      templateUrl: &apos;my-customer.html&apos;</div><div class=\"line\">    &#125;;</div><div class=\"line\"> &#125;);</div></pre></td></tr></table></figure></p>\n<p>// my-customer.html<br>Name:  Address: </p>\n"},{"_content":"```\n<li ng-repeat=\"tag in tags\">\n        <span ng-click=\"onSelect(tag)\">{{tag.name}}</span>\n</li>\n\n\n\n        $scope.onSelect=function(tag){\n            $scope.selectedTag=tag.name;//将单击的值赋给$scope.selectedTag\n            console.log(tag.name);\n            console.log($scope.selectedTag)\n        }\n```\n","source":"_posts/angular-获取列表中的值.md","raw":"```\n<li ng-repeat=\"tag in tags\">\n        <span ng-click=\"onSelect(tag)\">{{tag.name}}</span>\n</li>\n\n\n\n        $scope.onSelect=function(tag){\n            $scope.selectedTag=tag.name;//将单击的值赋给$scope.selectedTag\n            console.log(tag.name);\n            console.log($scope.selectedTag)\n        }\n```\n","slug":"angular-获取列表中的值","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ciye48hjd0004ch0oijhi6xgt","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;li ng-repeat=&quot;tag in tags&quot;&gt;</div><div class=\"line\">        &lt;span ng-click=&quot;onSelect(tag)&quot;&gt;&#123;&#123;tag.name&#125;&#125;&lt;/span&gt;</div><div class=\"line\">&lt;/li&gt;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        $scope.onSelect=function(tag)&#123;</div><div class=\"line\">            $scope.selectedTag=tag.name;//将单击的值赋给$scope.selectedTag</div><div class=\"line\">            console.log(tag.name);</div><div class=\"line\">            console.log($scope.selectedTag)</div><div class=\"line\">        &#125;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;li ng-repeat=&quot;tag in tags&quot;&gt;</div><div class=\"line\">        &lt;span ng-click=&quot;onSelect(tag)&quot;&gt;&#123;&#123;tag.name&#125;&#125;&lt;/span&gt;</div><div class=\"line\">&lt;/li&gt;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        $scope.onSelect=function(tag)&#123;</div><div class=\"line\">            $scope.selectedTag=tag.name;//将单击的值赋给$scope.selectedTag</div><div class=\"line\">            console.log(tag.name);</div><div class=\"line\">            console.log($scope.selectedTag)</div><div class=\"line\">        &#125;</div></pre></td></tr></table></figure>\n"},{"_content":"# 基于原型继承\n\n# 父类的更改会触发所有的子类,子类的修改只会自身\n\n```\n<div ng-controller=\"Sandcrawler\" ng-app>\n    <p>Location: {{location}}</p>\n    <button ng-click=\"move('Mos Eisley South')\">Move</button>\n    <div ng-controller=\"Droid\">\n        <p>Location: {{location}}</p>\n        <button ng-click=\"sell('Owen Farm')\">Sell</button>\n    </div>\n</div>\n```\n\n\n```\nfunction Sandcrawler($scope) {\n    $scope.location = \"Mos Eisley North\";\n    $scope.move = function(newLocation) {\n        $scope.location = newLocation;\n    }\n}\nfunction Droid($scope) {\n    $scope.sell = function(newLocation) {\n        $scope.location = newLocation;\n    }\n}\n```\n\n\n# 基于事件的方式\n\n# on 注册事件 并由 emit 触发\n\n向上\n\n```\n<div ng-controller=\"Sandcrawler\" ng-app>\n    <p>Sandcrawler Location: {{location}}</p>\n    <div ng-controller=\"Droid\">\n        <p>Droid Location: {{location}}</p>\n        <button ng-click=\"summon()\">Summon Sandcrawler</button>\n    </div>\n</div>\n```\n\n\n```\nfunction Sandcrawler($scope) {\n    $scope.location = \"Mos Eisley North\";\n    $scope.$on('summon', function(e, newLocation) {\n        $scope.location = newLocation;\n    });\n}\nfunction Droid($scope) {\n    $scope.location = \"Owen Farm\";\n    $scope.summon = function() {\n        $scope.$emit('summon', $scope.location);\n    }\n}\n```\n\n# 向下\n\n```\nfunction Sandcrawler($scope) {\n    $scope.location = \"Mos Eisley North\";\n    $scope.recall = function() {\n        $scope.$broadcast('recall', $scope.location);\n    }\n}\nfunction Droid($scope) {\n    $scope.location = \"Owen Farm\";\n    $scope.$on('recall', function(e, newLocation) {\n        $scope.location = newLocation;\n    });\n}\n```\n\n```\n//html\n<div ng-controller=\"Sandcrawler\">\n    <p>Sandcrawler Location: {{location}}</p>\n    <button ng-click=\"recall()\">Recall Droids</button>\n    <div ng-controller=\"Droid\">\n        <p>Droid Location: {{location}}</p>\n    </div>\n</div>\n```\n\n# 兄弟之间的传播\n\n```\nfunction Sandcrawler($scope) {\n    $scope.$on('requestDroidRecall', function(e) {\n        $scope.$broadcast('executeDroidRecall');\n    });\n}\nfunction Droid($scope) {\n    $scope.location = \"Owen Farm\";\n    $scope.recallAllDroids = function() {\n        $scope.$emit('requestDroidRecall');\n    }\n    $scope.$on('executeDroidRecall', function() { \n        $scope.location = \"Sandcrawler\"\n    });\n}\n```\n\n```\n// html\n<div ng-controller=\"Sandcrawler\">\n    <div ng-controller=\"Droid\">\n        <h2>R2-D2</h2>\n        <p>Droid Location: {{location}}</p>\n        <button ng-click=\"recallAddDroids()\">Recall All Droids</button>\n    </div>\n    <div ng-controller=\"Droid\">\n        <h2>C-3PO</h2>\n        <p>Droid Location: {{status}}</p>\n        <button ng-click=\"recallAddDroids()\">Recall All Droids</button>\n    </div>\n</div>\n```\n","source":"_posts/angular-控件间的传值.md","raw":"# 基于原型继承\n\n# 父类的更改会触发所有的子类,子类的修改只会自身\n\n```\n<div ng-controller=\"Sandcrawler\" ng-app>\n    <p>Location: {{location}}</p>\n    <button ng-click=\"move('Mos Eisley South')\">Move</button>\n    <div ng-controller=\"Droid\">\n        <p>Location: {{location}}</p>\n        <button ng-click=\"sell('Owen Farm')\">Sell</button>\n    </div>\n</div>\n```\n\n\n```\nfunction Sandcrawler($scope) {\n    $scope.location = \"Mos Eisley North\";\n    $scope.move = function(newLocation) {\n        $scope.location = newLocation;\n    }\n}\nfunction Droid($scope) {\n    $scope.sell = function(newLocation) {\n        $scope.location = newLocation;\n    }\n}\n```\n\n\n# 基于事件的方式\n\n# on 注册事件 并由 emit 触发\n\n向上\n\n```\n<div ng-controller=\"Sandcrawler\" ng-app>\n    <p>Sandcrawler Location: {{location}}</p>\n    <div ng-controller=\"Droid\">\n        <p>Droid Location: {{location}}</p>\n        <button ng-click=\"summon()\">Summon Sandcrawler</button>\n    </div>\n</div>\n```\n\n\n```\nfunction Sandcrawler($scope) {\n    $scope.location = \"Mos Eisley North\";\n    $scope.$on('summon', function(e, newLocation) {\n        $scope.location = newLocation;\n    });\n}\nfunction Droid($scope) {\n    $scope.location = \"Owen Farm\";\n    $scope.summon = function() {\n        $scope.$emit('summon', $scope.location);\n    }\n}\n```\n\n# 向下\n\n```\nfunction Sandcrawler($scope) {\n    $scope.location = \"Mos Eisley North\";\n    $scope.recall = function() {\n        $scope.$broadcast('recall', $scope.location);\n    }\n}\nfunction Droid($scope) {\n    $scope.location = \"Owen Farm\";\n    $scope.$on('recall', function(e, newLocation) {\n        $scope.location = newLocation;\n    });\n}\n```\n\n```\n//html\n<div ng-controller=\"Sandcrawler\">\n    <p>Sandcrawler Location: {{location}}</p>\n    <button ng-click=\"recall()\">Recall Droids</button>\n    <div ng-controller=\"Droid\">\n        <p>Droid Location: {{location}}</p>\n    </div>\n</div>\n```\n\n# 兄弟之间的传播\n\n```\nfunction Sandcrawler($scope) {\n    $scope.$on('requestDroidRecall', function(e) {\n        $scope.$broadcast('executeDroidRecall');\n    });\n}\nfunction Droid($scope) {\n    $scope.location = \"Owen Farm\";\n    $scope.recallAllDroids = function() {\n        $scope.$emit('requestDroidRecall');\n    }\n    $scope.$on('executeDroidRecall', function() { \n        $scope.location = \"Sandcrawler\"\n    });\n}\n```\n\n```\n// html\n<div ng-controller=\"Sandcrawler\">\n    <div ng-controller=\"Droid\">\n        <h2>R2-D2</h2>\n        <p>Droid Location: {{location}}</p>\n        <button ng-click=\"recallAddDroids()\">Recall All Droids</button>\n    </div>\n    <div ng-controller=\"Droid\">\n        <h2>C-3PO</h2>\n        <p>Droid Location: {{status}}</p>\n        <button ng-click=\"recallAddDroids()\">Recall All Droids</button>\n    </div>\n</div>\n```\n","slug":"angular-控件间的传值","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ciye48hjf0005ch0obwovgls3","content":"<h1 id=\"基于原型继承\"><a href=\"#基于原型继承\" class=\"headerlink\" title=\"基于原型继承\"></a>基于原型继承</h1><h1 id=\"父类的更改会触发所有的子类-子类的修改只会自身\"><a href=\"#父类的更改会触发所有的子类-子类的修改只会自身\" class=\"headerlink\" title=\"父类的更改会触发所有的子类,子类的修改只会自身\"></a>父类的更改会触发所有的子类,子类的修改只会自身</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div ng-controller=&quot;Sandcrawler&quot; ng-app&gt;</div><div class=\"line\">    &lt;p&gt;Location: &#123;&#123;location&#125;&#125;&lt;/p&gt;</div><div class=\"line\">    &lt;button ng-click=&quot;move(&apos;Mos Eisley South&apos;)&quot;&gt;Move&lt;/button&gt;</div><div class=\"line\">    &lt;div ng-controller=&quot;Droid&quot;&gt;</div><div class=\"line\">        &lt;p&gt;Location: &#123;&#123;location&#125;&#125;&lt;/p&gt;</div><div class=\"line\">        &lt;button ng-click=&quot;sell(&apos;Owen Farm&apos;)&quot;&gt;Sell&lt;/button&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">function Sandcrawler($scope) &#123;</div><div class=\"line\">    $scope.location = &quot;Mos Eisley North&quot;;</div><div class=\"line\">    $scope.move = function(newLocation) &#123;</div><div class=\"line\">        $scope.location = newLocation;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">function Droid($scope) &#123;</div><div class=\"line\">    $scope.sell = function(newLocation) &#123;</div><div class=\"line\">        $scope.location = newLocation;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"基于事件的方式\"><a href=\"#基于事件的方式\" class=\"headerlink\" title=\"基于事件的方式\"></a>基于事件的方式</h1><h1 id=\"on-注册事件-并由-emit-触发\"><a href=\"#on-注册事件-并由-emit-触发\" class=\"headerlink\" title=\"on 注册事件 并由 emit 触发\"></a>on 注册事件 并由 emit 触发</h1><p>向上</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div ng-controller=&quot;Sandcrawler&quot; ng-app&gt;</div><div class=\"line\">    &lt;p&gt;Sandcrawler Location: &#123;&#123;location&#125;&#125;&lt;/p&gt;</div><div class=\"line\">    &lt;div ng-controller=&quot;Droid&quot;&gt;</div><div class=\"line\">        &lt;p&gt;Droid Location: &#123;&#123;location&#125;&#125;&lt;/p&gt;</div><div class=\"line\">        &lt;button ng-click=&quot;summon()&quot;&gt;Summon Sandcrawler&lt;/button&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">function Sandcrawler($scope) &#123;</div><div class=\"line\">    $scope.location = &quot;Mos Eisley North&quot;;</div><div class=\"line\">    $scope.$on(&apos;summon&apos;, function(e, newLocation) &#123;</div><div class=\"line\">        $scope.location = newLocation;</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div><div class=\"line\">function Droid($scope) &#123;</div><div class=\"line\">    $scope.location = &quot;Owen Farm&quot;;</div><div class=\"line\">    $scope.summon = function() &#123;</div><div class=\"line\">        $scope.$emit(&apos;summon&apos;, $scope.location);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"向下\"><a href=\"#向下\" class=\"headerlink\" title=\"向下\"></a>向下</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">function Sandcrawler($scope) &#123;</div><div class=\"line\">    $scope.location = &quot;Mos Eisley North&quot;;</div><div class=\"line\">    $scope.recall = function() &#123;</div><div class=\"line\">        $scope.$broadcast(&apos;recall&apos;, $scope.location);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">function Droid($scope) &#123;</div><div class=\"line\">    $scope.location = &quot;Owen Farm&quot;;</div><div class=\"line\">    $scope.$on(&apos;recall&apos;, function(e, newLocation) &#123;</div><div class=\"line\">        $scope.location = newLocation;</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">//html</div><div class=\"line\">&lt;div ng-controller=&quot;Sandcrawler&quot;&gt;</div><div class=\"line\">    &lt;p&gt;Sandcrawler Location: &#123;&#123;location&#125;&#125;&lt;/p&gt;</div><div class=\"line\">    &lt;button ng-click=&quot;recall()&quot;&gt;Recall Droids&lt;/button&gt;</div><div class=\"line\">    &lt;div ng-controller=&quot;Droid&quot;&gt;</div><div class=\"line\">        &lt;p&gt;Droid Location: &#123;&#123;location&#125;&#125;&lt;/p&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n<h1 id=\"兄弟之间的传播\"><a href=\"#兄弟之间的传播\" class=\"headerlink\" title=\"兄弟之间的传播\"></a>兄弟之间的传播</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">function Sandcrawler($scope) &#123;</div><div class=\"line\">    $scope.$on(&apos;requestDroidRecall&apos;, function(e) &#123;</div><div class=\"line\">        $scope.$broadcast(&apos;executeDroidRecall&apos;);</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div><div class=\"line\">function Droid($scope) &#123;</div><div class=\"line\">    $scope.location = &quot;Owen Farm&quot;;</div><div class=\"line\">    $scope.recallAllDroids = function() &#123;</div><div class=\"line\">        $scope.$emit(&apos;requestDroidRecall&apos;);</div><div class=\"line\">    &#125;</div><div class=\"line\">    $scope.$on(&apos;executeDroidRecall&apos;, function() &#123; </div><div class=\"line\">        $scope.location = &quot;Sandcrawler&quot;</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">// html</div><div class=\"line\">&lt;div ng-controller=&quot;Sandcrawler&quot;&gt;</div><div class=\"line\">    &lt;div ng-controller=&quot;Droid&quot;&gt;</div><div class=\"line\">        &lt;h2&gt;R2-D2&lt;/h2&gt;</div><div class=\"line\">        &lt;p&gt;Droid Location: &#123;&#123;location&#125;&#125;&lt;/p&gt;</div><div class=\"line\">        &lt;button ng-click=&quot;recallAddDroids()&quot;&gt;Recall All Droids&lt;/button&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">    &lt;div ng-controller=&quot;Droid&quot;&gt;</div><div class=\"line\">        &lt;h2&gt;C-3PO&lt;/h2&gt;</div><div class=\"line\">        &lt;p&gt;Droid Location: &#123;&#123;status&#125;&#125;&lt;/p&gt;</div><div class=\"line\">        &lt;button ng-click=&quot;recallAddDroids()&quot;&gt;Recall All Droids&lt;/button&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"基于原型继承\"><a href=\"#基于原型继承\" class=\"headerlink\" title=\"基于原型继承\"></a>基于原型继承</h1><h1 id=\"父类的更改会触发所有的子类-子类的修改只会自身\"><a href=\"#父类的更改会触发所有的子类-子类的修改只会自身\" class=\"headerlink\" title=\"父类的更改会触发所有的子类,子类的修改只会自身\"></a>父类的更改会触发所有的子类,子类的修改只会自身</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div ng-controller=&quot;Sandcrawler&quot; ng-app&gt;</div><div class=\"line\">    &lt;p&gt;Location: &#123;&#123;location&#125;&#125;&lt;/p&gt;</div><div class=\"line\">    &lt;button ng-click=&quot;move(&apos;Mos Eisley South&apos;)&quot;&gt;Move&lt;/button&gt;</div><div class=\"line\">    &lt;div ng-controller=&quot;Droid&quot;&gt;</div><div class=\"line\">        &lt;p&gt;Location: &#123;&#123;location&#125;&#125;&lt;/p&gt;</div><div class=\"line\">        &lt;button ng-click=&quot;sell(&apos;Owen Farm&apos;)&quot;&gt;Sell&lt;/button&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">function Sandcrawler($scope) &#123;</div><div class=\"line\">    $scope.location = &quot;Mos Eisley North&quot;;</div><div class=\"line\">    $scope.move = function(newLocation) &#123;</div><div class=\"line\">        $scope.location = newLocation;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">function Droid($scope) &#123;</div><div class=\"line\">    $scope.sell = function(newLocation) &#123;</div><div class=\"line\">        $scope.location = newLocation;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"基于事件的方式\"><a href=\"#基于事件的方式\" class=\"headerlink\" title=\"基于事件的方式\"></a>基于事件的方式</h1><h1 id=\"on-注册事件-并由-emit-触发\"><a href=\"#on-注册事件-并由-emit-触发\" class=\"headerlink\" title=\"on 注册事件 并由 emit 触发\"></a>on 注册事件 并由 emit 触发</h1><p>向上</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div ng-controller=&quot;Sandcrawler&quot; ng-app&gt;</div><div class=\"line\">    &lt;p&gt;Sandcrawler Location: &#123;&#123;location&#125;&#125;&lt;/p&gt;</div><div class=\"line\">    &lt;div ng-controller=&quot;Droid&quot;&gt;</div><div class=\"line\">        &lt;p&gt;Droid Location: &#123;&#123;location&#125;&#125;&lt;/p&gt;</div><div class=\"line\">        &lt;button ng-click=&quot;summon()&quot;&gt;Summon Sandcrawler&lt;/button&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">function Sandcrawler($scope) &#123;</div><div class=\"line\">    $scope.location = &quot;Mos Eisley North&quot;;</div><div class=\"line\">    $scope.$on(&apos;summon&apos;, function(e, newLocation) &#123;</div><div class=\"line\">        $scope.location = newLocation;</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div><div class=\"line\">function Droid($scope) &#123;</div><div class=\"line\">    $scope.location = &quot;Owen Farm&quot;;</div><div class=\"line\">    $scope.summon = function() &#123;</div><div class=\"line\">        $scope.$emit(&apos;summon&apos;, $scope.location);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"向下\"><a href=\"#向下\" class=\"headerlink\" title=\"向下\"></a>向下</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">function Sandcrawler($scope) &#123;</div><div class=\"line\">    $scope.location = &quot;Mos Eisley North&quot;;</div><div class=\"line\">    $scope.recall = function() &#123;</div><div class=\"line\">        $scope.$broadcast(&apos;recall&apos;, $scope.location);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">function Droid($scope) &#123;</div><div class=\"line\">    $scope.location = &quot;Owen Farm&quot;;</div><div class=\"line\">    $scope.$on(&apos;recall&apos;, function(e, newLocation) &#123;</div><div class=\"line\">        $scope.location = newLocation;</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">//html</div><div class=\"line\">&lt;div ng-controller=&quot;Sandcrawler&quot;&gt;</div><div class=\"line\">    &lt;p&gt;Sandcrawler Location: &#123;&#123;location&#125;&#125;&lt;/p&gt;</div><div class=\"line\">    &lt;button ng-click=&quot;recall()&quot;&gt;Recall Droids&lt;/button&gt;</div><div class=\"line\">    &lt;div ng-controller=&quot;Droid&quot;&gt;</div><div class=\"line\">        &lt;p&gt;Droid Location: &#123;&#123;location&#125;&#125;&lt;/p&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n<h1 id=\"兄弟之间的传播\"><a href=\"#兄弟之间的传播\" class=\"headerlink\" title=\"兄弟之间的传播\"></a>兄弟之间的传播</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">function Sandcrawler($scope) &#123;</div><div class=\"line\">    $scope.$on(&apos;requestDroidRecall&apos;, function(e) &#123;</div><div class=\"line\">        $scope.$broadcast(&apos;executeDroidRecall&apos;);</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div><div class=\"line\">function Droid($scope) &#123;</div><div class=\"line\">    $scope.location = &quot;Owen Farm&quot;;</div><div class=\"line\">    $scope.recallAllDroids = function() &#123;</div><div class=\"line\">        $scope.$emit(&apos;requestDroidRecall&apos;);</div><div class=\"line\">    &#125;</div><div class=\"line\">    $scope.$on(&apos;executeDroidRecall&apos;, function() &#123; </div><div class=\"line\">        $scope.location = &quot;Sandcrawler&quot;</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">// html</div><div class=\"line\">&lt;div ng-controller=&quot;Sandcrawler&quot;&gt;</div><div class=\"line\">    &lt;div ng-controller=&quot;Droid&quot;&gt;</div><div class=\"line\">        &lt;h2&gt;R2-D2&lt;/h2&gt;</div><div class=\"line\">        &lt;p&gt;Droid Location: &#123;&#123;location&#125;&#125;&lt;/p&gt;</div><div class=\"line\">        &lt;button ng-click=&quot;recallAddDroids()&quot;&gt;Recall All Droids&lt;/button&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">    &lt;div ng-controller=&quot;Droid&quot;&gt;</div><div class=\"line\">        &lt;h2&gt;C-3PO&lt;/h2&gt;</div><div class=\"line\">        &lt;p&gt;Droid Location: &#123;&#123;status&#125;&#125;&lt;/p&gt;</div><div class=\"line\">        &lt;button ng-click=&quot;recallAddDroids()&quot;&gt;Recall All Droids&lt;/button&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n"},{"_content":"# 避免重复使用controller\n\n# solate scope \n\n```\nvar app = angular.module('myApp', []);\n\napp.controller('Ctrl', function($scope) {\n    $scope.naomi = {\n      name: 'Naomi',\n      address: '1600 Amphitheatre'\n    };\n    $scope.igor = {\n      name: 'Igor',\n      address: '123 Somewhere'\n    };\n  })\n  .directive('myCustomer', function() {\n    return {\n      restrict: 'E',\n      scope: {\n        customer: '=customer'\n      },\n      template: 'Name: {{customer.name}} Address: {{customer.address}}'\n    };\n  });\n\n\n\n<body ng-app=\"myApp\">\n  <div ng-controller=\"Ctrl\">\n    <my-customer customer=\"naomi\"></my-customer>\n    <hr>\n    <my-customer customer=\"igor\"></my-customer>\n  </div>\n</body>\n```\n\n关键在于:\n\n```\nscope: {\n  customer: '=customer'\n},\n```\n\n简化:\n\n```\nscope: {\n  // same as '=customer'\n  customer: '='\n},\n```\n","source":"_posts/angular-隔离指令的作用域.md","raw":"# 避免重复使用controller\n\n# solate scope \n\n```\nvar app = angular.module('myApp', []);\n\napp.controller('Ctrl', function($scope) {\n    $scope.naomi = {\n      name: 'Naomi',\n      address: '1600 Amphitheatre'\n    };\n    $scope.igor = {\n      name: 'Igor',\n      address: '123 Somewhere'\n    };\n  })\n  .directive('myCustomer', function() {\n    return {\n      restrict: 'E',\n      scope: {\n        customer: '=customer'\n      },\n      template: 'Name: {{customer.name}} Address: {{customer.address}}'\n    };\n  });\n\n\n\n<body ng-app=\"myApp\">\n  <div ng-controller=\"Ctrl\">\n    <my-customer customer=\"naomi\"></my-customer>\n    <hr>\n    <my-customer customer=\"igor\"></my-customer>\n  </div>\n</body>\n```\n\n关键在于:\n\n```\nscope: {\n  customer: '=customer'\n},\n```\n\n简化:\n\n```\nscope: {\n  // same as '=customer'\n  customer: '='\n},\n```\n","slug":"angular-隔离指令的作用域","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ciye48hjh0006ch0o9fy1lnik","content":"<h1 id=\"避免重复使用controller\"><a href=\"#避免重复使用controller\" class=\"headerlink\" title=\"避免重复使用controller\"></a>避免重复使用controller</h1><h1 id=\"solate-scope\"><a href=\"#solate-scope\" class=\"headerlink\" title=\"solate scope\"></a>solate scope</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">var app = angular.module(&apos;myApp&apos;, []);</div><div class=\"line\"></div><div class=\"line\">app.controller(&apos;Ctrl&apos;, function($scope) &#123;</div><div class=\"line\">    $scope.naomi = &#123;</div><div class=\"line\">      name: &apos;Naomi&apos;,</div><div class=\"line\">      address: &apos;1600 Amphitheatre&apos;</div><div class=\"line\">    &#125;;</div><div class=\"line\">    $scope.igor = &#123;</div><div class=\"line\">      name: &apos;Igor&apos;,</div><div class=\"line\">      address: &apos;123 Somewhere&apos;</div><div class=\"line\">    &#125;;</div><div class=\"line\">  &#125;)</div><div class=\"line\">  .directive(&apos;myCustomer&apos;, function() &#123;</div><div class=\"line\">    return &#123;</div><div class=\"line\">      restrict: &apos;E&apos;,</div><div class=\"line\">      scope: &#123;</div><div class=\"line\">        customer: &apos;=customer&apos;</div><div class=\"line\">      &#125;,</div><div class=\"line\">      template: &apos;Name: &#123;&#123;customer.name&#125;&#125; Address: &#123;&#123;customer.address&#125;&#125;&apos;</div><div class=\"line\">    &#125;;</div><div class=\"line\">  &#125;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&lt;body ng-app=&quot;myApp&quot;&gt;</div><div class=\"line\">  &lt;div ng-controller=&quot;Ctrl&quot;&gt;</div><div class=\"line\">    &lt;my-customer customer=&quot;naomi&quot;&gt;&lt;/my-customer&gt;</div><div class=\"line\">    &lt;hr&gt;</div><div class=\"line\">    &lt;my-customer customer=&quot;igor&quot;&gt;&lt;/my-customer&gt;</div><div class=\"line\">  &lt;/div&gt;</div><div class=\"line\">&lt;/body&gt;</div></pre></td></tr></table></figure>\n<p>关键在于:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">scope: &#123;</div><div class=\"line\">  customer: &apos;=customer&apos;</div><div class=\"line\">&#125;,</div></pre></td></tr></table></figure>\n<p>简化:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">scope: &#123;</div><div class=\"line\">  // same as &apos;=customer&apos;</div><div class=\"line\">  customer: &apos;=&apos;</div><div class=\"line\">&#125;,</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"避免重复使用controller\"><a href=\"#避免重复使用controller\" class=\"headerlink\" title=\"避免重复使用controller\"></a>避免重复使用controller</h1><h1 id=\"solate-scope\"><a href=\"#solate-scope\" class=\"headerlink\" title=\"solate scope\"></a>solate scope</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">var app = angular.module(&apos;myApp&apos;, []);</div><div class=\"line\"></div><div class=\"line\">app.controller(&apos;Ctrl&apos;, function($scope) &#123;</div><div class=\"line\">    $scope.naomi = &#123;</div><div class=\"line\">      name: &apos;Naomi&apos;,</div><div class=\"line\">      address: &apos;1600 Amphitheatre&apos;</div><div class=\"line\">    &#125;;</div><div class=\"line\">    $scope.igor = &#123;</div><div class=\"line\">      name: &apos;Igor&apos;,</div><div class=\"line\">      address: &apos;123 Somewhere&apos;</div><div class=\"line\">    &#125;;</div><div class=\"line\">  &#125;)</div><div class=\"line\">  .directive(&apos;myCustomer&apos;, function() &#123;</div><div class=\"line\">    return &#123;</div><div class=\"line\">      restrict: &apos;E&apos;,</div><div class=\"line\">      scope: &#123;</div><div class=\"line\">        customer: &apos;=customer&apos;</div><div class=\"line\">      &#125;,</div><div class=\"line\">      template: &apos;Name: &#123;&#123;customer.name&#125;&#125; Address: &#123;&#123;customer.address&#125;&#125;&apos;</div><div class=\"line\">    &#125;;</div><div class=\"line\">  &#125;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&lt;body ng-app=&quot;myApp&quot;&gt;</div><div class=\"line\">  &lt;div ng-controller=&quot;Ctrl&quot;&gt;</div><div class=\"line\">    &lt;my-customer customer=&quot;naomi&quot;&gt;&lt;/my-customer&gt;</div><div class=\"line\">    &lt;hr&gt;</div><div class=\"line\">    &lt;my-customer customer=&quot;igor&quot;&gt;&lt;/my-customer&gt;</div><div class=\"line\">  &lt;/div&gt;</div><div class=\"line\">&lt;/body&gt;</div></pre></td></tr></table></figure>\n<p>关键在于:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">scope: &#123;</div><div class=\"line\">  customer: &apos;=customer&apos;</div><div class=\"line\">&#125;,</div></pre></td></tr></table></figure>\n<p>简化:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">scope: &#123;</div><div class=\"line\">  // same as &apos;=customer&apos;</div><div class=\"line\">  customer: &apos;=&apos;</div><div class=\"line\">&#125;,</div></pre></td></tr></table></figure>\n"},{"_content":"1.先定义了模块,在选择选择器\n\n指令:\n\n# ng-app\nangular模块作用域\n\n# ng-model\n标签变量\n\n\n\n组合指令:\n\n# ng-init\n初始化变量\n\n# ng-bind\n{{name}}\n\n\n# ng-controller\nangular控制器\n","source":"_posts/angular-扩展html.md","raw":"1.先定义了模块,在选择选择器\n\n指令:\n\n# ng-app\nangular模块作用域\n\n# ng-model\n标签变量\n\n\n\n组合指令:\n\n# ng-init\n初始化变量\n\n# ng-bind\n{{name}}\n\n\n# ng-controller\nangular控制器\n","slug":"angular-扩展html","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ciye48olz0007ch0onvxk7c1r","content":"<p>1.先定义了模块,在选择选择器</p>\n<p>指令:</p>\n<h1 id=\"ng-app\"><a href=\"#ng-app\" class=\"headerlink\" title=\"ng-app\"></a>ng-app</h1><p>angular模块作用域</p>\n<h1 id=\"ng-model\"><a href=\"#ng-model\" class=\"headerlink\" title=\"ng-model\"></a>ng-model</h1><p>标签变量</p>\n<p>组合指令:</p>\n<h1 id=\"ng-init\"><a href=\"#ng-init\" class=\"headerlink\" title=\"ng-init\"></a>ng-init</h1><p>初始化变量</p>\n<h1 id=\"ng-bind\"><a href=\"#ng-bind\" class=\"headerlink\" title=\"ng-bind\"></a>ng-bind</h1>\n<h1 id=\"ng-controller\"><a href=\"#ng-controller\" class=\"headerlink\" title=\"ng-controller\"></a>ng-controller</h1><p>angular控制器</p>\n","excerpt":"","more":"<p>1.先定义了模块,在选择选择器</p>\n<p>指令:</p>\n<h1 id=\"ng-app\"><a href=\"#ng-app\" class=\"headerlink\" title=\"ng-app\"></a>ng-app</h1><p>angular模块作用域</p>\n<h1 id=\"ng-model\"><a href=\"#ng-model\" class=\"headerlink\" title=\"ng-model\"></a>ng-model</h1><p>标签变量</p>\n<p>组合指令:</p>\n<h1 id=\"ng-init\"><a href=\"#ng-init\" class=\"headerlink\" title=\"ng-init\"></a>ng-init</h1><p>初始化变量</p>\n<h1 id=\"ng-bind\"><a href=\"#ng-bind\" class=\"headerlink\" title=\"ng-bind\"></a>ng-bind</h1>\n<h1 id=\"ng-controller\"><a href=\"#ng-controller\" class=\"headerlink\" title=\"ng-controller\"></a>ng-controller</h1><p>angular控制器</p>\n"},{"_content":"## 样式\n```\n<div ng-style=\"{width: 100 + 'px', height: 100 + 'px', backgroundColor: 'red'}\">\n</div>\n```\n\n## 类\n\n```\n<div ng-controller=\"TestCtrl\" ng-class=\"cls\">\n</div>\n```\n\n## 显示和隐藏\n```ng-show ng-hide ng-switch```\n\n前两个是控制 display 的指令：\n\n```\n<div ng-show=\"true\">1</div>\n<div ng-show=\"false\">2</div>\n<div ng-hide=\"true\">3</div>\n<div ng-hide=\"false\">4</div>\n```\n\n后一个 ng-switch 是根据一个值来决定哪个节点显示，其它节点移除：\n\n```\n<div ng-init=\"a=2\">\n  <ul ng-switch on=\"a\">\n    <li ng-switch-when=\"1\">1</li>\n    <li ng-switch-when=\"2\">2</li>\n    <li ng-switch-default>other</li>\n  </ul>\n</div>\n```\n\n# 其他属性 \n\nng-src 控制 src 属性：\n\n```\n<img ng-src=\"{{ 'h' + 'ead.png' }}\" />\n```\n\nng-href 控制 href 属性：\n\n```\n<a ng-href=\"{{ '#' + '123' }}\">here</a>\n```\n\nng-src src属性\nng-href href属性\nng-checked 选中状态\nng-selected 被选择状态\nng-disabled 禁用状态\nng-multiple 多选状态\nng-readonly 只读状态\n\n","source":"_posts/angular-模板节点控制.md","raw":"## 样式\n```\n<div ng-style=\"{width: 100 + 'px', height: 100 + 'px', backgroundColor: 'red'}\">\n</div>\n```\n\n## 类\n\n```\n<div ng-controller=\"TestCtrl\" ng-class=\"cls\">\n</div>\n```\n\n## 显示和隐藏\n```ng-show ng-hide ng-switch```\n\n前两个是控制 display 的指令：\n\n```\n<div ng-show=\"true\">1</div>\n<div ng-show=\"false\">2</div>\n<div ng-hide=\"true\">3</div>\n<div ng-hide=\"false\">4</div>\n```\n\n后一个 ng-switch 是根据一个值来决定哪个节点显示，其它节点移除：\n\n```\n<div ng-init=\"a=2\">\n  <ul ng-switch on=\"a\">\n    <li ng-switch-when=\"1\">1</li>\n    <li ng-switch-when=\"2\">2</li>\n    <li ng-switch-default>other</li>\n  </ul>\n</div>\n```\n\n# 其他属性 \n\nng-src 控制 src 属性：\n\n```\n<img ng-src=\"{{ 'h' + 'ead.png' }}\" />\n```\n\nng-href 控制 href 属性：\n\n```\n<a ng-href=\"{{ '#' + '123' }}\">here</a>\n```\n\nng-src src属性\nng-href href属性\nng-checked 选中状态\nng-selected 被选择状态\nng-disabled 禁用状态\nng-multiple 多选状态\nng-readonly 只读状态\n\n","slug":"angular-模板节点控制","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ciye48om10008ch0ofd9mg3c4","content":"<h2 id=\"样式\"><a href=\"#样式\" class=\"headerlink\" title=\"样式\"></a>样式</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div ng-style=&quot;&#123;width: 100 + &apos;px&apos;, height: 100 + &apos;px&apos;, backgroundColor: &apos;red&apos;&#125;&quot;&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"类\"><a href=\"#类\" class=\"headerlink\" title=\"类\"></a>类</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div ng-controller=&quot;TestCtrl&quot; ng-class=&quot;cls&quot;&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"显示和隐藏\"><a href=\"#显示和隐藏\" class=\"headerlink\" title=\"显示和隐藏\"></a>显示和隐藏</h2><figure class=\"highlight plain\"><figcaption><span>ng-hide ng-switch```</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">前两个是控制 display 的指令：</div></pre></td></tr></table></figure>\n<p><div ng-show=\"true\">1</div></p>\n<p><div ng-show=\"false\">2</div></p>\n<p><div ng-hide=\"true\">3</div></p>\n<p><div ng-hide=\"false\">4</div><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">后一个 ng-switch 是根据一个值来决定哪个节点显示，其它节点移除：</div></pre></td></tr></table></figure></p>\n<p><div ng-init=\"a=2\"><br>  <ul ng-switch=\"\" on=\"a\"><br>    <li ng-switch-when=\"1\">1</li><br>    <li ng-switch-when=\"2\">2</li><br>    <li ng-switch-default=\"\">other</li><br>  </ul><br></div><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"># 其他属性 </div><div class=\"line\"></div><div class=\"line\">ng-src 控制 src 属性：</div></pre></td></tr></table></figure></p>\n<p><img ng-src=\"head.png\"><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">ng-href 控制 href 属性：</div></pre></td></tr></table></figure></p>\n<p><a ng-href=\"#123\">here</a><br>```</p>\n<p>ng-src src属性<br>ng-href href属性<br>ng-checked 选中状态<br>ng-selected 被选择状态<br>ng-disabled 禁用状态<br>ng-multiple 多选状态<br>ng-readonly 只读状态</p>\n","excerpt":"","more":"<h2 id=\"样式\"><a href=\"#样式\" class=\"headerlink\" title=\"样式\"></a>样式</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div ng-style=&quot;&#123;width: 100 + &apos;px&apos;, height: 100 + &apos;px&apos;, backgroundColor: &apos;red&apos;&#125;&quot;&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"类\"><a href=\"#类\" class=\"headerlink\" title=\"类\"></a>类</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div ng-controller=&quot;TestCtrl&quot; ng-class=&quot;cls&quot;&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"显示和隐藏\"><a href=\"#显示和隐藏\" class=\"headerlink\" title=\"显示和隐藏\"></a>显示和隐藏</h2><figure class=\"highlight plain\"><figcaption><span>ng-hide ng-switch```</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">前两个是控制 display 的指令：</div></pre></td></tr></table></figure>\n<p><div ng-show=\"true\">1</div></p>\n<p><div ng-show=\"false\">2</div></p>\n<p><div ng-hide=\"true\">3</div></p>\n<p><div ng-hide=\"false\">4</div><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">后一个 ng-switch 是根据一个值来决定哪个节点显示，其它节点移除：</div></pre></td></tr></table></figure></p>\n<p><div ng-init=\"a=2\"><br>  <ul ng-switch on=\"a\"><br>    <li ng-switch-when=\"1\">1</li><br>    <li ng-switch-when=\"2\">2</li><br>    <li ng-switch-default>other</li><br>  </ul><br></div><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"># 其他属性 </div><div class=\"line\"></div><div class=\"line\">ng-src 控制 src 属性：</div></pre></td></tr></table></figure></p>\n<p><img ng-src=\"head.png\" /><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">ng-href 控制 href 属性：</div></pre></td></tr></table></figure></p>\n<p><a ng-href=\"#123\">here</a><br>```</p>\n<p>ng-src src属性<br>ng-href href属性<br>ng-checked 选中状态<br>ng-selected 被选择状态<br>ng-disabled 禁用状态<br>ng-multiple 多选状态<br>ng-readonly 只读状态</p>\n"},{"_content":"# 模板内容、方式\n\n在需要的地方直接写字符串\n\n外部文件\n\n```\n<div ng-include src=\"'tpl.html'\">\n</div>\n\n<div ng-include=\"'tpl.html'\">\n</div>\n```\n\n使用 script 标签定义的“内部文件”\n\n```\n<script type=\"text/ng-template\" id=\"tpl\">\nhere, {{ 1 + 1 }}\n</script>\n\n<div ng-include src=\"'tpl'\"></div>\n```\n\n配合变量使用\n```\n<script type=\"text/ng-template\" id=\"tpl\">\nhere, {{ 1 + 1 }}\n</script>\n\n<a ng-click=\"v='tpl'\">Load</a>\n<div ng-include src=\"v\"></div>\n```\n","source":"_posts/angular-模板内容、方式.md","raw":"# 模板内容、方式\n\n在需要的地方直接写字符串\n\n外部文件\n\n```\n<div ng-include src=\"'tpl.html'\">\n</div>\n\n<div ng-include=\"'tpl.html'\">\n</div>\n```\n\n使用 script 标签定义的“内部文件”\n\n```\n<script type=\"text/ng-template\" id=\"tpl\">\nhere, {{ 1 + 1 }}\n</script>\n\n<div ng-include src=\"'tpl'\"></div>\n```\n\n配合变量使用\n```\n<script type=\"text/ng-template\" id=\"tpl\">\nhere, {{ 1 + 1 }}\n</script>\n\n<a ng-click=\"v='tpl'\">Load</a>\n<div ng-include src=\"v\"></div>\n```\n","slug":"angular-模板内容、方式","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ciye48org0009ch0ou9b20p20","content":"<h1 id=\"模板内容、方式\"><a href=\"#模板内容、方式\" class=\"headerlink\" title=\"模板内容、方式\"></a>模板内容、方式</h1><p>在需要的地方直接写字符串</p>\n<p>外部文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div ng-include src=&quot;&apos;tpl.html&apos;&quot;&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;div ng-include=&quot;&apos;tpl.html&apos;&quot;&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n<p>使用 script 标签定义的“内部文件”</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script type=&quot;text/ng-template&quot; id=&quot;tpl&quot;&gt;</div><div class=\"line\">here, &#123;&#123; 1 + 1 &#125;&#125;</div><div class=\"line\">&lt;/script&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;div ng-include src=&quot;&apos;tpl&apos;&quot;&gt;&lt;/div&gt;</div></pre></td></tr></table></figure>\n<p>配合变量使用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script type=&quot;text/ng-template&quot; id=&quot;tpl&quot;&gt;</div><div class=\"line\">here, &#123;&#123; 1 + 1 &#125;&#125;</div><div class=\"line\">&lt;/script&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;a ng-click=&quot;v=&apos;tpl&apos;&quot;&gt;Load&lt;/a&gt;</div><div class=\"line\">&lt;div ng-include src=&quot;v&quot;&gt;&lt;/div&gt;</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<h1 id=\"模板内容、方式\"><a href=\"#模板内容、方式\" class=\"headerlink\" title=\"模板内容、方式\"></a>模板内容、方式</h1><p>在需要的地方直接写字符串</p>\n<p>外部文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div ng-include src=&quot;&apos;tpl.html&apos;&quot;&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;div ng-include=&quot;&apos;tpl.html&apos;&quot;&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n<p>使用 script 标签定义的“内部文件”</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script type=&quot;text/ng-template&quot; id=&quot;tpl&quot;&gt;</div><div class=\"line\">here, &#123;&#123; 1 + 1 &#125;&#125;</div><div class=\"line\">&lt;/script&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;div ng-include src=&quot;&apos;tpl&apos;&quot;&gt;&lt;/div&gt;</div></pre></td></tr></table></figure>\n<p>配合变量使用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script type=&quot;text/ng-template&quot; id=&quot;tpl&quot;&gt;</div><div class=\"line\">here, &#123;&#123; 1 + 1 &#125;&#125;</div><div class=\"line\">&lt;/script&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;a ng-click=&quot;v=&apos;tpl&apos;&quot;&gt;Load&lt;/a&gt;</div><div class=\"line\">&lt;div ng-include src=&quot;v&quot;&gt;&lt;/div&gt;</div></pre></td></tr></table></figure></p>\n"},{"_content":"# 重复\n\n```\n$index 当前索引\n$first 是否为头元素\n$middle 是否为非头非尾元素\n$last 是否为尾元素\n```\n\n例子一:\n```\n<div ng-controller=\"TestCtrl\">\n  <ul ng-repeat=\"member in obj_list\">\n    <li>{{ member }}</li>\n  </ul>\n</div>\n```\n\n```\nangular.module('app', [], angular.noop)\n.controller('TestCtrl', function($scope){\n    $scope.obj_list = [1,2,3,4];\n});\nangular.bootstrap(document.documentElement, ['app']);\n```\n\n例子二:\n```\n<div ng-controller=\"TestCtrl\">\n  <ul ng-repeat=\"member in obj_list\">\n    <li>{{ $index }}, {{ member.name }}</li>\n  </ul>\n</div>\n```\n\n```\nangular.module('app', [], angular.noop)\n.controller('TestCtrl', function($scope){\n    $scope.obj_list = [{name: 'A'}, {name: 'B'}, {name: 'C'}];\n});\nangular.bootstrap(document.documentElement, ['app']);\n```\n\n# 奇偶\nng-class-even 和 ng-class-odd 是和 ng-repeat 配合使用的：\n\n```\n<ul ng-init=\"l=[1,2,3,4]\">\n  <li ng-class-odd=\"'odd'\" ng-class-even=\"'even'\" ng-repeat=\"m in l\">{{ m }}</li>\n</ul>\n```\n\n# 赋值\n\n```\n<div ng-controller=\"TestCtrl\" ng-init=\"a=[1,2,3,4];\">\n  <ul ng-repeat=\"member in a\">\n    <li>{{ member }}</li>\n  </ul>\n</div>\n```\n\n","source":"_posts/angular-模板内容渲染.md","raw":"# 重复\n\n```\n$index 当前索引\n$first 是否为头元素\n$middle 是否为非头非尾元素\n$last 是否为尾元素\n```\n\n例子一:\n```\n<div ng-controller=\"TestCtrl\">\n  <ul ng-repeat=\"member in obj_list\">\n    <li>{{ member }}</li>\n  </ul>\n</div>\n```\n\n```\nangular.module('app', [], angular.noop)\n.controller('TestCtrl', function($scope){\n    $scope.obj_list = [1,2,3,4];\n});\nangular.bootstrap(document.documentElement, ['app']);\n```\n\n例子二:\n```\n<div ng-controller=\"TestCtrl\">\n  <ul ng-repeat=\"member in obj_list\">\n    <li>{{ $index }}, {{ member.name }}</li>\n  </ul>\n</div>\n```\n\n```\nangular.module('app', [], angular.noop)\n.controller('TestCtrl', function($scope){\n    $scope.obj_list = [{name: 'A'}, {name: 'B'}, {name: 'C'}];\n});\nangular.bootstrap(document.documentElement, ['app']);\n```\n\n# 奇偶\nng-class-even 和 ng-class-odd 是和 ng-repeat 配合使用的：\n\n```\n<ul ng-init=\"l=[1,2,3,4]\">\n  <li ng-class-odd=\"'odd'\" ng-class-even=\"'even'\" ng-repeat=\"m in l\">{{ m }}</li>\n</ul>\n```\n\n# 赋值\n\n```\n<div ng-controller=\"TestCtrl\" ng-init=\"a=[1,2,3,4];\">\n  <ul ng-repeat=\"member in a\">\n    <li>{{ member }}</li>\n  </ul>\n</div>\n```\n\n","slug":"angular-模板内容渲染","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ciye48orh000ach0ov9rbl8hk","content":"<h1 id=\"重复\"><a href=\"#重复\" class=\"headerlink\" title=\"重复\"></a>重复</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$index 当前索引</div><div class=\"line\">$first 是否为头元素</div><div class=\"line\">$middle 是否为非头非尾元素</div><div class=\"line\">$last 是否为尾元素</div></pre></td></tr></table></figure>\n<p>例子一:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div ng-controller=&quot;TestCtrl&quot;&gt;</div><div class=\"line\">  &lt;ul ng-repeat=&quot;member in obj_list&quot;&gt;</div><div class=\"line\">    &lt;li&gt;&#123;&#123; member &#125;&#125;&lt;/li&gt;</div><div class=\"line\">  &lt;/ul&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">angular.module(&apos;app&apos;, [], angular.noop)</div><div class=\"line\">.controller(&apos;TestCtrl&apos;, function($scope)&#123;</div><div class=\"line\">    $scope.obj_list = [1,2,3,4];</div><div class=\"line\">&#125;);</div><div class=\"line\">angular.bootstrap(document.documentElement, [&apos;app&apos;]);</div></pre></td></tr></table></figure>\n<p>例子二:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div ng-controller=&quot;TestCtrl&quot;&gt;</div><div class=\"line\">  &lt;ul ng-repeat=&quot;member in obj_list&quot;&gt;</div><div class=\"line\">    &lt;li&gt;&#123;&#123; $index &#125;&#125;, &#123;&#123; member.name &#125;&#125;&lt;/li&gt;</div><div class=\"line\">  &lt;/ul&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">angular.module(&apos;app&apos;, [], angular.noop)</div><div class=\"line\">.controller(&apos;TestCtrl&apos;, function($scope)&#123;</div><div class=\"line\">    $scope.obj_list = [&#123;name: &apos;A&apos;&#125;, &#123;name: &apos;B&apos;&#125;, &#123;name: &apos;C&apos;&#125;];</div><div class=\"line\">&#125;);</div><div class=\"line\">angular.bootstrap(document.documentElement, [&apos;app&apos;]);</div></pre></td></tr></table></figure>\n<h1 id=\"奇偶\"><a href=\"#奇偶\" class=\"headerlink\" title=\"奇偶\"></a>奇偶</h1><p>ng-class-even 和 ng-class-odd 是和 ng-repeat 配合使用的：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;ul ng-init=&quot;l=[1,2,3,4]&quot;&gt;</div><div class=\"line\">  &lt;li ng-class-odd=&quot;&apos;odd&apos;&quot; ng-class-even=&quot;&apos;even&apos;&quot; ng-repeat=&quot;m in l&quot;&gt;&#123;&#123; m &#125;&#125;&lt;/li&gt;</div><div class=\"line\">&lt;/ul&gt;</div></pre></td></tr></table></figure>\n<h1 id=\"赋值\"><a href=\"#赋值\" class=\"headerlink\" title=\"赋值\"></a>赋值</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div ng-controller=&quot;TestCtrl&quot; ng-init=&quot;a=[1,2,3,4];&quot;&gt;</div><div class=\"line\">  &lt;ul ng-repeat=&quot;member in a&quot;&gt;</div><div class=\"line\">    &lt;li&gt;&#123;&#123; member &#125;&#125;&lt;/li&gt;</div><div class=\"line\">  &lt;/ul&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"重复\"><a href=\"#重复\" class=\"headerlink\" title=\"重复\"></a>重复</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$index 当前索引</div><div class=\"line\">$first 是否为头元素</div><div class=\"line\">$middle 是否为非头非尾元素</div><div class=\"line\">$last 是否为尾元素</div></pre></td></tr></table></figure>\n<p>例子一:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div ng-controller=&quot;TestCtrl&quot;&gt;</div><div class=\"line\">  &lt;ul ng-repeat=&quot;member in obj_list&quot;&gt;</div><div class=\"line\">    &lt;li&gt;&#123;&#123; member &#125;&#125;&lt;/li&gt;</div><div class=\"line\">  &lt;/ul&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">angular.module(&apos;app&apos;, [], angular.noop)</div><div class=\"line\">.controller(&apos;TestCtrl&apos;, function($scope)&#123;</div><div class=\"line\">    $scope.obj_list = [1,2,3,4];</div><div class=\"line\">&#125;);</div><div class=\"line\">angular.bootstrap(document.documentElement, [&apos;app&apos;]);</div></pre></td></tr></table></figure>\n<p>例子二:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div ng-controller=&quot;TestCtrl&quot;&gt;</div><div class=\"line\">  &lt;ul ng-repeat=&quot;member in obj_list&quot;&gt;</div><div class=\"line\">    &lt;li&gt;&#123;&#123; $index &#125;&#125;, &#123;&#123; member.name &#125;&#125;&lt;/li&gt;</div><div class=\"line\">  &lt;/ul&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">angular.module(&apos;app&apos;, [], angular.noop)</div><div class=\"line\">.controller(&apos;TestCtrl&apos;, function($scope)&#123;</div><div class=\"line\">    $scope.obj_list = [&#123;name: &apos;A&apos;&#125;, &#123;name: &apos;B&apos;&#125;, &#123;name: &apos;C&apos;&#125;];</div><div class=\"line\">&#125;);</div><div class=\"line\">angular.bootstrap(document.documentElement, [&apos;app&apos;]);</div></pre></td></tr></table></figure>\n<h1 id=\"奇偶\"><a href=\"#奇偶\" class=\"headerlink\" title=\"奇偶\"></a>奇偶</h1><p>ng-class-even 和 ng-class-odd 是和 ng-repeat 配合使用的：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;ul ng-init=&quot;l=[1,2,3,4]&quot;&gt;</div><div class=\"line\">  &lt;li ng-class-odd=&quot;&apos;odd&apos;&quot; ng-class-even=&quot;&apos;even&apos;&quot; ng-repeat=&quot;m in l&quot;&gt;&#123;&#123; m &#125;&#125;&lt;/li&gt;</div><div class=\"line\">&lt;/ul&gt;</div></pre></td></tr></table></figure>\n<h1 id=\"赋值\"><a href=\"#赋值\" class=\"headerlink\" title=\"赋值\"></a>赋值</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div ng-controller=&quot;TestCtrl&quot; ng-init=&quot;a=[1,2,3,4];&quot;&gt;</div><div class=\"line\">  &lt;ul ng-repeat=&quot;member in a&quot;&gt;</div><div class=\"line\">    &lt;li&gt;&#123;&#123; member &#125;&#125;&lt;/li&gt;</div><div class=\"line\">  &lt;/ul&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n"},{"_content":"```\n<!doctype html>\n<html lang=\"zh\" ng-app>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>demo</title>\n</head>\n<body>\nYour name: <input type=\"text\" ng-model=\"yourname\" placeholder=\"World\">\n<hr>\nHello {{yourname || 'xudaolong'}}!\n<script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.5.6/angular.min.js\"></script>\n</body>\n</html>\n```\n","source":"_posts/angular-入门.md","raw":"```\n<!doctype html>\n<html lang=\"zh\" ng-app>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>demo</title>\n</head>\n<body>\nYour name: <input type=\"text\" ng-model=\"yourname\" placeholder=\"World\">\n<hr>\nHello {{yourname || 'xudaolong'}}!\n<script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.5.6/angular.min.js\"></script>\n</body>\n</html>\n```\n","slug":"angular-入门","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ciye48orj000bch0od03pxnum","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!doctype html&gt;</div><div class=\"line\">&lt;html lang=&quot;zh&quot; ng-app&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class=\"line\">    &lt;title&gt;demo&lt;/title&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">Your name: &lt;input type=&quot;text&quot; ng-model=&quot;yourname&quot; placeholder=&quot;World&quot;&gt;</div><div class=\"line\">&lt;hr&gt;</div><div class=\"line\">Hello &#123;&#123;yourname || &apos;xudaolong&apos;&#125;&#125;!</div><div class=\"line\">&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/angularjs/1.5.6/angular.min.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!doctype html&gt;</div><div class=\"line\">&lt;html lang=&quot;zh&quot; ng-app&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class=\"line\">    &lt;title&gt;demo&lt;/title&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">Your name: &lt;input type=&quot;text&quot; ng-model=&quot;yourname&quot; placeholder=&quot;World&quot;&gt;</div><div class=\"line\">&lt;hr&gt;</div><div class=\"line\">Hello &#123;&#123;yourname || &apos;xudaolong&apos;&#125;&#125;!</div><div class=\"line\">&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/angularjs/1.5.6/angular.min.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n"},{"_content":"```\nng-change\nng-click\nng-dblclick\nng-mousedown\nng-mouseenter\nng-mouseleave\nng-mousemove\nng-mouseover\nng-mouseup\nng-submit\n```\n\n对于事件对象本身，在函数调用时可以直接使用 $event 进行传递：\n```\n<p ng-click=\"click($event)\">点击</p>\n<p ng-click=\"click($event.target)\">点击</p>\n```\n","source":"_posts/angular-事件绑定.md","raw":"```\nng-change\nng-click\nng-dblclick\nng-mousedown\nng-mouseenter\nng-mouseleave\nng-mousemove\nng-mouseover\nng-mouseup\nng-submit\n```\n\n对于事件对象本身，在函数调用时可以直接使用 $event 进行传递：\n```\n<p ng-click=\"click($event)\">点击</p>\n<p ng-click=\"click($event.target)\">点击</p>\n```\n","slug":"angular-事件绑定","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ciye48ork000cch0oeu1w1peo","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">ng-change</div><div class=\"line\">ng-click</div><div class=\"line\">ng-dblclick</div><div class=\"line\">ng-mousedown</div><div class=\"line\">ng-mouseenter</div><div class=\"line\">ng-mouseleave</div><div class=\"line\">ng-mousemove</div><div class=\"line\">ng-mouseover</div><div class=\"line\">ng-mouseup</div><div class=\"line\">ng-submit</div></pre></td></tr></table></figure>\n<p>对于事件对象本身，在函数调用时可以直接使用 $event 进行传递：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;p ng-click=&quot;click($event)&quot;&gt;点击&lt;/p&gt;</div><div class=\"line\">&lt;p ng-click=&quot;click($event.target)&quot;&gt;点击&lt;/p&gt;</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">ng-change</div><div class=\"line\">ng-click</div><div class=\"line\">ng-dblclick</div><div class=\"line\">ng-mousedown</div><div class=\"line\">ng-mouseenter</div><div class=\"line\">ng-mouseleave</div><div class=\"line\">ng-mousemove</div><div class=\"line\">ng-mouseover</div><div class=\"line\">ng-mouseup</div><div class=\"line\">ng-submit</div></pre></td></tr></table></figure>\n<p>对于事件对象本身，在函数调用时可以直接使用 $event 进行传递：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;p ng-click=&quot;click($event)&quot;&gt;点击&lt;/p&gt;</div><div class=\"line\">&lt;p ng-click=&quot;click($event.target)&quot;&gt;点击&lt;/p&gt;</div></pre></td></tr></table></figure></p>\n"},{"_content":"# 指令使用如下,由restrict控制\n \n```\nE 元素方式 <my-directive></my-directive>\nA 属性方式 <div my-directive=\"exp\"> </div>\nC 类方式 <div class=\"my-directive: exp;\"></div>\nM 注释方式 <!-- directive: my-directive exp -->\n```\n\n# 指令执行过程: 解析DOM结构-->$compile-->执行link函数\n\n$compile 涉及: 变量占位符-指令-compile函数\n\n# 指令的构造应该返回对象,若是函数则是作为compile的返回值\n\n```\nname:controller的名字\npriority:权重,决定兄弟节点的执行compile的顺序\nterminal:若为true,则权重小于但不等于的该节点的节点不会被执行.\nscope:false 节点的 scope ， true 继承创建一个新的 scope ， {} 不继承创建一个新的隔离 scope 。 {@attr: '引用节点属性', =attr: '把节点属性值引用成scope属性值', &attr: '把节点属性值包装成函数'}\ncontroller:为指令自定义一个controller,function controller($scope, $element, $attrs, $transclude) { ... }\nrequire:?name 忽略不存在的错误， ^name 在父级查找\nrestrict\ntemplate:模板内容\ntemplateUrl:模板地址\nreplace:true 替换整个节点， false 替换节点内容\ntransclude:'element' 或 true 两种值 \ncompile\nlink\n```\n\n# 关于动态渲染修改变量\n\n```\napp.directive('color', function(){\n  var link = function($scope, $element, $attrs){\n    $scope.$watch($attrs.color, function(new_v){\n      $element.css('color', new_v);\n    });\n  }\n  return link;\n});\n```\n\n# attributes对象\n\n```\n$element 属性所在的节点。\n$attr 所有的属性值（类型是对象）。\n$normalize 一个名字标准化的工具函数，可以把 ng-click 变成 ngClick 。\n$observe 为属性注册侦听器的函数。\n$set 设置对象属性，及节点属性的工具。\n```\n\n\n","source":"_posts/angular-自定义指令.md","raw":"# 指令使用如下,由restrict控制\n \n```\nE 元素方式 <my-directive></my-directive>\nA 属性方式 <div my-directive=\"exp\"> </div>\nC 类方式 <div class=\"my-directive: exp;\"></div>\nM 注释方式 <!-- directive: my-directive exp -->\n```\n\n# 指令执行过程: 解析DOM结构-->$compile-->执行link函数\n\n$compile 涉及: 变量占位符-指令-compile函数\n\n# 指令的构造应该返回对象,若是函数则是作为compile的返回值\n\n```\nname:controller的名字\npriority:权重,决定兄弟节点的执行compile的顺序\nterminal:若为true,则权重小于但不等于的该节点的节点不会被执行.\nscope:false 节点的 scope ， true 继承创建一个新的 scope ， {} 不继承创建一个新的隔离 scope 。 {@attr: '引用节点属性', =attr: '把节点属性值引用成scope属性值', &attr: '把节点属性值包装成函数'}\ncontroller:为指令自定义一个controller,function controller($scope, $element, $attrs, $transclude) { ... }\nrequire:?name 忽略不存在的错误， ^name 在父级查找\nrestrict\ntemplate:模板内容\ntemplateUrl:模板地址\nreplace:true 替换整个节点， false 替换节点内容\ntransclude:'element' 或 true 两种值 \ncompile\nlink\n```\n\n# 关于动态渲染修改变量\n\n```\napp.directive('color', function(){\n  var link = function($scope, $element, $attrs){\n    $scope.$watch($attrs.color, function(new_v){\n      $element.css('color', new_v);\n    });\n  }\n  return link;\n});\n```\n\n# attributes对象\n\n```\n$element 属性所在的节点。\n$attr 所有的属性值（类型是对象）。\n$normalize 一个名字标准化的工具函数，可以把 ng-click 变成 ngClick 。\n$observe 为属性注册侦听器的函数。\n$set 设置对象属性，及节点属性的工具。\n```\n\n\n","slug":"angular-自定义指令","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ciye48orl000dch0ohwwbvi5y","content":"<h1 id=\"指令使用如下-由restrict控制\"><a href=\"#指令使用如下-由restrict控制\" class=\"headerlink\" title=\"指令使用如下,由restrict控制\"></a>指令使用如下,由restrict控制</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">E 元素方式 &lt;my-directive&gt;&lt;/my-directive&gt;</div><div class=\"line\">A 属性方式 &lt;div my-directive=&quot;exp&quot;&gt; &lt;/div&gt;</div><div class=\"line\">C 类方式 &lt;div class=&quot;my-directive: exp;&quot;&gt;&lt;/div&gt;</div><div class=\"line\">M 注释方式 &lt;!-- directive: my-directive exp --&gt;</div></pre></td></tr></table></figure>\n<h1 id=\"指令执行过程-解析DOM结构–-gt-compile–-gt-执行link函数\"><a href=\"#指令执行过程-解析DOM结构–-gt-compile–-gt-执行link函数\" class=\"headerlink\" title=\"指令执行过程: 解析DOM结构–&gt;$compile–&gt;执行link函数\"></a>指令执行过程: 解析DOM结构–&gt;$compile–&gt;执行link函数</h1><p>$compile 涉及: 变量占位符-指令-compile函数</p>\n<h1 id=\"指令的构造应该返回对象-若是函数则是作为compile的返回值\"><a href=\"#指令的构造应该返回对象-若是函数则是作为compile的返回值\" class=\"headerlink\" title=\"指令的构造应该返回对象,若是函数则是作为compile的返回值\"></a>指令的构造应该返回对象,若是函数则是作为compile的返回值</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">name:controller的名字</div><div class=\"line\">priority:权重,决定兄弟节点的执行compile的顺序</div><div class=\"line\">terminal:若为true,则权重小于但不等于的该节点的节点不会被执行.</div><div class=\"line\">scope:false 节点的 scope ， true 继承创建一个新的 scope ， &#123;&#125; 不继承创建一个新的隔离 scope 。 &#123;@attr: &apos;引用节点属性&apos;, =attr: &apos;把节点属性值引用成scope属性值&apos;, &amp;attr: &apos;把节点属性值包装成函数&apos;&#125;</div><div class=\"line\">controller:为指令自定义一个controller,function controller($scope, $element, $attrs, $transclude) &#123; ... &#125;</div><div class=\"line\">require:?name 忽略不存在的错误， ^name 在父级查找</div><div class=\"line\">restrict</div><div class=\"line\">template:模板内容</div><div class=\"line\">templateUrl:模板地址</div><div class=\"line\">replace:true 替换整个节点， false 替换节点内容</div><div class=\"line\">transclude:&apos;element&apos; 或 true 两种值 </div><div class=\"line\">compile</div><div class=\"line\">link</div></pre></td></tr></table></figure>\n<h1 id=\"关于动态渲染修改变量\"><a href=\"#关于动态渲染修改变量\" class=\"headerlink\" title=\"关于动态渲染修改变量\"></a>关于动态渲染修改变量</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">app.directive(&apos;color&apos;, function()&#123;</div><div class=\"line\">  var link = function($scope, $element, $attrs)&#123;</div><div class=\"line\">    $scope.$watch($attrs.color, function(new_v)&#123;</div><div class=\"line\">      $element.css(&apos;color&apos;, new_v);</div><div class=\"line\">    &#125;);</div><div class=\"line\">  &#125;</div><div class=\"line\">  return link;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h1 id=\"attributes对象\"><a href=\"#attributes对象\" class=\"headerlink\" title=\"attributes对象\"></a>attributes对象</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$element 属性所在的节点。</div><div class=\"line\">$attr 所有的属性值（类型是对象）。</div><div class=\"line\">$normalize 一个名字标准化的工具函数，可以把 ng-click 变成 ngClick 。</div><div class=\"line\">$observe 为属性注册侦听器的函数。</div><div class=\"line\">$set 设置对象属性，及节点属性的工具。</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"指令使用如下-由restrict控制\"><a href=\"#指令使用如下-由restrict控制\" class=\"headerlink\" title=\"指令使用如下,由restrict控制\"></a>指令使用如下,由restrict控制</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">E 元素方式 &lt;my-directive&gt;&lt;/my-directive&gt;</div><div class=\"line\">A 属性方式 &lt;div my-directive=&quot;exp&quot;&gt; &lt;/div&gt;</div><div class=\"line\">C 类方式 &lt;div class=&quot;my-directive: exp;&quot;&gt;&lt;/div&gt;</div><div class=\"line\">M 注释方式 &lt;!-- directive: my-directive exp --&gt;</div></pre></td></tr></table></figure>\n<h1 id=\"指令执行过程-解析DOM结构–-gt-compile–-gt-执行link函数\"><a href=\"#指令执行过程-解析DOM结构–-gt-compile–-gt-执行link函数\" class=\"headerlink\" title=\"指令执行过程: 解析DOM结构–&gt;$compile–&gt;执行link函数\"></a>指令执行过程: 解析DOM结构–&gt;$compile–&gt;执行link函数</h1><p>$compile 涉及: 变量占位符-指令-compile函数</p>\n<h1 id=\"指令的构造应该返回对象-若是函数则是作为compile的返回值\"><a href=\"#指令的构造应该返回对象-若是函数则是作为compile的返回值\" class=\"headerlink\" title=\"指令的构造应该返回对象,若是函数则是作为compile的返回值\"></a>指令的构造应该返回对象,若是函数则是作为compile的返回值</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">name:controller的名字</div><div class=\"line\">priority:权重,决定兄弟节点的执行compile的顺序</div><div class=\"line\">terminal:若为true,则权重小于但不等于的该节点的节点不会被执行.</div><div class=\"line\">scope:false 节点的 scope ， true 继承创建一个新的 scope ， &#123;&#125; 不继承创建一个新的隔离 scope 。 &#123;@attr: &apos;引用节点属性&apos;, =attr: &apos;把节点属性值引用成scope属性值&apos;, &amp;attr: &apos;把节点属性值包装成函数&apos;&#125;</div><div class=\"line\">controller:为指令自定义一个controller,function controller($scope, $element, $attrs, $transclude) &#123; ... &#125;</div><div class=\"line\">require:?name 忽略不存在的错误， ^name 在父级查找</div><div class=\"line\">restrict</div><div class=\"line\">template:模板内容</div><div class=\"line\">templateUrl:模板地址</div><div class=\"line\">replace:true 替换整个节点， false 替换节点内容</div><div class=\"line\">transclude:&apos;element&apos; 或 true 两种值 </div><div class=\"line\">compile</div><div class=\"line\">link</div></pre></td></tr></table></figure>\n<h1 id=\"关于动态渲染修改变量\"><a href=\"#关于动态渲染修改变量\" class=\"headerlink\" title=\"关于动态渲染修改变量\"></a>关于动态渲染修改变量</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">app.directive(&apos;color&apos;, function()&#123;</div><div class=\"line\">  var link = function($scope, $element, $attrs)&#123;</div><div class=\"line\">    $scope.$watch($attrs.color, function(new_v)&#123;</div><div class=\"line\">      $element.css(&apos;color&apos;, new_v);</div><div class=\"line\">    &#125;);</div><div class=\"line\">  &#125;</div><div class=\"line\">  return link;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h1 id=\"attributes对象\"><a href=\"#attributes对象\" class=\"headerlink\" title=\"attributes对象\"></a>attributes对象</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$element 属性所在的节点。</div><div class=\"line\">$attr 所有的属性值（类型是对象）。</div><div class=\"line\">$normalize 一个名字标准化的工具函数，可以把 ng-click 变成 ngClick 。</div><div class=\"line\">$observe 为属性注册侦听器的函数。</div><div class=\"line\">$set 设置对象属性，及节点属性的工具。</div></pre></td></tr></table></figure>\n"},{"_content":"# 归属module 代表常量\n\n```\nvar app = angular.module('myapp', []).value('testvalue', 'widuu').constant('count', 23).service('testservice',\nfunction(testvalue, count) {\n    this.lable = function() {\n        return \"this will output:hello \" + testvalue + \",age is \" + count;\n    }\n});\napp.controller('mytest',\nfunction($scope, testvalue, testservice) {\n    $scope.test = \"hello \" + testvalue;\n    $scope.output = testservice.lable();\n});\n\n```\n","source":"_posts/angular-constant.md","raw":"# 归属module 代表常量\n\n```\nvar app = angular.module('myapp', []).value('testvalue', 'widuu').constant('count', 23).service('testservice',\nfunction(testvalue, count) {\n    this.lable = function() {\n        return \"this will output:hello \" + testvalue + \",age is \" + count;\n    }\n});\napp.controller('mytest',\nfunction($scope, testvalue, testservice) {\n    $scope.test = \"hello \" + testvalue;\n    $scope.output = testservice.lable();\n});\n\n```\n","slug":"angular-constant","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ciye48orl000ech0o26n86p3l","content":"<h1 id=\"归属module-代表常量\"><a href=\"#归属module-代表常量\" class=\"headerlink\" title=\"归属module 代表常量\"></a>归属module 代表常量</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">var app = angular.module(&apos;myapp&apos;, []).value(&apos;testvalue&apos;, &apos;widuu&apos;).constant(&apos;count&apos;, 23).service(&apos;testservice&apos;,</div><div class=\"line\">function(testvalue, count) &#123;</div><div class=\"line\">    this.lable = function() &#123;</div><div class=\"line\">        return &quot;this will output:hello &quot; + testvalue + &quot;,age is &quot; + count;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\">app.controller(&apos;mytest&apos;,</div><div class=\"line\">function($scope, testvalue, testservice) &#123;</div><div class=\"line\">    $scope.test = &quot;hello &quot; + testvalue;</div><div class=\"line\">    $scope.output = testservice.lable();</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"归属module-代表常量\"><a href=\"#归属module-代表常量\" class=\"headerlink\" title=\"归属module 代表常量\"></a>归属module 代表常量</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">var app = angular.module(&apos;myapp&apos;, []).value(&apos;testvalue&apos;, &apos;widuu&apos;).constant(&apos;count&apos;, 23).service(&apos;testservice&apos;,</div><div class=\"line\">function(testvalue, count) &#123;</div><div class=\"line\">    this.lable = function() &#123;</div><div class=\"line\">        return &quot;this will output:hello &quot; + testvalue + &quot;,age is &quot; + count;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\">app.controller(&apos;mytest&apos;,</div><div class=\"line\">function($scope, testvalue, testservice) &#123;</div><div class=\"line\">    $scope.test = &quot;hello &quot; + testvalue;</div><div class=\"line\">    $scope.output = testservice.lable();</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n"},{"_content":"# 是module的方法\n# controller(name, constructor); \n# 前者是名字,后者是构造函数\n# 不同的controller中变量相同引用不同\n\n\n```\n<body style=\"padding:10px;\" ng-app=\"app\">\n<div ng-controller=\"FirstCtrl\">\n<input type=\"text\"ng-model=\"msg\">\n<h1>{{msg}}</h1>\n<br>\n<h1 ng-bind=\"msg\"></h1>\n<!--可以使用ng-bind进行绑定，这样就不需要输入{{}}-->\n</div>\n<div ng-controller=\"SecondCtrl\">\n<input type=\"text\" ng-model=\"msg\">\n<h1>{{msg}}</h1>\n<!--同样是msg，但是显示的不同这就是控制器作用域的问题，这个msg绑定的是SecondCtrl-->\n</div>\n</body> \n```\n\n\n```\nangular.module('app',[])\n.controller('FirstCtrl',function($scope){\n    $scope.msg=\"hello angular\";\n})\n.controller('SecondCtrl',function($scope){\n    $scope.msg=\"hello angularjs\"\n})\n```\n\n\n# 比较正式的控制器\n```\nangular.module('myApp', []).controller('userCtrl', function($scope) {\n$scope.fName = '';\n$scope.lName = '';\n$scope.passw1 = '';\n$scope.passw2 = '';\n$scope.users = [\n{id:1, fName:'Hege',lName:\"Pege\" },\n{id:2, fName:'Kim',lName:\"Pim\" },\n{id:3, fName:'Sal',lName:\"Smith\" },\n{id:4, fName:'Jack',lName:\"Jones\" },\n{id:5, fName:'John',lName:\"Doe\" },\n{id:6, fName:'Peter',lName:\"Pan\" }\n];\n$scope.edit = true;\n$scope.error = false;\n$scope.incomplete = false; \n$scope.editUser = function(id) {\n  if (id == 'new') {\n    $scope.edit = true;\n    $scope.incomplete = true;\n    $scope.fName = '';\n    $scope.lName = '';\n    } else {\n    $scope.edit = false;\n    $scope.fName = $scope.users[id-1].fName;\n    $scope.lName = $scope.users[id-1].lName; \n  }\n};\n\n$scope.$watch('passw1',function() {$scope.test();});\n$scope.$watch('passw2',function() {$scope.test();});\n$scope.$watch('fName',function() {$scope.test();});\n$scope.$watch('lName',function() {$scope.test();});\n\n$scope.test = function() {\n  if ($scope.passw1 !== $scope.passw2) {\n    $scope.error = true;\n    } else {\n    $scope.error = false;\n  }\n  $scope.incomplete = false;\n  if ($scope.edit && (!$scope.fName.length ||\n    !$scope.lName.length ||\n    !$scope.passw1.length || !$scope.passw2.length)) {\n    $scope.incomplete = true;\n  }\n};\n})\n\n```\n","source":"_posts/angular-controller.md","raw":"# 是module的方法\n# controller(name, constructor); \n# 前者是名字,后者是构造函数\n# 不同的controller中变量相同引用不同\n\n\n```\n<body style=\"padding:10px;\" ng-app=\"app\">\n<div ng-controller=\"FirstCtrl\">\n<input type=\"text\"ng-model=\"msg\">\n<h1>{{msg}}</h1>\n<br>\n<h1 ng-bind=\"msg\"></h1>\n<!--可以使用ng-bind进行绑定，这样就不需要输入{{}}-->\n</div>\n<div ng-controller=\"SecondCtrl\">\n<input type=\"text\" ng-model=\"msg\">\n<h1>{{msg}}</h1>\n<!--同样是msg，但是显示的不同这就是控制器作用域的问题，这个msg绑定的是SecondCtrl-->\n</div>\n</body> \n```\n\n\n```\nangular.module('app',[])\n.controller('FirstCtrl',function($scope){\n    $scope.msg=\"hello angular\";\n})\n.controller('SecondCtrl',function($scope){\n    $scope.msg=\"hello angularjs\"\n})\n```\n\n\n# 比较正式的控制器\n```\nangular.module('myApp', []).controller('userCtrl', function($scope) {\n$scope.fName = '';\n$scope.lName = '';\n$scope.passw1 = '';\n$scope.passw2 = '';\n$scope.users = [\n{id:1, fName:'Hege',lName:\"Pege\" },\n{id:2, fName:'Kim',lName:\"Pim\" },\n{id:3, fName:'Sal',lName:\"Smith\" },\n{id:4, fName:'Jack',lName:\"Jones\" },\n{id:5, fName:'John',lName:\"Doe\" },\n{id:6, fName:'Peter',lName:\"Pan\" }\n];\n$scope.edit = true;\n$scope.error = false;\n$scope.incomplete = false; \n$scope.editUser = function(id) {\n  if (id == 'new') {\n    $scope.edit = true;\n    $scope.incomplete = true;\n    $scope.fName = '';\n    $scope.lName = '';\n    } else {\n    $scope.edit = false;\n    $scope.fName = $scope.users[id-1].fName;\n    $scope.lName = $scope.users[id-1].lName; \n  }\n};\n\n$scope.$watch('passw1',function() {$scope.test();});\n$scope.$watch('passw2',function() {$scope.test();});\n$scope.$watch('fName',function() {$scope.test();});\n$scope.$watch('lName',function() {$scope.test();});\n\n$scope.test = function() {\n  if ($scope.passw1 !== $scope.passw2) {\n    $scope.error = true;\n    } else {\n    $scope.error = false;\n  }\n  $scope.incomplete = false;\n  if ($scope.edit && (!$scope.fName.length ||\n    !$scope.lName.length ||\n    !$scope.passw1.length || !$scope.passw2.length)) {\n    $scope.incomplete = true;\n  }\n};\n})\n\n```\n","slug":"angular-controller","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ciye48orm000fch0on6dj3u0i","content":"<h1 id=\"是module的方法\"><a href=\"#是module的方法\" class=\"headerlink\" title=\"是module的方法\"></a>是module的方法</h1><h1 id=\"controller-name-constructor\"><a href=\"#controller-name-constructor\" class=\"headerlink\" title=\"controller(name, constructor);\"></a>controller(name, constructor);</h1><h1 id=\"前者是名字-后者是构造函数\"><a href=\"#前者是名字-后者是构造函数\" class=\"headerlink\" title=\"前者是名字,后者是构造函数\"></a>前者是名字,后者是构造函数</h1><h1 id=\"不同的controller中变量相同引用不同\"><a href=\"#不同的controller中变量相同引用不同\" class=\"headerlink\" title=\"不同的controller中变量相同引用不同\"></a>不同的controller中变量相同引用不同</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;body style=&quot;padding:10px;&quot; ng-app=&quot;app&quot;&gt;</div><div class=\"line\">&lt;div ng-controller=&quot;FirstCtrl&quot;&gt;</div><div class=\"line\">&lt;input type=&quot;text&quot;ng-model=&quot;msg&quot;&gt;</div><div class=\"line\">&lt;h1&gt;&#123;&#123;msg&#125;&#125;&lt;/h1&gt;</div><div class=\"line\">&lt;br&gt;</div><div class=\"line\">&lt;h1 ng-bind=&quot;msg&quot;&gt;&lt;/h1&gt;</div><div class=\"line\">&lt;!--可以使用ng-bind进行绑定，这样就不需要输入&#123;&#123;&#125;&#125;--&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\">&lt;div ng-controller=&quot;SecondCtrl&quot;&gt;</div><div class=\"line\">&lt;input type=&quot;text&quot; ng-model=&quot;msg&quot;&gt;</div><div class=\"line\">&lt;h1&gt;&#123;&#123;msg&#125;&#125;&lt;/h1&gt;</div><div class=\"line\">&lt;!--同样是msg，但是显示的不同这就是控制器作用域的问题，这个msg绑定的是SecondCtrl--&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\">&lt;/body&gt;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">angular.module(&apos;app&apos;,[])</div><div class=\"line\">.controller(&apos;FirstCtrl&apos;,function($scope)&#123;</div><div class=\"line\">    $scope.msg=&quot;hello angular&quot;;</div><div class=\"line\">&#125;)</div><div class=\"line\">.controller(&apos;SecondCtrl&apos;,function($scope)&#123;</div><div class=\"line\">    $scope.msg=&quot;hello angularjs&quot;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h1 id=\"比较正式的控制器\"><a href=\"#比较正式的控制器\" class=\"headerlink\" title=\"比较正式的控制器\"></a>比较正式的控制器</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\">angular.module(&apos;myApp&apos;, []).controller(&apos;userCtrl&apos;, function($scope) &#123;</div><div class=\"line\">$scope.fName = &apos;&apos;;</div><div class=\"line\">$scope.lName = &apos;&apos;;</div><div class=\"line\">$scope.passw1 = &apos;&apos;;</div><div class=\"line\">$scope.passw2 = &apos;&apos;;</div><div class=\"line\">$scope.users = [</div><div class=\"line\">&#123;id:1, fName:&apos;Hege&apos;,lName:&quot;Pege&quot; &#125;,</div><div class=\"line\">&#123;id:2, fName:&apos;Kim&apos;,lName:&quot;Pim&quot; &#125;,</div><div class=\"line\">&#123;id:3, fName:&apos;Sal&apos;,lName:&quot;Smith&quot; &#125;,</div><div class=\"line\">&#123;id:4, fName:&apos;Jack&apos;,lName:&quot;Jones&quot; &#125;,</div><div class=\"line\">&#123;id:5, fName:&apos;John&apos;,lName:&quot;Doe&quot; &#125;,</div><div class=\"line\">&#123;id:6, fName:&apos;Peter&apos;,lName:&quot;Pan&quot; &#125;</div><div class=\"line\">];</div><div class=\"line\">$scope.edit = true;</div><div class=\"line\">$scope.error = false;</div><div class=\"line\">$scope.incomplete = false; </div><div class=\"line\">$scope.editUser = function(id) &#123;</div><div class=\"line\">  if (id == &apos;new&apos;) &#123;</div><div class=\"line\">    $scope.edit = true;</div><div class=\"line\">    $scope.incomplete = true;</div><div class=\"line\">    $scope.fName = &apos;&apos;;</div><div class=\"line\">    $scope.lName = &apos;&apos;;</div><div class=\"line\">    &#125; else &#123;</div><div class=\"line\">    $scope.edit = false;</div><div class=\"line\">    $scope.fName = $scope.users[id-1].fName;</div><div class=\"line\">    $scope.lName = $scope.users[id-1].lName; </div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">$scope.$watch(&apos;passw1&apos;,function() &#123;$scope.test();&#125;);</div><div class=\"line\">$scope.$watch(&apos;passw2&apos;,function() &#123;$scope.test();&#125;);</div><div class=\"line\">$scope.$watch(&apos;fName&apos;,function() &#123;$scope.test();&#125;);</div><div class=\"line\">$scope.$watch(&apos;lName&apos;,function() &#123;$scope.test();&#125;);</div><div class=\"line\"></div><div class=\"line\">$scope.test = function() &#123;</div><div class=\"line\">  if ($scope.passw1 !== $scope.passw2) &#123;</div><div class=\"line\">    $scope.error = true;</div><div class=\"line\">    &#125; else &#123;</div><div class=\"line\">    $scope.error = false;</div><div class=\"line\">  &#125;</div><div class=\"line\">  $scope.incomplete = false;</div><div class=\"line\">  if ($scope.edit &amp;&amp; (!$scope.fName.length ||</div><div class=\"line\">    !$scope.lName.length ||</div><div class=\"line\">    !$scope.passw1.length || !$scope.passw2.length)) &#123;</div><div class=\"line\">    $scope.incomplete = true;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"是module的方法\"><a href=\"#是module的方法\" class=\"headerlink\" title=\"是module的方法\"></a>是module的方法</h1><h1 id=\"controller-name-constructor\"><a href=\"#controller-name-constructor\" class=\"headerlink\" title=\"controller(name, constructor);\"></a>controller(name, constructor);</h1><h1 id=\"前者是名字-后者是构造函数\"><a href=\"#前者是名字-后者是构造函数\" class=\"headerlink\" title=\"前者是名字,后者是构造函数\"></a>前者是名字,后者是构造函数</h1><h1 id=\"不同的controller中变量相同引用不同\"><a href=\"#不同的controller中变量相同引用不同\" class=\"headerlink\" title=\"不同的controller中变量相同引用不同\"></a>不同的controller中变量相同引用不同</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;body style=&quot;padding:10px;&quot; ng-app=&quot;app&quot;&gt;</div><div class=\"line\">&lt;div ng-controller=&quot;FirstCtrl&quot;&gt;</div><div class=\"line\">&lt;input type=&quot;text&quot;ng-model=&quot;msg&quot;&gt;</div><div class=\"line\">&lt;h1&gt;&#123;&#123;msg&#125;&#125;&lt;/h1&gt;</div><div class=\"line\">&lt;br&gt;</div><div class=\"line\">&lt;h1 ng-bind=&quot;msg&quot;&gt;&lt;/h1&gt;</div><div class=\"line\">&lt;!--可以使用ng-bind进行绑定，这样就不需要输入&#123;&#123;&#125;&#125;--&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\">&lt;div ng-controller=&quot;SecondCtrl&quot;&gt;</div><div class=\"line\">&lt;input type=&quot;text&quot; ng-model=&quot;msg&quot;&gt;</div><div class=\"line\">&lt;h1&gt;&#123;&#123;msg&#125;&#125;&lt;/h1&gt;</div><div class=\"line\">&lt;!--同样是msg，但是显示的不同这就是控制器作用域的问题，这个msg绑定的是SecondCtrl--&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\">&lt;/body&gt;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">angular.module(&apos;app&apos;,[])</div><div class=\"line\">.controller(&apos;FirstCtrl&apos;,function($scope)&#123;</div><div class=\"line\">    $scope.msg=&quot;hello angular&quot;;</div><div class=\"line\">&#125;)</div><div class=\"line\">.controller(&apos;SecondCtrl&apos;,function($scope)&#123;</div><div class=\"line\">    $scope.msg=&quot;hello angularjs&quot;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h1 id=\"比较正式的控制器\"><a href=\"#比较正式的控制器\" class=\"headerlink\" title=\"比较正式的控制器\"></a>比较正式的控制器</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\">angular.module(&apos;myApp&apos;, []).controller(&apos;userCtrl&apos;, function($scope) &#123;</div><div class=\"line\">$scope.fName = &apos;&apos;;</div><div class=\"line\">$scope.lName = &apos;&apos;;</div><div class=\"line\">$scope.passw1 = &apos;&apos;;</div><div class=\"line\">$scope.passw2 = &apos;&apos;;</div><div class=\"line\">$scope.users = [</div><div class=\"line\">&#123;id:1, fName:&apos;Hege&apos;,lName:&quot;Pege&quot; &#125;,</div><div class=\"line\">&#123;id:2, fName:&apos;Kim&apos;,lName:&quot;Pim&quot; &#125;,</div><div class=\"line\">&#123;id:3, fName:&apos;Sal&apos;,lName:&quot;Smith&quot; &#125;,</div><div class=\"line\">&#123;id:4, fName:&apos;Jack&apos;,lName:&quot;Jones&quot; &#125;,</div><div class=\"line\">&#123;id:5, fName:&apos;John&apos;,lName:&quot;Doe&quot; &#125;,</div><div class=\"line\">&#123;id:6, fName:&apos;Peter&apos;,lName:&quot;Pan&quot; &#125;</div><div class=\"line\">];</div><div class=\"line\">$scope.edit = true;</div><div class=\"line\">$scope.error = false;</div><div class=\"line\">$scope.incomplete = false; </div><div class=\"line\">$scope.editUser = function(id) &#123;</div><div class=\"line\">  if (id == &apos;new&apos;) &#123;</div><div class=\"line\">    $scope.edit = true;</div><div class=\"line\">    $scope.incomplete = true;</div><div class=\"line\">    $scope.fName = &apos;&apos;;</div><div class=\"line\">    $scope.lName = &apos;&apos;;</div><div class=\"line\">    &#125; else &#123;</div><div class=\"line\">    $scope.edit = false;</div><div class=\"line\">    $scope.fName = $scope.users[id-1].fName;</div><div class=\"line\">    $scope.lName = $scope.users[id-1].lName; </div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">$scope.$watch(&apos;passw1&apos;,function() &#123;$scope.test();&#125;);</div><div class=\"line\">$scope.$watch(&apos;passw2&apos;,function() &#123;$scope.test();&#125;);</div><div class=\"line\">$scope.$watch(&apos;fName&apos;,function() &#123;$scope.test();&#125;);</div><div class=\"line\">$scope.$watch(&apos;lName&apos;,function() &#123;$scope.test();&#125;);</div><div class=\"line\"></div><div class=\"line\">$scope.test = function() &#123;</div><div class=\"line\">  if ($scope.passw1 !== $scope.passw2) &#123;</div><div class=\"line\">    $scope.error = true;</div><div class=\"line\">    &#125; else &#123;</div><div class=\"line\">    $scope.error = false;</div><div class=\"line\">  &#125;</div><div class=\"line\">  $scope.incomplete = false;</div><div class=\"line\">  if ($scope.edit &amp;&amp; (!$scope.fName.length ||</div><div class=\"line\">    !$scope.lName.length ||</div><div class=\"line\">    !$scope.passw1.length || !$scope.passw2.length)) &#123;</div><div class=\"line\">    $scope.incomplete = true;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n"},{"_content":"# 归属module (name, providerType)\n# 类似 factory\n# 用于提供一个方法\n\n```\n\nvar app = angular.module('myapp', []).value('testvalue', 'widuu').provider('testprovider',\nfunction() {\n    this.lable = \"this will output : hello widuu\";\n    this.$get = function() {\n        return this;\n    }\n});\napp.controller('mytest',\nfunction($scope, testvalue, testprovider) {\n    $scope.test = \"hello \" + testvalue;\n    $scope.output = testprovider.lable;\n});\n\n```\n","source":"_posts/angular-provider-.md","raw":"# 归属module (name, providerType)\n# 类似 factory\n# 用于提供一个方法\n\n```\n\nvar app = angular.module('myapp', []).value('testvalue', 'widuu').provider('testprovider',\nfunction() {\n    this.lable = \"this will output : hello widuu\";\n    this.$get = function() {\n        return this;\n    }\n});\napp.controller('mytest',\nfunction($scope, testvalue, testprovider) {\n    $scope.test = \"hello \" + testvalue;\n    $scope.output = testprovider.lable;\n});\n\n```\n","slug":"angular-provider-","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ciye4983w000och0oerc43owj","content":"<h1 id=\"归属module-name-providerType\"><a href=\"#归属module-name-providerType\" class=\"headerlink\" title=\"归属module (name, providerType)\"></a>归属module (name, providerType)</h1><h1 id=\"类似-factory\"><a href=\"#类似-factory\" class=\"headerlink\" title=\"类似 factory\"></a>类似 factory</h1><h1 id=\"用于提供一个方法\"><a href=\"#用于提供一个方法\" class=\"headerlink\" title=\"用于提供一个方法\"></a>用于提供一个方法</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">var app = angular.module(&apos;myapp&apos;, []).value(&apos;testvalue&apos;, &apos;widuu&apos;).provider(&apos;testprovider&apos;,</div><div class=\"line\">function() &#123;</div><div class=\"line\">    this.lable = &quot;this will output : hello widuu&quot;;</div><div class=\"line\">    this.$get = function() &#123;</div><div class=\"line\">        return this;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\">app.controller(&apos;mytest&apos;,</div><div class=\"line\">function($scope, testvalue, testprovider) &#123;</div><div class=\"line\">    $scope.test = &quot;hello &quot; + testvalue;</div><div class=\"line\">    $scope.output = testprovider.lable;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"归属module-name-providerType\"><a href=\"#归属module-name-providerType\" class=\"headerlink\" title=\"归属module (name, providerType)\"></a>归属module (name, providerType)</h1><h1 id=\"类似-factory\"><a href=\"#类似-factory\" class=\"headerlink\" title=\"类似 factory\"></a>类似 factory</h1><h1 id=\"用于提供一个方法\"><a href=\"#用于提供一个方法\" class=\"headerlink\" title=\"用于提供一个方法\"></a>用于提供一个方法</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">var app = angular.module(&apos;myapp&apos;, []).value(&apos;testvalue&apos;, &apos;widuu&apos;).provider(&apos;testprovider&apos;,</div><div class=\"line\">function() &#123;</div><div class=\"line\">    this.lable = &quot;this will output : hello widuu&quot;;</div><div class=\"line\">    this.$get = function() &#123;</div><div class=\"line\">        return this;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\">app.controller(&apos;mytest&apos;,</div><div class=\"line\">function($scope, testvalue, testprovider) &#123;</div><div class=\"line\">    $scope.test = &quot;hello &quot; + testvalue;</div><div class=\"line\">    $scope.output = testprovider.lable;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n"},{"_content":" 'A' 仅匹配属性名字 - 'E' 仅匹配元素名字 - 'AE' 可以匹配到属性名字或者元素名\n \n \n 什么时候使用属性名或元素名呢？ 当创建一个含有自己模板的组件的时候，需要使用元素名，如果仅仅是为已有的元素添加功能的话，使用属性名。\n\n使用元素名做为myCustomer指令是非常正确的决定，因为你不是用一些'customer'行为来点缀元素，而是定义一个具有自己行为的元素作为customer组件。\n","source":"_posts/angular-restrict作用.md","raw":" 'A' 仅匹配属性名字 - 'E' 仅匹配元素名字 - 'AE' 可以匹配到属性名字或者元素名\n \n \n 什么时候使用属性名或元素名呢？ 当创建一个含有自己模板的组件的时候，需要使用元素名，如果仅仅是为已有的元素添加功能的话，使用属性名。\n\n使用元素名做为myCustomer指令是非常正确的决定，因为你不是用一些'customer'行为来点缀元素，而是定义一个具有自己行为的元素作为customer组件。\n","slug":"angular-restrict作用","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ciye4983y000pch0ovc5ydlty","content":"<p> ‘A’ 仅匹配属性名字 - ‘E’ 仅匹配元素名字 - ‘AE’ 可以匹配到属性名字或者元素名</p>\n<p> 什么时候使用属性名或元素名呢？ 当创建一个含有自己模板的组件的时候，需要使用元素名，如果仅仅是为已有的元素添加功能的话，使用属性名。</p>\n<p>使用元素名做为myCustomer指令是非常正确的决定，因为你不是用一些’customer’行为来点缀元素，而是定义一个具有自己行为的元素作为customer组件。</p>\n","excerpt":"","more":"<p> ‘A’ 仅匹配属性名字 - ‘E’ 仅匹配元素名字 - ‘AE’ 可以匹配到属性名字或者元素名</p>\n<p> 什么时候使用属性名或元素名呢？ 当创建一个含有自己模板的组件的时候，需要使用元素名，如果仅仅是为已有的元素添加功能的话，使用属性名。</p>\n<p>使用元素名做为myCustomer指令是非常正确的决定，因为你不是用一些’customer’行为来点缀元素，而是定义一个具有自己行为的元素作为customer组件。</p>\n"},{"_content":"# 归属module (name, constructor)\n# 提供一个服务\n# 与factory 相似\n\n```\nvar app = angular.module('myapp', []).value('testvalue', 'widuu').service('testservice',\nfunction(testvalue) {\n    this.lable = function() {\n        return \"this will output:hello \" + testvalue;\n    }\n});\napp.controller('mytest',\nfunction($scope, testvalue, testservice) {\n    $scope.test = \"hello \" + testvalue;\n    $scope.output = testservice.lable();\n});\n\n```\n","source":"_posts/angular-service.md","raw":"# 归属module (name, constructor)\n# 提供一个服务\n# 与factory 相似\n\n```\nvar app = angular.module('myapp', []).value('testvalue', 'widuu').service('testservice',\nfunction(testvalue) {\n    this.lable = function() {\n        return \"this will output:hello \" + testvalue;\n    }\n});\napp.controller('mytest',\nfunction($scope, testvalue, testservice) {\n    $scope.test = \"hello \" + testvalue;\n    $scope.output = testservice.lable();\n});\n\n```\n","slug":"angular-service","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ciye4983y000qch0oa8bl342s","content":"<h1 id=\"归属module-name-constructor\"><a href=\"#归属module-name-constructor\" class=\"headerlink\" title=\"归属module (name, constructor)\"></a>归属module (name, constructor)</h1><h1 id=\"提供一个服务\"><a href=\"#提供一个服务\" class=\"headerlink\" title=\"提供一个服务\"></a>提供一个服务</h1><h1 id=\"与factory-相似\"><a href=\"#与factory-相似\" class=\"headerlink\" title=\"与factory 相似\"></a>与factory 相似</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">var app = angular.module(&apos;myapp&apos;, []).value(&apos;testvalue&apos;, &apos;widuu&apos;).service(&apos;testservice&apos;,</div><div class=\"line\">function(testvalue) &#123;</div><div class=\"line\">    this.lable = function() &#123;</div><div class=\"line\">        return &quot;this will output:hello &quot; + testvalue;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\">app.controller(&apos;mytest&apos;,</div><div class=\"line\">function($scope, testvalue, testservice) &#123;</div><div class=\"line\">    $scope.test = &quot;hello &quot; + testvalue;</div><div class=\"line\">    $scope.output = testservice.lable();</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"归属module-name-constructor\"><a href=\"#归属module-name-constructor\" class=\"headerlink\" title=\"归属module (name, constructor)\"></a>归属module (name, constructor)</h1><h1 id=\"提供一个服务\"><a href=\"#提供一个服务\" class=\"headerlink\" title=\"提供一个服务\"></a>提供一个服务</h1><h1 id=\"与factory-相似\"><a href=\"#与factory-相似\" class=\"headerlink\" title=\"与factory 相似\"></a>与factory 相似</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">var app = angular.module(&apos;myapp&apos;, []).value(&apos;testvalue&apos;, &apos;widuu&apos;).service(&apos;testservice&apos;,</div><div class=\"line\">function(testvalue) &#123;</div><div class=\"line\">    this.lable = function() &#123;</div><div class=\"line\">        return &quot;this will output:hello &quot; + testvalue;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\">app.controller(&apos;mytest&apos;,</div><div class=\"line\">function($scope, testvalue, testservice) &#123;</div><div class=\"line\">    $scope.test = &quot;hello &quot; + testvalue;</div><div class=\"line\">    $scope.output = testservice.lable();</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n"},{"_content":"# 是module的方法\n# 类似键值对的感觉\n# 存储值\n\n\n```\n<body ng-app='myapp' ng-controller='mytest'>\n  <input ng-model='test'>{{test}}</body>\n\n```\n\n\n```\nvar app = angular.module('myapp', []).value('testvalue', 'word');\napp.controller('mytest',\nfunction($scope, testvalue) {\n    $scope.test = \"hello \" + testvalue;\n});\n\n```\n","source":"_posts/angular-value.md","raw":"# 是module的方法\n# 类似键值对的感觉\n# 存储值\n\n\n```\n<body ng-app='myapp' ng-controller='mytest'>\n  <input ng-model='test'>{{test}}</body>\n\n```\n\n\n```\nvar app = angular.module('myapp', []).value('testvalue', 'word');\napp.controller('mytest',\nfunction($scope, testvalue) {\n    $scope.test = \"hello \" + testvalue;\n});\n\n```\n","slug":"angular-value","published":1,"date":"2017-01-26T08:17:50.000Z","updated":"2017-01-26T08:17:50.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ciye49840000rch0ooqg37w9u","content":"<h1 id=\"是module的方法\"><a href=\"#是module的方法\" class=\"headerlink\" title=\"是module的方法\"></a>是module的方法</h1><h1 id=\"类似键值对的感觉\"><a href=\"#类似键值对的感觉\" class=\"headerlink\" title=\"类似键值对的感觉\"></a>类似键值对的感觉</h1><h1 id=\"存储值\"><a href=\"#存储值\" class=\"headerlink\" title=\"存储值\"></a>存储值</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;body ng-app=&apos;myapp&apos; ng-controller=&apos;mytest&apos;&gt;</div><div class=\"line\">  &lt;input ng-model=&apos;test&apos;&gt;&#123;&#123;test&#125;&#125;&lt;/body&gt;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">var app = angular.module(&apos;myapp&apos;, []).value(&apos;testvalue&apos;, &apos;word&apos;);</div><div class=\"line\">app.controller(&apos;mytest&apos;,</div><div class=\"line\">function($scope, testvalue) &#123;</div><div class=\"line\">    $scope.test = &quot;hello &quot; + testvalue;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"是module的方法\"><a href=\"#是module的方法\" class=\"headerlink\" title=\"是module的方法\"></a>是module的方法</h1><h1 id=\"类似键值对的感觉\"><a href=\"#类似键值对的感觉\" class=\"headerlink\" title=\"类似键值对的感觉\"></a>类似键值对的感觉</h1><h1 id=\"存储值\"><a href=\"#存储值\" class=\"headerlink\" title=\"存储值\"></a>存储值</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;body ng-app=&apos;myapp&apos; ng-controller=&apos;mytest&apos;&gt;</div><div class=\"line\">  &lt;input ng-model=&apos;test&apos;&gt;&#123;&#123;test&#125;&#125;&lt;/body&gt;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">var app = angular.module(&apos;myapp&apos;, []).value(&apos;testvalue&apos;, &apos;word&apos;);</div><div class=\"line\">app.controller(&apos;mytest&apos;,</div><div class=\"line\">function($scope, testvalue) &#123;</div><div class=\"line\">    $scope.test = &quot;hello &quot; + testvalue;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}